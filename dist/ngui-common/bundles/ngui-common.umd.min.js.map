{"version":3,"sources":["ng://@ngui/common/lib/ngui-inview/src/ngui-inview.component.ts","ng://@ngui/common/lib/ngui-inview/src/ngui-inview.directive.ts","ng://@ngui/common/lib/ngui-inview/ngui-inview.module.ts","null","ng://@ngui/common/lib/ngui-utils/src/fire-event.ts","ng://@ngui/common/lib/ngui-utils/src/dynamic-component.service.ts","ng://@ngui/common/lib/ngui-list/src/ngui-inview-page.component.ts","ng://@ngui/common/lib/ngui-list/src/ngui-virtual-list.component.ts","ng://@ngui/common/lib/ngui-list/src/no-match-found.ts","ng://@ngui/common/lib/ngui-list/src/none-select.ts","ng://@ngui/common/lib/ngui-list/src/ngui-autocomplete.component.ts","ng://@ngui/common/lib/ngui-list/src/ngui-list.directive.ts","ng://@ngui/common/lib/ngui-list/src/ngui-list-item.directive.ts","ng://@ngui/common/lib/ngui-list/ngui-list.module.ts","ng://@ngui/common/lib/ngui-utils/src/ngui-highlight.pipe.ts","ng://@ngui/common/lib/ngui-utils/src/konsole.ts","ng://@ngui/common/lib/ngui-utils/ngui-utils.module.ts","ng://@ngui/common/lib/ngui-common.module.ts"],"names":["NguiInviewComponent","element","renderer","platformId","this","threshold","EventEmitter","prototype","ngOnInit","isPlatformBrowser","observer","IntersectionObserver","handleIntersect","bind","options","observe","nativeElement","ngOnDestroy","disconnect","entries","_this","forEach","entry","isInview","defaultInviewHandler","inview","emit","notInview","once80PctVisible","observers","length","intersectionRatio","opacity","filter","Math","floor","Object","assign","target","style","Component","args","selector","template","styles","ElementRef","Renderer2","Inject","PLATFORM_ID","ContentChild","TemplateRef","Input","Output","NguiInviewDirective","nguiInview","nguiOutview","Directive","NguiInviewModule","NgModule","imports","CommonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","fireEvent","el","type","event","match","MouseEvent","KeyboardEvent","TouchEvent","dispatchEvent","DynamicComponentService","factoryResolver","createComponent","component","into","rootViewContainer","resolveComponentFactory","create","parentInjector","insertComponent","componentRef","compId","random","pow","location","setAttribute","instance","id","insert","hostView","Injectable","ComponentFactoryResolver","NguiInviewPageComponent","cdRef","restoreItems","outView","items","from","itemsBackup","undefined","setStyle","contentsEl","detectChanges","querySelector","console","log","destroyed","emptyItems","height","getBoundingClientRect","setItems","ChangeDetectorRef","NguiVirtualListComponent","dynamicComponentService","cdr","ngAfterViewInit","bottomInview","error","addAnInviewPageToPages","isListLoading","inviewPage","pagesRef","inviewPages","push","addList","ViewChild","read","ViewContainerRef","NoMatchFound","NoneSelect","input","listItem","__","constructor","tslib_1.__extends","defineProperty","NguiAutocompleteComponent","selectedOrEscaped","_selectedFromList","_escapedFromList","focused","_focused","minChars","inputEl","value","minInputChars","document","for","positionThisUnderInputEl","fromEvent","subscribe","onInputElKeyup","addEventListener","onInputElFocused","onInputElBlurred","selected","onSelected","escaped","onEscaped","focus","_lastSelected","_orgInputValue","_prevInputValue","setFocused","clearList","compRef","destroy","key","firstList","addAutocompleteList","isReady","clearTimeout","_acTimer","setTimeout","addMorePages","elType","val","_focusTimer","thisEl","thisInputElBCR","top","window","scrollY","left","width","noMatchItem","blankItem","blankOption","html","allItems","concat","x","NguiListDirective","NguiListItemDirective","viewContainer","listDirective","virtualListComponent","autocompleteComponent","parentListComp","Error","object","clear","innerHTML","keydown","thisListItem","keyCode","which","parentListEl","listItems","querySelectorAll","listItemNdx","indexOf","nextListItem","prevListItem","keyup","mousedown","blurred","decorators","Optional","Host","HostListener","NguiListModule","entryComponents","NguiHighlightPipe","transform","text","search","ret","re","RegExp","replace","Pipe","name","konsole","toLog","param","LOG_LEVELS","logLevel","setLogLevel","toUpperCase","logLevels","keys","sessionStorage","setItem","debug","_i","arguments","apply","info","warn","ALL","parseInt","DEBUG","LOG","INFO","WARN","ERROR","NONE","NguiUtilsModule","providers","NguiCommonModule"],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    ContentChild,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    PLATFORM_ID,\r\n    Renderer2,\r\n    TemplateRef\r\n} from '@angular/core';\r\n\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n/**\r\n * An element that listens to viewport positioning and fires inView and notInview events\r\n * ### example\r\n * ```ts\r\n * <ngui-in-view [options]=\"myOptions\" (inView)=\"doA()\" (notInview)=\"doB()\">\r\n *   <img *ngIf src=\"https://picsum.photos/800/300?image=1>\r\n * </ngui-in-view>\r\n * ```\r\n */\r\n@Component({\r\n    selector: 'ngui-inview',\r\n    template: `\r\n        <ng-container *ngIf=\"isInview\" [ngTemplateOutlet]=\"template\">\r\n        </ng-container>\r\n    `,\r\n    styles: [':host {display: block;}']\r\n})\r\nexport class NguiInviewComponent implements OnInit, OnDestroy {\r\n    /** <ng-template> reference */\r\n    @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n    /** IntersectionObserver options */\r\n    @Input() options: any = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\r\n    @Output() inview: EventEmitter<any> = new EventEmitter();\r\n    @Output() notInview: EventEmitter<any> = new EventEmitter();\r\n\r\n    observer: IntersectionObserver;\r\n    /** indicates that this element is in viewport */\r\n    isInview = false;\r\n    /** indicates that this element is 80% in viewport. Used by the default callback */\r\n    once80PctVisible = false;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private renderer: Renderer2,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n    }\r\n\r\n    /** Starts IntersectionObserver */\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.options);\r\n            this.observer.observe(this.element.nativeElement);\r\n        }\r\n    }\r\n\r\n    /** stop IntersectionObserver */\r\n    ngOnDestroy(): void {\r\n        this.observer.disconnect();\r\n    }\r\n\r\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\r\n    handleIntersect(entries): void {\r\n        entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (entry['isIntersecting']) {\r\n                this.isInview = true;\r\n                this.defaultInviewHandler(entry);\r\n                this.inview.emit(entry);\r\n            } else {\r\n                this.notInview.emit(entry);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * default intersection handler, which sets blur dependes on intersection ratio\r\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\r\n     */\r\n    defaultInviewHandler(entry): any {\r\n        if (this.once80PctVisible || this.inview.observers.length) {\r\n            return;\r\n        }\r\n\r\n        if (entry.intersectionRatio < 0.8) {\r\n            const opacity = entry.intersectionRatio * (1 / 0.8);\r\n            const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\r\n            const filter = `blur(${blur}px)`;\r\n            Object.assign(entry.target.style, {opacity, filter});\r\n        } else {\r\n            entry.target.style.opacity = 1;\r\n            entry.target.style.filter = 'unset';\r\n\r\n            this.once80PctVisible = true;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    PLATFORM_ID,\r\n    Renderer2\r\n} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n/**\r\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\r\n */\r\n@Directive({\r\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\r\n})\r\nexport class NguiInviewDirective implements OnInit, OnDestroy {\r\n    observer: IntersectionObserver;\r\n\r\n    /** IntersectionObserver options */\r\n    @Input() options: any = {};\r\n\r\n    /** Event that will be fired when in viewport */\r\n    @Output() nguiInview: EventEmitter<any> = new EventEmitter();\r\n    /** Event that will be fired when out of  viewport */\r\n    @Output() nguiOutview: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(\r\n        public element: ElementRef,\r\n        public renderer: Renderer2,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n    }\r\n\r\n    /** Starts IntersectionObserver */\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.options);\r\n            this.observer.observe(this.element.nativeElement);\r\n        }\r\n    }\r\n\r\n    /** Stops IntersectionObserver */\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId) && this.observer) {\r\n            this.observer.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fires (nguiInview) event when this element is in viewport\r\n     *  and fires (nguiOutview) event when this element is not in viewport\r\n     */\r\n    handleIntersect(entries): void {\r\n        entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (entry['isIntersecting']) {\r\n                this.nguiInview.emit(entry);\r\n            } else {\r\n                this.nguiOutview.emit(entry);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NguiInviewComponent,\n        NguiInviewDirective\n    ],\n    exports: [\n        NguiInviewComponent,\n        NguiInviewDirective\n    ]\n})\nexport class NguiInviewModule {\n}\n\nexport {NguiInviewComponent} from './src/ngui-inview.component';\nexport {NguiInviewDirective} from './src/ngui-inview.directive';\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * fire the given event with options on the element\r\n * @example\r\n * fireEvent(el, 'click');\r\n * fireEvent(el, 'keypress', {key: 'Enter'});\r\n */\r\nexport function fireEvent(el: HTMLElement, type: string, options: any = {}): boolean {\r\n  let event;\r\n  if (type === 'click' || type.match(/^mouse/)) {\r\n    event = new MouseEvent(type, options);\r\n  } else if (type.match(/^key/)) {\r\n    event = new KeyboardEvent(type, options);\r\n  } else if (type.match(/^touch/)) {\r\n    event = new TouchEvent(type, options);\r\n  }\r\n\r\n  return el.dispatchEvent(event);\r\n}\r\n","/**\r\n * Insert a component dynamically using a service\r\n *\r\n * ### Example\r\n * ```ts\r\n * import { DynamicComponentService } from './dynamic.component.service';\r\n * import { MyDynamicComponent } from './my-1.component';\r\n *\r\n * @Component({\r\n *   template: ` ... <div #dymamic></div>`\r\n * })\r\n * export class MyComponent {\r\n *   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\r\n *\r\n *   constructor(public dcs: DynamicComponentService) {}\r\n *\r\n *   insertComp() {\r\n *     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\r\n *     ths.dcs.insertComonent(cmpRef);\r\n *     compRef.instance.items = [1,2,3];              // dealing with @input\r\n *     compRef.instance.output$.subscribe(val => {}); // dealing with @output\r\n *   }\r\n * }\r\n * ```\r\n */\r\nimport {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * Provide service to add or remove component dynamically\r\n */\r\n@Injectable()\r\nexport class DynamicComponentService {\r\n  /** used to create a factory from a component class */\r\n  factoryResolver: ComponentFactoryResolver;\r\n  /** defines where a dynamic components insert into */\r\n  rootViewContainer: ViewContainerRef;\r\n\r\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\r\n    this.factoryResolver = factoryResolver;\r\n  }\r\n\r\n  /**\r\n   * returns component reference\r\n   * The reason to seperate `createCompnent` and `insertComponent` is\r\n   * to allow some actions before we insert into a hostView.\r\n   * e.g styling, setting attributes, etc\r\n   */\r\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef<any> {\r\n    this.rootViewContainer = into || this.rootViewContainer;\r\n    const factory = this.factoryResolver.resolveComponentFactory(component);\r\n\r\n    return factory.create(this.rootViewContainer.parentInjector);\r\n  }\r\n\r\n  /**\r\n   * insert component\r\n   */\r\n  insertComponent(componentRef: ComponentRef<any>): Component {\r\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\r\n    componentRef.location.nativeElement.setAttribute('id', compId);\r\n    componentRef.instance.id = compId;\r\n\r\n    this.rootViewContainer.insert(componentRef.hostView);\r\n\r\n    return componentRef.instance;\r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * A block of component that listens to inView and outView events,\r\n * so that it empties contents when out of view after backup items\r\n * and restores the contents when in view\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-inview-page [items]=\"items\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"items else noItems\">\r\n *       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *     </div>\r\n *   </ng-template>\r\n * </ngui-inview-page>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview-page',\r\n  template: `\r\n    <div class=\"inview-page contents\"\r\n      (nguiInview)=\"restoreItems()\"\r\n      (nguiOutview)=\"emptyItems()\">\r\n      <!-- add blank ngui-list-item by condition  -->\r\n      <!-- no match found ngui-list-item by condition -->\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"template||defaultTemplate\"\r\n        [ngTemplateOutletContext]=\"{items: items, outView: outView}\">\r\n      </ng-container>\r\n      <div *ngIf=\"outView\">{{ itemsBackup.length }} items hidden</div>\r\n    </div>\r\n\r\n    <ng-template #defaultTemplate>\r\n      <div *ngIf=\"!items\"> Error: requires [items] </div>\r\n      <div *ngIf=\"!template\"> Error: requires &lt;ng-template></div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Allow users to change the contents */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  // @Input('template') template: TemplateRef<any>;\r\n\r\n  /** List of elements that are used to render this element */\r\n  @Input() items: Array<any>;\r\n\r\n  /** IntersectionObserver options */\r\n  options: any;\r\n  /** Indicates that the page of out of viewport */\r\n  outView = false;\r\n  /** The copy of items. This is set when this element is out of viewport */\r\n  itemsBackup: Array<any> = [];\r\n  /**\r\n   * The first element of this component.\r\n   * The height of it remains the same even when items get empty out.\r\n   */\r\n  contentsEl: HTMLElement;\r\n  destroyed: boolean;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    private cdRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  /**\r\n   * Restore items when in viewport, so that elements are rendered\r\n   */\r\n  restoreItems(): void {\r\n    if (this.outView) {\r\n      this.outView = false;\r\n      this.items = Array.from(this.itemsBackup || []);\r\n      this.itemsBackup = undefined;\r\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contentsEl =\r\n      this.element.nativeElement.querySelector('.inview-page.contents');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\r\n    this.destroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Empty items when not in viewport, so that elements are not rendered\r\n   */\r\n  emptyItems(): void {\r\n    if (this.items && this.contentsEl && !this.outView) {\r\n      // set height before emptying contents\r\n      const height = this.element.nativeElement.getBoundingClientRect().height;\r\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\r\n\r\n      this.outView = true;\r\n      this.itemsBackup = Array.from(this.items || []);\r\n      this.items = undefined;\r\n      if (!this.destroyed) {\r\n        this.cdRef.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  setItems(items: Array<any>): void {\r\n    if (!this.destroyed) {\r\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\r\n      this.items = items;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\r\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\r\n\r\n/**\r\n * Virtual List\r\n *\r\n * The `<ngui-inview ..>` inserts <ngui-inview-page> into\r\n * `<div #pages>` when it is in viewport\r\n * When it's inserted, it will be pushed down, which makes it out of viewport.\r\n * User scrolls down to see the bottom of the list,\r\n * then it will insert another `<ngui-inview-page>` again.\r\n *\r\n * <ngui-inview-page> listens to (nguiInview) and (nguiOutview) events,\r\n * when <ngui-inview-page> is out of view port, it empties out the contents.\r\n * and it restores back the contents when it is in viewport again.\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"!items\">Loading</div>\r\n *     <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *   </ng-template>\r\n * </ngui-virtual-list>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-virtual-list',\r\n  template: `\r\n    <div class=\"ngui-virtual-list\"\r\n      (focus)=\"_focused = true\"\r\n      (click)=\"_focused = true\">\r\n      <!-- hold multiple <ngui-inview-page> -->\r\n      <div #pages></div>\r\n      <!-- insert <ngui-inview-page> into #pages -->\r\n      <ngui-inview (inview)=\"addAnInviewPageToPages()\"></ngui-inview>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiVirtualListComponent implements AfterViewInit {\r\n\r\n  /** the container NguiInviewPage will be inserted */\r\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Event fired when bottom of the virtual list is in view\r\n   * The handler of this event must call `$event.addItems(items: Array<any>)` to fill contents\r\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\r\n   *\r\n   * ### example\r\n   * ```ts\r\n   * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n   *   <ng-template let-items=\"items\">\r\n   *     <div *ngIf=\"items else noItems\">\r\n   *        <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n   *     </div>\r\n   *     <ng-template #noItems>Loading</ng-template>\r\n   *   </ng-template>\r\n   * </ngui-virtual-list>\r\n   * ```\r\n   */\r\n  @Output() bottomInview: EventEmitter<any> = new EventEmitter();\r\n\r\n  /** The last NguiInviewPageComponent being inserted */\r\n  inviewPage: ComponentRef<NguiInviewPageComponent>;\r\n  _focused = false;\r\n  /** Indicates if a page is still loading */\r\n  isListLoading: boolean;\r\n  inviewPages: Array<ComponentRef<NguiInviewPageComponent>> = [];\r\n\r\n  constructor(\r\n    public renderer: Renderer2,\r\n    public element: ElementRef,\r\n    public dynamicComponentService: DynamicComponentService,\r\n    public cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /** Check if necessary input and output is provided */\r\n  ngAfterViewInit(): void {\r\n    if (!this.template || !this.bottomInview.observers.length) {\r\n      console.error('<ngui-virtual-list> requires [template] and {bottomInview)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the bottom is inview port, this function is called\r\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\r\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\r\n   */\r\n  addAnInviewPageToPages(): void {\r\n    if (!this.isListLoading) {\r\n      this.isListLoading = true;\r\n\r\n      this.inviewPage =\r\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\r\n      this.dynamicComponentService.insertComponent(this.inviewPage);\r\n\r\n      this.inviewPage.instance.template = this.template;\r\n      this.inviewPages.push(this.inviewPage);\r\n\r\n      this.bottomInview.emit(this); // fire event, so that user can load items\r\n    } else {\r\n      console.log('Already a page being inserted, skipping adding a page');\r\n    }\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    this.isListLoading = false;\r\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\r\n    this.inviewPage.instance.setItems(items);\r\n  }\r\n\r\n}\r\n","export class NoMatchFound {\r\n  html = 'No Match Found';\r\n}\r\n","export class NoneSelect {\r\n  html = 'Select';\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport { fireEvent } from '../../ngui-utils/src/fire-event';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NoMatchFound } from './no-match-found';\r\nimport { NoneSelect } from './none-select';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\n\r\n@Component({\r\n  selector: 'ngui-autocomplete',\r\n  template: `\r\n    <div *ngIf=\"isReady\" class=\"ngui-autocomplete\">\r\n      <div #pages></div>\r\n      <ngui-inview (inview)=\"addMorePages()\"></ngui-inview>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\r\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\r\n  `]\r\n})\r\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\r\n  @Input() for: string; // input tag id\r\n  @Input() minInputChars = 1;\r\n  @Input() blankOption = 'Select One';\r\n  @Input() noMatchItem = 'No Match Found';\r\n\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  inputEl: HTMLInputElement;\r\n  _focused: any = {input: false, listItem: false};\r\n  _focusTimer;\r\n  _acTimer;\r\n  _selectedFromList: boolean;\r\n  _escapedFromList: boolean;\r\n  _orgInputValue: string;\r\n  _prevInputValue: string;\r\n  _lastSelected: any;\r\n\r\n  /**\r\n   * returns autocomplete display condition\r\n   * autocompolete list is only visible\r\n   *   - when input element is focused or list element is focused\r\n   *   - when input value has enought characters\r\n   *   - and user just did not selected or escaped\r\n   */\r\n  get isReady(): boolean {\r\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\r\n    const focused = this._focused.input || this._focused.listItem;\r\n    const minChars = this.inputEl.value.length >= this.minInputChars;\r\n\r\n    return (!selectedOrEscaped && focused && minChars);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.inputEl = <HTMLInputElement> document.querySelector('#' + this.for); // tslint:disable-line\r\n    this.positionThisUnderInputEl();\r\n\r\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\r\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\r\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\r\n    this.selected.subscribe(this.onSelected.bind(this));\r\n    this.escaped.subscribe(this.onEscaped.bind(this));\r\n  }\r\n\r\n  onSelected(value): void {\r\n    this._selectedFromList = true;\r\n    this.inputEl.focus();\r\n    this._lastSelected = value;\r\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onSelected() is called', value);\r\n  }\r\n\r\n  onEscaped(): void {\r\n    this._escapedFromList = true;\r\n    this.inputEl.focus();\r\n    if (!this._lastSelected) {\r\n      this.inputEl.value = this._orgInputValue;\r\n    }\r\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onEscaped() is called');\r\n  }\r\n\r\n  onInputElFocused(event): void {\r\n    console.log('NguiAutoCompleteComponent.onInputElFocused() is called', event);\r\n    this.isListLoading = false;\r\n    if (typeof this._orgInputValue === 'undefined') {\r\n      this._orgInputValue = this.inputEl.value;\r\n    }\r\n    this._prevInputValue = this.inputEl.value;\r\n    this.setFocused('input', true);\r\n  }\r\n\r\n  onInputElBlurred(): void {\r\n    this.setFocused('input', false);\r\n  }\r\n\r\n  clearList(): void {\r\n    this.inviewPages.forEach(compRef => {\r\n      compRef.destroy();\r\n    });\r\n    this.inviewPages = [];\r\n  }\r\n\r\n  onInputElKeyup(event: KeyboardEvent): void {\r\n    console.log('NguiAutoCompleteComponent.onInputKeyup() is called', event.key);\r\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\r\n    if (event.key === 'Enter' || event.key === 'Escape') {\r\n      if (firstList) {\r\n        fireEvent(firstList, 'keyup', {key: event.key});\r\n      } else {\r\n        this.onEscaped();\r\n      }\r\n    } else if ((event.key === 'ArrowDown' || event.key === 'ArrowRight') && firstList) {\r\n      firstList.focus();\r\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n      //\r\n    } else if (this.inputEl.value.length >= this.minInputChars) {\r\n      this._selectedFromList = false;\r\n      this._escapedFromList = false;\r\n      this.addAutocompleteList();\r\n    }\r\n  }\r\n\r\n  /** Complete the first page of autocomplete */\r\n  addAutocompleteList(): void {\r\n    if (this.isReady) {\r\n      clearTimeout(this._acTimer);\r\n      this._acTimer = setTimeout(() => {\r\n        this.isListLoading = false; // ???????/\r\n        this._prevInputValue = this.inputEl.value;\r\n        this._escapedFromList = false;\r\n        this._selectedFromList = false;\r\n        this.clearList();\r\n        this.addAnInviewPageToPages();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\r\n  addMorePages(): void {\r\n    if (this.inviewPages.length) {\r\n      this.addAnInviewPageToPages();\r\n    }\r\n  }\r\n\r\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\r\n    if (val) {\r\n      clearTimeout(this._focusTimer);\r\n      this._focused = {input: false, listItem: false};\r\n      this._focused[elType] = true;\r\n    } else {\r\n      this._focusTimer = setTimeout(() => {\r\n        this._focused[elType] = false;\r\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  positionThisUnderInputEl(): void {\r\n    const thisEl = this.element.nativeElement;\r\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\r\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\r\n\r\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\r\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\r\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    console.log('>>>>>> NguiAutocompleteComponent.addList() is called()');\r\n    this.isListLoading = false;\r\n\r\n    // TODO: ........ for 1st page only, show no match found or blank option\r\n    let noMatchItem: any;\r\n    let blankItem: any = {};\r\n    if (this.inviewPages.length === 1) {\r\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\r\n        noMatchItem = new NoMatchFound();\r\n        blankItem.html = this.noMatchItem;\r\n      } else if (this.blankOption) {\r\n        blankItem = new NoneSelect();\r\n        blankItem.html = this.blankOption;\r\n      }\r\n    }\r\n\r\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\r\n    this.inviewPage.instance.setItems(allItems);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ngui-list' // tslint:disable-line\r\n})\r\nexport class NguiListDirective {\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public element: ElementRef) { }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NguiListDirective } from './ngui-list.directive';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\r\nimport { NoneSelect } from './none-select';\r\nimport { NoMatchFound } from './no-match-found';\r\n\r\n// tabindex, keydown, keyup(ENTER, ESC), click\r\n@Directive({\r\n  selector: 'ngui-list-item' // tslint:disable-line\r\n})\r\nexport class NguiListItemDirective implements OnInit {\r\n  @Input('item') object: any; // tslint:disable-line\r\n\r\n  nextSibling: HTMLElement;\r\n  prevSibling: HTMLElement;\r\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private viewContainer: ViewContainerRef,\r\n    @Optional() @Host() private listDirective: NguiListDirective,\r\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\r\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\r\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\r\n    if (!this.parentListComp) {\r\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\r\n    }\r\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\r\n      this.viewContainer.clear();\r\n      this.el.nativeElement.innerHTML = this.object.html;\r\n    }\r\n  }\r\n\r\n  // handles keyboard up, down, left, right\r\n  @HostListener('keydown', ['$event']) keydown(event): void {\r\n    const thisListItem = this.el.nativeElement;\r\n    const keyCode = event.which || event.keyCode;\r\n    const parentListEl = this.parentListComp.element.nativeElement;\r\n    const listItems: Array<HTMLElement>\r\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\r\n    const listItemNdx = listItems.indexOf(thisListItem);\r\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\r\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\r\n\r\n    switch (keyCode) {\r\n      case 37: case 38: // up arrow, left arrow\r\n        prevListItem.focus();\r\n        break;\r\n      case 39: case 40: // down arrow, right arrow\r\n        nextListItem.focus();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // handles keyboard enter(13), esc(27)\r\n  @HostListener('keyup', ['$event']) keyup(event): void {\r\n    switch (event.key) {\r\n      case 'Enter':\r\n        this.parentListComp.selected.emit(this.object);\r\n        break;\r\n      case 'Escape':\r\n        this.parentListComp.escaped.emit();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) mousedown(): void {\r\n    this.parentListComp.selected.emit(this.object);\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) focused(): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', true);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur', ['$event']) blurred(): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', false);\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NguiInviewModule\n    ],\n    declarations: [\n        NguiAutocompleteComponent,\n        NguiInviewPageComponent,\n        NguiListDirective,\n        NguiListItemDirective,\n        NguiVirtualListComponent\n    ],\n    exports: [\n        NguiAutocompleteComponent,\n        NguiInviewPageComponent,\n        NguiListDirective,\n        NguiListItemDirective,\n        NguiVirtualListComponent\n    ],\n    entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n\nexport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nexport {NguiListItemDirective} from './src/ngui-list-item.directive';\nexport {NguiListDirective} from './src/ngui-list.directive';\nexport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nexport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'nguiHighlight' })\r\nexport class NguiHighlightPipe implements PipeTransform {\r\n  transform(text: string, search: string): string {\r\n    let ret = text;\r\n    if (search) {\r\n      const re  = new RegExp(search, 'ig');\r\n      ret = text.replace(re, match => `<span class=\"ngui-highlight\">${match}</span>`);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/**\r\n * window.konsole alternative\r\n * ### example\r\n * ```\r\n * konsole.setLogLevel('error');\r\n * konwole.log(1,2,3,4,5);\r\n * ```\r\n */\r\nexport abstract class konsole { // tslint:disable-line\r\n  /** all log levels */\r\n  static LOG_LEVELS = {\r\n    ALL:   parseInt('00000', 2),\r\n    DEBUG: parseInt('00001', 2),\r\n    LOG:   parseInt('00010', 2),\r\n    INFO:  parseInt('00100', 2),\r\n    WARN:  parseInt('01000', 2),\r\n    ERROR: parseInt('10000', 2),\r\n    NONE:  parseInt('11111', 2)\r\n  };\r\n\r\n  /** current log level set by setLogLevel, default 'INFO' */\r\n  static logLevel = 'INFO';\r\n\r\n  /** returns if it should call `window.console` or not */\r\n  static toLog(param): boolean { // returns to log or not\r\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\r\n    const requiredNum = this.LOG_LEVELS[param];\r\n\r\n    return requiredNum > restrictionNum;\r\n  }\r\n\r\n  /** sets the current log level */\r\n  static setLogLevel(logLevel: string): any {\r\n    logLevel = logLevel.toUpperCase();\r\n    const logLevels = Object.keys(this.LOG_LEVELS);\r\n    if (logLevels.indexOf(logLevel) > -1) {\r\n      if (window && window.sessionStorage) { // for browser env.\r\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\r\n      }\r\n      this.logLevel = logLevel;\r\n    } else {\r\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\r\n  static debug(...args: Array<any>): void {\r\n    if (this.toLog('DEBUG')) {\r\n        console.debug.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.log()` if the current log level is greater than `log` */\r\n  static log(...args: Array<any>): void {\r\n    if (this.toLog('LOG')) {\r\n        console.log.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.info()` if the current log level is greater than `info` */\r\n  static info(...args: Array<any>): void {\r\n    if (this.toLog('INFO')) {\r\n        console.info.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\r\n  static warn(...args: Array<any>): void {\r\n    if (this.toLog('WARN')) {\r\n        console.warn.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.error()` if the current log level is greater than `error` */\r\n  static error(...args: Array<any>): void {\r\n    if (this.toLog('ERROR')) {\r\n        console.error.apply(console, arguments);\r\n    }\r\n  }\r\n}\r\n\r\n// konsole.setLogLevel('all');\r\n// konsole.debug('yes');\r\n// konsole.log('yes');\r\n// konsole.info('yes');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('none');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('no');\r\n// konsole.error('no');\r\n\r\n// konsole.setLogLevel('info');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('yes');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('WARN');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('ERROR');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('no');\r\n// konsole.error('yes');\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n    declarations: [NguiHighlightPipe],\n    exports: [NguiHighlightPipe],\n    providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\nexport { konsole } from './src/konsole';\nexport { fireEvent } from './src/fire-event';\nexport {DynamicComponentService} from './src/dynamic-component.service';\nexport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\n","import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n    imports: [\n        NguiInviewModule,\n        NguiListModule,\n        NguiUtilsModule\n    ],\n    exports: [\n        NguiInviewModule,\n        NguiListModule,\n        NguiUtilsModule\n    ]\n})\nexport class NguiCommonModule {\n}\n\nexport * from './ngui-inview/ngui-inview.module';\nexport * from './ngui-list/ngui-list.module';\nexport * from './ngui-utils/ngui-utils.module';\nexport * from './ngui-utils/ngui-utils.module';\n"]}