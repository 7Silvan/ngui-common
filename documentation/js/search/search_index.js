var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/DynamicComponentService.html",[0,1.361,1,1.212]],["body/injectables/DynamicComponentService.html",[0,2.173,1,1.555,2,0.42,3,0.42,4,0.303,5,0.572,6,0.572,7,3.486,8,2.172,9,1.254,10,1.105,11,3.024,12,3.024,13,3.707,14,1.482,15,3.762,16,0.626,17,1.105,18,5.15,19,4.611,20,1.388,21,3.707,22,4.611,23,1.117,24,2.662,25,0.045,26,1.367,27,3.707,28,1.272,29,1.272,30,1.132,31,3.707,32,3.576,33,2.662,34,1.879,35,3.024,36,3.707,37,3.707,38,3.707,39,2.574,40,3.024,41,3.024,42,4.095,43,3.707,44,3.024,45,2.238,46,1.97,47,3.707,48,3.707,49,0.957,50,2.662,51,4.201,52,3.707,53,2.662,54,4.611,55,2.662,56,1.746,57,3.024,58,4.265,59,0.169,60,0.553,61,0.553,62,0.303,63,2.662,64,2.662,65,3.707,66,1.97,67,2.662,68,2.662,69,4.265,70,0.794,71,2.662,72,2.662,73,3.707,74,1.849,75,1.607,76,2.662,77,2.662,78,2.662,79,2.662,80,0.028,81,0.028]],["title/modules/NguiCommonModule.html",[82,0.68,83,1.535]],["body/modules/NguiCommonModule.html",[2,0.553,3,0.553,4,0.399,5,0.399,6,0.399,10,1.045,25,0.044,59,0.139,60,1.127,61,0.727,62,0.586,70,1.459,80,0.034,81,0.034,82,1.048,83,3.067,84,1.172,85,1.312,86,1.652,87,1.652,88,2.86,89,2.86,90,2.86,91,2.41,92,2.707,93,2.707,94,2.366,95,1.863,96,1.172,97,3.506,98,2.366,99,2.434,100,2.86,101,2.86,102,3.506,103,2.86,104,3.506]],["title/pipes/NguiHighlightPipe.html",[105,1.535,106,1.535]],["body/pipes/NguiHighlightPipe.html",[2,0.588,3,0.588,4,0.424,5,0.527,6,0.527,20,1.395,25,0.045,26,0.989,28,1.111,29,1.5,30,0.989,34,1.732,49,0.773,59,0.148,60,0.773,61,0.773,62,0.424,66,1.98,80,0.035,81,0.04,105,2.674,106,2.458,107,3.774,108,3.04,109,1.563,110,4.626,111,3.726,112,4.626,113,3.411,114,5.262,115,3.726,116,4.626,117,4.626,118,1.756,119,5.031,120,3.726,121,1.563,122,3.726,123,3.726,124,3.726]],["title/components/NguiInviewComponent.html",[14,0.766,125,1.212]],["body/components/NguiInviewComponent.html",[0,0.785,2,0.263,3,0.263,4,0.19,5,0.59,6,0.59,9,0.785,10,0.78,14,1.249,16,0.392,17,0.78,20,0.98,23,1.098,25,0.045,26,1.388,28,0.964,29,1.26,30,1.214,34,1.49,35,2.134,44,2.134,45,1.58,46,1.39,49,0.917,56,1.875,59,0.066,60,0.543,61,0.346,62,0.19,70,1.365,74,1.817,75,1.58,80,0.02,81,0.02,84,0.875,85,0.623,109,0.699,118,1.233,121,1.356,125,1.536,126,1.156,127,1.156,128,3.597,129,1.359,130,2.021,131,1.817,132,2.551,133,2.616,134,1.946,135,2.15,136,4.419,137,1.61,138,1.39,139,1.951,140,2.244,141,2.218,142,1.58,143,1.817,144,1.817,145,2.934,146,3.662,147,2.987,148,3.662,149,2.616,150,2.134,151,2.543,152,2.211,153,2.245,154,2.636,155,2.934,156,2.403,157,0.885,158,1.725,159,2.636,160,2.616,161,2.616,162,2.134,163,2.987,164,2.616,165,3.662,166,2.616,167,3.662,168,4.225,169,3.662,170,2.987,171,1.713,172,1.536,173,1.951,174,1.665,175,2.842,176,2.134,177,2.134,178,1.39,179,1.817,180,1.817,181,1.817,182,2.134,183,2.134,184,1.665,185,2.636,186,1.817,187,2.636,188,1.665,189,2.668,190,1.665,191,1.665,192,2.616,193,1.665,194,2.134,195,2.616,196,1.817,197,2.616,198,2.134,199,2.134,200,1.665,201,3.662,202,1.99,203,1.665,204,2.134,205,1.665,206,1.39,207,2.211,208,1.665,209,2.543,210,1.665,211,2.616,212,2.543,213,1.156,214,1.817,215,1.665,216,1.359,217,1.359,218,0.785,219,1.156,220,1.156,221,1.58,222,1.359,223,2.134,224,2.134,225,1.359,226,1.359,227,1.359,228,1.359,229,1.359,230,1.359,231,1.359,232,1.359,233,1.665,234,1.665,235,1.665,236,1.665,237,1.665,238,1.665,239,1.665,240,1.665,241,1.39,242,0.616,243,2.543,244,1.156,245,0.699,246,1.156,247,1.156,248,0.699,249,1.156,250,0.623,251,0.699,252,0.98,253,0.623,254,1.006,255,1.156,256,0.557,257,1.156,258,0.623,259,1.006,260,1.156]],["title/directives/NguiInviewDirective.html",[242,0.68,253,1.081]],["body/directives/NguiInviewDirective.html",[0,1.037,2,0.347,3,0.347,4,0.251,5,0.599,6,0.599,9,1.037,16,0.518,17,0.965,20,1.211,23,1.357,25,0.045,26,1.375,28,0.965,29,0.965,30,1.292,34,1.436,49,1.01,56,1.807,59,0.087,60,0.671,61,0.457,62,0.251,74,2.247,75,1.953,80,0.025,81,0.025,84,1.081,96,1.081,109,0.924,118,1.524,121,1.609,128,3.648,130,2.204,132,3.129,134,2.754,137,1.777,139,2.316,140,2.664,141,1.524,147,3.449,150,2.639,151,2.936,152,2.553,153,2.394,155,3.27,156,2.72,157,1.17,158,2.219,159,3.129,171,0.824,172,0.924,175,3.077,176,2.639,177,2.639,178,1.719,179,2.247,180,2.247,181,2.247,182,2.639,183,2.639,185,3.129,186,2.247,187,3.129,189,2.939,198,1.796,199,2.639,202,2.219,204,2.639,206,1.719,216,1.796,217,1.796,218,1.037,221,1.329,222,1.796,223,2.639,224,2.639,225,2.639,226,2.639,227,1.796,228,1.796,229,1.796,230,1.796,231,1.796,232,1.796,242,0.902,253,1.211,254,3.077,261,1.796,262,4.158,263,2.664,264,3.235,265,2.202,266,2.202,267,2.202,268,2.202,269,2.202,270,2.202,271,2.202,272,2.202,273,1.329,274,1.329,275,2.202,276,2.202]],["title/modules/NguiInviewModule.html",[82,0.68,91,1.212]],["body/modules/NguiInviewModule.html",[2,0.568,3,0.568,4,0.411,5,0.411,6,0.411,10,1.075,25,0.044,59,0.143,60,1.112,61,0.748,62,0.61,80,0.034,81,0.034,82,1.066,84,1.205,85,1.349,86,2.335,87,1.698,91,2.393,94,2.408,95,1.915,96,1.205,98,2.408,99,2.503,125,2.43,218,1.698,253,2.168,277,2.94,278,2.94,279,2.94,280,3.604,281,3.146,282,3.146,283,3.604,284,3.604]],["title/components/NguiInviewPageComponent.html",[14,0.766,248,1.212]],["body/components/NguiInviewPageComponent.html",[2,0.25,3,0.25,4,0.181,5,0.578,6,0.578,9,0.748,14,1.23,16,0.374,17,0.751,20,0.943,23,1.057,25,0.045,26,1.328,28,0.751,29,1.16,30,1.194,34,1.456,39,1.75,41,1.295,45,1.522,46,1.665,49,0.934,56,1.187,59,0.063,60,0.33,61,0.33,62,0.181,66,0.844,70,1.342,80,0.019,81,0.019,85,0.595,96,1.505,109,0.666,118,1.187,125,0.666,126,1.103,127,1.103,130,2.173,131,1.75,132,2.718,135,2.226,137,0.842,138,1.339,139,1.892,140,2.175,141,2.184,142,1.522,143,1.75,144,2.477,145,3.219,151,2.477,152,2.153,153,1.895,157,0.844,158,1.68,171,0.943,172,1.057,173,1.522,175,1.522,196,1.75,202,2.238,207,1.892,209,1.75,212,2.701,213,1.103,214,1.75,219,1.103,220,1.103,221,1.892,241,1.339,242,0.593,243,2.477,244,1.103,245,0.666,246,1.103,247,1.103,248,1.496,249,1.103,250,0.595,251,0.666,252,1.335,253,0.595,254,0.959,255,1.103,256,0.531,257,1.103,258,0.595,259,3.278,260,1.103,285,2.694,286,1.295,287,4.14,288,3.539,289,3.539,290,2.909,291,2.52,292,2.909,293,2.056,294,2.056,295,2.056,296,2.477,297,3.133,298,3.133,299,3.377,300,2.875,301,2.52,302,3.567,303,3.567,304,3.567,305,3.567,306,3.567,307,2.52,308,2.799,309,2.477,310,3.133,311,2.909,312,2.52,313,2.718,314,1.588,315,1.588,316,1.588,317,1.588,318,1.588,319,2.52,320,1.588,321,2.556,322,1.588,323,2.056,324,4.14,325,2.52,326,2.056,327,2.52,328,2.175,329,1.588,330,2.056,331,1.588,332,1.588,333,1.588,334,2.52,335,1.588,336,3.567,337,3.567,338,1.588,339,2.52,340,2.556,341,2.52,342,3.133,343,2.52,344,1.588,345,1.588,346,1.588,347,1.75,348,3.133,349,1.588,350,1.588,351,1.588,352,1.588]],["title/directives/NguiListDirective.html",[242,0.68,256,0.965]],["body/directives/NguiListDirective.html",[2,0.529,3,0.529,4,0.382,5,0.597,6,0.597,16,0.789,17,1.29,23,1.407,25,0.044,26,1.343,28,1,29,1,30,0.89,49,1.051,59,0.133,60,0.696,61,0.696,62,0.382,70,1.29,80,0.033,81,0.033,109,1.407,121,1.815,130,2.199,134,2.69,137,1.446,141,2.039,156,3.164,157,1.782,158,2.528,189,3.297,242,1.127,252,1.62,256,1.446,263,3.005,273,2.024,274,2.024,285,2.785,353,2.735,354,3.327,355,3.164,356,4.327,357,3.005,358,3.005,359,3.53,360,3.53,361,3.353,362,3.353,363,3.353]],["title/directives/NguiListItemDirective.html",[242,0.68,258,1.081]],["body/directives/NguiListItemDirective.html",[2,0.298,3,0.298,4,0.215,5,0.586,6,0.586,16,0.445,17,0.861,20,1.081,23,1.211,25,0.045,26,1.346,28,0.564,29,0.564,30,1.12,32,2.721,34,0.708,49,0.876,59,0.075,60,0.923,61,0.392,62,0.215,66,2.459,70,1.423,80,0.022,81,0.027,109,0.793,118,1.36,137,1.668,139,2.114,141,1.36,142,2.366,152,2.366,153,1.86,157,1.005,158,1.846,163,3.197,171,1.081,173,1.141,178,1.86,202,2.18,207,1.141,221,2.686,242,0.824,245,1.941,250,1.733,251,1.211,252,2.032,256,1.547,258,1.081,259,2.686,273,1.743,274,1.743,285,2.734,300,1.313,308,2.114,309,2.721,313,1.141,321,3.629,354,1.313,355,1.141,357,1.313,364,1.542,365,3.919,366,3.919,367,3.919,368,3.501,369,3.919,370,3.501,371,3.501,372,2.886,373,3.501,374,3.501,375,3.501,376,3.501,377,2.886,378,2.355,379,1.89,380,3.443,381,1.89,382,1.89,383,1.89,384,2.886,385,1.89,386,2.886,387,1.89,388,1.89,389,1.89,390,1.89,391,1.542,392,1.542,393,1.542,394,1.743,395,1.542,396,1.743,397,1.542,398,2.886,399,1.89,400,1.89,401,1.542,402,1.89,403,1.542,404,2.886,405,1.89,406,1.89,407,1.89,408,1.89,409,1.89,410,1.89,411,1.542,412,2.886,413,2.886,414,1.89,415,1.89,416,1.89,417,2.355,418,2.886,419,2.355,420,2.355,421,2.886,422,2.355,423,1.89,424,1.89,425,1.89,426,2.886,427,1.89,428,1.89,429,1.89,430,1.89,431,1.89,432,1.89,433,1.89,434,1.89,435,1.89,436,2.886,437,1.89,438,1.89,439,1.89,440,2.886,441,4.449,442,1.89,443,1.89,444,3.919,445,1.89,446,4.449,447,1.89,448,1.542,449,1.89,450,1.89,451,1.89,452,1.89,453,1.89,454,1.89,455,2.886,456,1.89,457,1.89,458,1.89,459,1.89,460,1.89,461,2.886,462,2.886,463,1.89]],["title/modules/NguiListModule.html",[82,0.68,92,1.361]],["body/modules/NguiListModule.html",[2,0.474,3,0.474,4,0.342,5,0.342,6,0.342,10,0.896,25,0.044,59,0.119,60,1.148,61,0.624,62,0.576,70,0.896,80,0.031,81,0.031,82,0.947,84,1.005,85,1.125,86,2.14,87,1.416,91,2.184,92,2.739,94,2.14,95,1.597,96,1.005,98,2.14,99,2.087,100,2.452,101,2.452,135,1.261,218,1.416,245,2.371,248,2.395,250,2.116,251,1.261,252,1.125,256,1.889,258,2.116,281,2.796,282,3.513,391,2.452,392,2.452,393,2.452,464,2.452,465,2.452,466,3.006,467,2.452,468,3.006,469,4.027,470,3.006,471,2.452]],["title/modules/NguiUtilsModule.html",[82,0.68,93,1.361]],["body/modules/NguiUtilsModule.html",[1,2.319,2,0.558,3,0.558,4,0.403,5,0.403,6,0.403,10,1.465,25,0.045,59,0.14,60,1.147,61,0.734,62,0.607,80,0.034,81,0.034,82,1.054,84,1.183,85,1.324,86,2.315,87,1.667,93,2.66,94,2.38,95,1.88,96,1.183,98,2.38,103,2.886,106,3.07,137,1.183,218,1.667,281,3.11,282,2.457,472,2.886,473,2.886,474,2.886,475,2.886,476,3.538,477,3.538,478,3.538,479,2.886,480,2.704,481,3.538,482,2.704,483,3.538]],["title/components/NguiVirtualListComponent.html",[14,0.766,250,1.081]],["body/components/NguiVirtualListComponent.html",[1,1.968,2,0.209,3,0.209,4,0.151,5,0.579,6,0.579,7,0.92,9,0.624,10,0.649,14,0.94,16,0.312,17,0.649,20,0.815,23,0.913,25,0.045,26,1.36,28,0.649,29,1.057,30,0.577,32,2.461,34,1.037,39,1.511,42,3.895,45,1.314,46,0.704,49,1.007,51,2.617,57,1.775,59,0.053,60,0.575,61,0.275,62,0.151,70,1.337,80,0.017,81,0.017,85,0.496,96,1.274,109,0.556,118,1.025,121,1.162,125,0.556,126,0.92,127,0.92,130,1.764,131,1.511,132,2.3,134,2.314,135,1.346,137,1.568,138,1.705,141,2.052,142,1.314,143,1.511,144,1.511,145,3.316,153,1.156,156,2.539,158,1.795,170,1.775,171,0.815,172,0.913,173,0.8,189,2.707,194,1.775,196,2.796,202,1.795,207,1.672,209,1.511,212,2.228,213,1.511,214,1.511,219,1.511,220,0.92,241,1.156,242,0.512,243,2.228,244,0.92,245,0.556,246,0.92,247,0.92,248,1.689,249,0.92,250,1.201,251,2.236,252,1.678,253,0.496,254,1.672,255,0.92,256,0.443,257,0.92,258,0.496,259,2.431,260,0.92,262,1.775,263,3.257,285,2.7,288,1.775,289,3.108,290,2.617,292,1.775,293,2.26,294,2.617,295,2.891,296,3.316,300,0.92,308,2.14,309,2.646,311,3.108,313,2.539,323,1.775,328,1.924,347,2.461,354,1.924,355,2.14,357,1.511,358,1.511,359,1.775,360,1.775,419,1.775,420,2.617,471,1.08,479,1.08,484,1.08,485,2.176,486,2.176,487,2.176,488,2.176,489,2.176,490,3.81,491,2.176,492,3.208,493,3.208,494,2.176,495,4.594,496,2.77,497,3.208,498,3.81,499,4.205,500,3.208,501,3.208,502,3.208,503,2.176,504,3.208,505,3.81,506,1.324,507,2.176,508,2.176,509,3.208,510,2.176,511,1.324,512,1.324,513,1.324,514,1.324,515,1.324,516,1.324,517,1.324,518,1.324,519,1.324,520,1.156,521,2.176,522,1.775,523,2.176,524,1.324,525,1.324,526,2.176,527,2.176,528,1.324,529,1.324,530,1.324,531,1.324,532,1.324,533,2.176,534,2.77,535,1.324,536,2.176,537,2.176,538,1.324,539,2.176,540,3.208,541,1.324,542,1.324,543,1.324,544,1.324,545,2.176,546,1.324,547,1.08,548,2.77,549,1.324,550,1.324,551,1.324,552,1.324,553,1.324,554,1.324,555,1.324,556,1.324,557,1.324,558,1.324,559,1.08,560,1.324,561,1.324]],["title/classes/NoMatchFound.html",[59,0.115,396,1.744]],["body/classes/NoMatchFound.html",[2,0.649,3,0.649,4,0.469,5,0.56,6,0.56,16,0.968,17,1.465,25,0.043,26,1.092,49,0.854,59,0.195,62,0.469,80,0.037,81,0.043,113,2.967,171,1.541,172,1.726,241,2.892,396,2.967,397,4.009,562,4.009,563,3.357,564,4.115]],["title/classes/NoneSelect.html",[59,0.115,394,1.744]],["body/classes/NoneSelect.html",[2,0.656,3,0.656,4,0.474,5,0.563,6,0.563,16,0.979,17,1.475,25,0.043,26,1.104,49,0.863,59,0.196,62,0.474,80,0.038,81,0.038,113,2.986,171,1.557,172,1.745,241,2.903,355,2.986,394,2.986,565,4.035,566,3.393,567,4.159]],["title/changelog.html",[206,1.287,568,1.682,569,2.423]],["body/changelog.html",[14,1.15,25,0.038,30,1.345,70,1.511,80,0.038,81,0.038,121,1.819,135,2.126,154,3.536,155,3.01,186,3.01,570,4.335,571,3.536,572,4.335,573,4.335,574,4.335,575,4.335,576,4.335,577,4.335,578,4.335,579,3.536]],["title/coverage.html",[580,2.722]],["body/coverage.html",[0,1.566,1,1.394,4,0.379,5,0.653,6,0.653,7,2.308,8,2.711,14,1.339,25,0.044,49,0.69,59,0.189,80,0.033,81,0.036,105,1.766,106,1.766,107,2.711,108,2.711,121,1.394,125,1.394,128,2.988,129,2.711,135,1.394,242,1.123,245,1.394,248,1.394,250,1.244,251,1.394,252,1.244,253,1.244,256,1.111,258,1.244,261,2.711,285,2.777,286,2.711,353,2.711,364,2.711,394,2.007,396,2.007,403,4.116,448,2.711,480,2.007,482,2.007,484,2.711,520,1.766,562,2.711,563,2.711,565,2.711,566,2.711,580,2.308,581,2.711,582,3.324,583,3.324,584,3.324,585,3.324,586,3.324,587,3.324,588,3.324,589,3.324,590,3.324,591,3.324,592,3.324,593,3.324,594,3.324,595,3.324,596,3.324,597,4.303,598,3.324,599,3.324,600,2.711,601,2.711,602,4.303,603,3.324,604,2.711,605,3.324,606,3.324,607,3.324,608,3.324]],["title/dependencies.html",[84,1.159,609,2.423]],["body/dependencies.html",[15,3.348,25,0.045,61,0.852,80,0.037,81,0.037,84,1.372,218,1.933,610,4.104,611,5.787,612,4.104,613,4.104,614,4.104,615,4.907,616,3.407,617,4.104,618,4.104,619,4.104,620,4.104,621,4.104,622,4.104,623,4.104,624,4.104]],["title/miscellaneous/functions.html",[520,1.843,625,1.976]],["body/miscellaneous/functions.html",[5,0.473,6,0.473,16,0.976,25,0.041,28,1.237,29,1.237,30,1.448,49,1.094,80,0.037,81,0.037,130,1.74,134,2.204,137,1.387,138,2.204,340,4.028,358,2.881,378,3.384,482,2.981,520,2.204,522,3.384,600,3.384,601,4.028,625,3.384,626,4.148,627,5.273,628,4.148,629,4.148,630,4.148]],["title/index.html",[16,0.57,206,1.287,568,1.682]],["body/index.html",[1,1.457,10,1.036,11,2.834,12,2.834,14,1.437,25,0.043,56,1.637,59,0.138,60,1.011,62,0.396,70,1.615,75,2.097,80,0.034,81,0.034,82,1.042,83,1.846,86,1.637,87,1.637,91,2.044,92,2.295,93,2.295,98,1.846,105,1.846,130,1.457,135,2.044,175,2.097,242,1.042,251,1.457,252,1.824,296,2.412,308,2.097,411,2.834,417,3.611,482,2.097,520,2.589,580,2.412,631,5.13,632,4.427,633,3.474,634,3.474,635,3.474,636,3.474,637,3.474,638,3.474,639,3.474,640,3.474,641,3.474,642,4.872,643,3.474,644,3.474,645,4.427,646,3.474,647,3.474,648,4.427,649,3.474,650,3.474,651,3.474,652,4.427,653,3.474,654,3.474,655,3.474,656,3.474,657,3.474,658,3.474,659,3.474,660,3.474,661,3.474,662,3.474,663,3.474]],["title/classes/konsole.html",[59,0.115,480,1.744]],["body/classes/konsole.html",[2,0.783,3,0.274,4,0.198,5,0.555,6,0.555,9,0.817,16,0.408,17,0.805,20,1.011,25,0.045,26,1.265,28,1.338,29,1.338,30,1.191,34,1.859,46,1.99,49,0.963,59,0.107,62,0.198,66,1.763,80,0.021,81,0.021,113,2.45,138,0.922,171,1.402,172,1.133,178,0.922,179,3.59,202,2.296,273,2.003,274,2.003,299,3.506,313,3.154,326,3.976,328,1.876,347,1.876,380,3.31,395,2.204,401,2.204,480,1.631,547,2.204,559,2.204,604,1.415,616,1.205,664,1.735,665,1.735,666,2.701,667,1.735,668,5.58,669,3.745,670,4.964,671,4.298,672,5.498,673,3.745,674,2.701,675,4.298,676,2.701,677,2.701,678,2.701,679,2.701,680,2.701,681,2.701,682,2.701,683,1.735,684,5.271,685,1.735,686,5.171,687,2.701,688,1.735,689,2.701,690,4.874,691,4.058,692,2.701,693,1.735,694,2.701,695,1.735,696,2.701,697,2.701,698,1.735,699,2.701,700,1.735,701,2.701,702,1.735,703,2.701,704,1.735,705,2.701,706,1.735,707,2.701,708,1.735,709,2.701,710,1.735,711,2.701,712,1.735,713,1.735,714,1.735,715,1.735,716,1.735,717,1.735,718,1.735,719,1.735,720,1.735,721,1.735,722,1.735,723,1.735,724,1.735,725,2.701,726,2.701,727,1.735,728,1.735,729,1.735,730,1.735,731,1.735,732,1.735,733,1.735,734,1.735,735,1.735,736,1.735,737,1.735,738,1.735,739,2.701,740,3.318,741,3.745,742,1.735,743,3.745,744,3.745,745,3.318,746,2.701,747,1.735,748,1.735,749,1.735]],["title/license.html",[206,1.287,568,1.682,750,1.976]],["body/license.html",[4,0.411,10,1.075,25,0.034,40,2.94,56,2.135,80,0.034,81,0.034,96,1.205,137,1.205,162,2.94,330,4.242,422,2.94,571,2.94,579,2.94,581,2.94,750,2.94,751,3.604,752,4.956,753,3.604,754,3.604,755,3.604,756,4.531,757,3.604,758,3.604,759,3.604,760,3.604,761,4.531,762,3.604,763,5.664,764,3.604,765,4.531,766,4.956,767,3.604,768,4.956,769,4.531,770,3.604,771,3.604,772,3.604,773,3.604,774,3.604,775,3.604,776,3.604,777,3.604,778,3.604,779,3.604,780,3.604,781,3.604,782,3.604,783,4.531,784,4.531,785,3.604,786,3.604,787,4.531,788,3.604,789,3.604,790,3.604,791,3.604,792,3.604,793,3.604,794,3.604,795,3.604,796,3.604,797,3.604,798,3.604,799,3.604,800,3.604,801,3.604,802,3.604,803,3.604,804,3.604,805,3.604]],["title/modules.html",[82,0.922]],["body/modules.html",[25,0.038,80,0.038,81,0.038,82,1.02,83,2.304,91,1.819,92,2.042,93,2.042,616,3.844,806,5.536,807,5.536,808,5.536]],["title/overview.html",[809,3.198]],["body/overview.html",[0,1.408,1,1.9,10,0.891,14,0.793,25,0.045,59,0.119,62,0.34,80,0.03,81,0.03,82,0.944,83,2.961,84,0.999,85,1.119,86,1.408,87,1.408,88,2.438,89,2.438,90,2.438,91,2.382,92,2.754,93,2.644,94,2.132,95,1.588,96,0.999,105,1.588,106,2.822,125,2.228,178,2.132,180,2.785,181,2.785,242,0.703,245,2.228,248,2.228,250,1.988,253,1.988,256,1.775,258,1.988,277,2.438,278,2.438,279,2.438,464,2.438,465,2.438,467,2.438,472,2.438,473,2.438,474,2.438,475,2.438,809,2.438]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":403,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["0.5.0",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["0.8.26",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["08",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":178,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{},"overview.html":{}}}],["1/1",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":73,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["10/10",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["12/43",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":179,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"classes/konsole.html":{}}}],["2.5.4",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":571,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["27",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":180,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["37",{"_index":442,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["38",{"_index":443,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39",{"_index":447,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39;click&#39",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;enter&#39",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;keypress&#39",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["4",{"_index":181,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["40",{"_index":448,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["5",{"_index":182,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["5/6",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":75,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"index.html":{}}}],["6.0.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":74,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["72",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":183,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["8/11",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":167,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["83",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["_focus",{"_index":497,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["abov",{"_index":782,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":708,"title":{},"body":{"classes/konsole.html":{}}}],["action",{"_index":40,"title":{},"body":{"injectables/DynamicComponentService.html":{},"license.html":{}}}],["actual_compon",{"_index":260,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ad",{"_index":558,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["add",{"_index":12,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["addaninviewpagetopag",{"_index":502,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist",{"_index":503,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist(item",{"_index":523,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["afterviewinit",{"_index":496,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["again",{"_index":492,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["allen",{"_index":754,"title":{},"body":{"license.html":{}}}],["allow",{"_index":39,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["altern",{"_index":665,"title":{},"body":{"classes/konsole.html":{}}}],["and/or",{"_index":775,"title":{},"body":{"license.html":{}}}],["angular",{"_index":632,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":218,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["anoth",{"_index":491,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["appcompon",{"_index":648,"title":{},"body":{"index.html":{}}}],["appli",{"_index":165,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["appmodul",{"_index":645,"title":{},"body":{"index.html":{}}}],["arg",{"_index":691,"title":{},"body":{"classes/konsole.html":{}}}],["argument",{"_index":380,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["aris",{"_index":804,"title":{},"body":{"license.html":{}}}],["array",{"_index":313,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["array.from(parentlistel.queryselectorall('ngui",{"_index":432,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["array.from(this.item",{"_index":351,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["array.from(this.itemsbackup",{"_index":338,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["arrow",{"_index":444,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["associ",{"_index":764,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":47,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["author",{"_index":795,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":411,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["autocomplete'},{'nam",{"_index":246,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["autocomplete.compon",{"_index":393,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["autocomplete.component.t",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["autocompletecompon",{"_index":376,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["back",{"_index":494,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["backup",{"_index":291,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["basic",{"_index":659,"title":{},"body":{"index.html":{}}}],["be",{"_index":534,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["befor",{"_index":41,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{}}}],["better",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":144,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["blur",{"_index":163,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["bluren",{"_index":154,"title":{},"body":{"components/NguiInviewComponent.html":{},"changelog.html":{}}}],["boolean",{"_index":328,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":490,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["bottominview",{"_index":505,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["break",{"_index":446,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["brows",{"_index":808,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":616,"title":{},"body":{"dependencies.html":{},"classes/konsole.html":{},"modules.html":{}}}],["browsermodul",{"_index":646,"title":{},"body":{"index.html":{}}}],["c",{"_index":753,"title":{},"body":{"license.html":{}}}],["call",{"_index":347,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["callback",{"_index":211,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["case",{"_index":441,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cdr",{"_index":498,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["cdref",{"_index":310,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["chang",{"_index":334,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["changedetectorref",{"_index":311,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["changelog",{"_index":569,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":760,"title":{},"body":{"license.html":{}}}],["check",{"_index":526,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["child",{"_index":360,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["claim",{"_index":798,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["click",{"_index":369,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cluster_nguicommonmodul",{"_index":88,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_export",{"_index":90,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_import",{"_index":89,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodul",{"_index":277,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_declar",{"_index":278,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_export",{"_index":279,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguilistmodul",{"_index":464,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_declar",{"_index":465,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_export",{"_index":467,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_import",{"_index":466,"title":{},"body":{"modules/NguiListModule.html":{}}}],["cluster_nguiutilsmodul",{"_index":472,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_declar",{"_index":473,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_export",{"_index":474,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_provid",{"_index":475,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["code",{"_index":650,"title":{},"body":{"index.html":{}}}],["collect",{"_index":658,"title":{},"body":{"index.html":{}}}],["common",{"_index":634,"title":{},"body":{"index.html":{}}}],["common.module.t",{"_index":97,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["common/src/lib/ngui",{"_index":6,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["commonmodul",{"_index":281,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["compid",{"_index":69,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compon",{"_index":14,"title":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["component.servic",{"_index":479,"title":{},"body":{"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["component.service.t",{"_index":8,"title":{},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{}}}],["component.service.ts:41",{"_index":55,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:43",{"_index":27,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:55",{"_index":33,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:65",{"_index":53,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component_templ",{"_index":244,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentfactoryresolv",{"_index":54,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref",{"_index":51,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentref.inst",{"_index":79,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.instance.id",{"_index":77,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.location.nativeelement.setattribute('id",{"_index":76,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["condit",{"_index":781,"title":{},"body":{"license.html":{}}}],["config",{"_index":186,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["configur",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":805,"title":{},"body":{"license.html":{}}}],["console.debug",{"_index":689,"title":{},"body":{"classes/konsole.html":{}}}],["console.debug.apply(consol",{"_index":727,"title":{},"body":{"classes/konsole.html":{}}}],["console.error",{"_index":547,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.error(`error",{"_index":721,"title":{},"body":{"classes/konsole.html":{}}}],["console.error.apply(consol",{"_index":735,"title":{},"body":{"classes/konsole.html":{}}}],["console.info",{"_index":696,"title":{},"body":{"classes/konsole.html":{}}}],["console.info.apply(consol",{"_index":731,"title":{},"body":{"classes/konsole.html":{}}}],["console.log",{"_index":559,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.log('alreadi",{"_index":556,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["console.log('nguiinviewpagecomponent.ngondestroy",{"_index":346,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log('nguiinviewpagecomponent.setitem",{"_index":352,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log.apply(consol",{"_index":729,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn",{"_index":707,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn.apply(consol",{"_index":733,"title":{},"body":{"classes/konsole.html":{}}}],["const",{"_index":66,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["constructor(@inject(componentfactoryresolv",{"_index":63,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(el",{"_index":157,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}}}],["constructor(factoryresolv",{"_index":24,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(publ",{"_index":363,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["constructor(render",{"_index":506,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["contain",{"_index":539,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["content",{"_index":289,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild",{"_index":214,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild(templateref",{"_index":220,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentsel",{"_index":302,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["contract",{"_index":801,"title":{},"body":{"license.html":{}}}],["control",{"_index":161,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["copi",{"_index":330,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"license.html":{}}}],["copyright",{"_index":752,"title":{},"body":{"license.html":{}}}],["core",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":580,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":57,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["createcompn",{"_index":38,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcompon",{"_index":21,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent(compon",{"_index":31,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["current",{"_index":686,"title":{},"body":{"classes/konsole.html":{}}}],["damag",{"_index":799,"title":{},"body":{"license.html":{}}}],["deal",{"_index":765,"title":{},"body":{"license.html":{}}}],["debug",{"_index":671,"title":{},"body":{"classes/konsole.html":{}}}],["debug(...arg",{"_index":687,"title":{},"body":{"classes/konsole.html":{}}}],["declar",{"_index":86,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":213,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["default",{"_index":171,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defaultinviewhandl",{"_index":149,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defaultinviewhandler(entri",{"_index":192,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defin",{"_index":26,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["demoobject",{"_index":635,"title":{},"body":{"index.html":{}}}],["depend",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprec",{"_index":185,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["descript",{"_index":9,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["destroy",{"_index":303,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["direct",{"_index":242,"title":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["display",{"_index":143,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["distribut",{"_index":773,"title":{},"body":{"license.html":{}}}],["document",{"_index":581,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentationcod",{"_index":636,"title":{},"body":{"index.html":{}}}],["dom",{"_index":126,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["down",{"_index":420,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["dyn",{"_index":71,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynam",{"_index":15,"title":{},"body":{"injectables/DynamicComponentService.html":{},"dependencies.html":{}}}],["dynamical",{"_index":521,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["dynamiccomponentservic",{"_index":1,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["e.g",{"_index":44,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["effect",{"_index":164,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["el",{"_index":378,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["elementref",{"_index":158,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["empti",{"_index":288,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["emptyitem",{"_index":305,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["enter",{"_index":454,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["enter(13",{"_index":450,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["entri",{"_index":198,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entries.foreach((entri",{"_index":230,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entry.intersectionratio",{"_index":240,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry['isintersect",{"_index":232,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entrycompon",{"_index":469,"title":{},"body":{"modules/NguiListModule.html":{}}}],["env",{"_index":718,"title":{},"body":{"classes/konsole.html":{}}}],["error",{"_index":299,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["error('ngui",{"_index":409,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["error(...arg",{"_index":692,"title":{},"body":{"classes/konsole.html":{}}}],["esc",{"_index":357,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["esc(27",{"_index":451,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escap",{"_index":354,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["etc",{"_index":48,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["even",{"_index":327,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["event",{"_index":137,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.additems(item",{"_index":508,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["event.key",{"_index":453,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.keycod",{"_index":428,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.t",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["event.which",{"_index":427,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["eventemitt",{"_index":189,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["exampl",{"_index":138,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["express",{"_index":789,"title":{},"body":{"license.html":{}}}],["factori",{"_index":58,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factory.create(this.rootviewcontainer.parentinjector",{"_index":68,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factoryresolv",{"_index":18,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["fals",{"_index":207,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"classes/konsole.html":{},"license.html":{}}}],["fill",{"_index":509,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["fire",{"_index":134,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["fireev",{"_index":482,"title":{},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fireevent(el",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":323,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["fit",{"_index":792,"title":{},"body":{"license.html":{}}}],["focu",{"_index":370,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["focus",{"_index":460,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["follow",{"_index":780,"title":{},"body":{"license.html":{}}}],["formsmodul",{"_index":647,"title":{},"body":{"index.html":{}}}],["found",{"_index":397,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{}}}],["found.t",{"_index":563,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["found.ts:2",{"_index":564,"title":{},"body":{"classes/NoMatchFound.html":{}}}],["free",{"_index":759,"title":{},"body":{"license.html":{}}}],["function",{"_index":520,"title":{"miscellaneous/functions.html":{}},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":778,"title":{},"body":{"license.html":{}}}],["get",{"_index":568,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":522,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["grant",{"_index":758,"title":{},"body":{"license.html":{}}}],["greater",{"_index":690,"title":{},"body":{"classes/konsole.html":{}}}],["handl",{"_index":417,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["handleintersect",{"_index":150,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handleintersect(entri",{"_index":199,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handler",{"_index":170,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["height",{"_index":324,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["height}px",{"_index":350,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["herebi",{"_index":757,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":298,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["highlight",{"_index":661,"title":{},"body":{"index.html":{}}}],["highlight.pip",{"_index":477,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["highlight.pipe.t",{"_index":108,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["highlight.pipe.ts:5",{"_index":115,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["holder",{"_index":796,"title":{},"body":{"license.html":{}}}],["host",{"_index":142,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["hostlisten",{"_index":368,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('blur",{"_index":463,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('click",{"_index":457,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('focu",{"_index":459,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keydown",{"_index":423,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keyup",{"_index":452,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostview",{"_index":43,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["html",{"_index":241,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{}}}],["html5",{"_index":653,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":321,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["http_provid",{"_index":649,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["ie11",{"_index":654,"title":{},"body":{"index.html":{}}}],["ig",{"_index":123,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["implement",{"_index":118,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["impli",{"_index":790,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["includ",{"_index":768,"title":{},"body":{"license.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["indic",{"_index":209,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["info(...arg",{"_index":694,"title":{},"body":{"classes/konsole.html":{}}}],["inject",{"_index":0,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{},"overview.html":{}}}],["inject(platform_id",{"_index":222,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["input",{"_index":153,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["input('item",{"_index":400,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["input('templ",{"_index":335,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["insert",{"_index":42,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["insertcompon",{"_index":22,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent(componentref",{"_index":52,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["instal",{"_index":642,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":413,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["instead",{"_index":187,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["interact",{"_index":663,"title":{},"body":{"index.html":{}}}],["intersect",{"_index":168,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["intersectionobserv",{"_index":175,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["intersectionobserver(this.handleintersect.bind(thi",{"_index":227,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverentri",{"_index":231,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverinit",{"_index":176,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["invalid",{"_index":722,"title":{},"body":{"classes/konsole.html":{}}}],["inview",{"_index":135,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["inview'},{'nam",{"_index":247,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inview)=\"someth",{"_index":197,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.compon",{"_index":283,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.component.t",{"_index":129,"title":{},"body":{"components/NguiInviewComponent.html":{},"coverage.html":{}}}],["inview.component.ts:36",{"_index":215,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:39",{"_index":184,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:42",{"_index":188,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:46",{"_index":174,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:48",{"_index":190,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:49",{"_index":191,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:51",{"_index":210,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:53",{"_index":208,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:55",{"_index":160,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:63",{"_index":205,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:75",{"_index":203,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:80",{"_index":200,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:96",{"_index":193,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.direct",{"_index":284,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.directive.t",{"_index":261,"title":{},"body":{"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inview.directive.ts:21",{"_index":272,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:24",{"_index":265,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:27",{"_index":266,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:30",{"_index":267,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:32",{"_index":264,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:35",{"_index":271,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:40",{"_index":270,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:52",{"_index":269,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:62",{"_index":268,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.modul",{"_index":100,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["inview.module.t",{"_index":280,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview/ngui",{"_index":99,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{}}}],["inview/src/ngui",{"_index":128,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inviewpag",{"_index":499,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["invok",{"_index":195,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["isinview",{"_index":146,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["islistload",{"_index":500,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["isplatformbrows",{"_index":217,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":225,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["it'",{"_index":485,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["item",{"_index":259,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["item.direct",{"_index":470,"title":{},"body":{"modules/NguiListModule.html":{}}}],["item.directive.t",{"_index":364,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:24",{"_index":379,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:26",{"_index":389,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:27",{"_index":390,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:28",{"_index":377,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:39",{"_index":388,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:52",{"_index":385,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:75",{"_index":387,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:88",{"_index":382,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:92",{"_index":383,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:98",{"_index":381,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["itemsbackup",{"_index":304,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["itemsbackup.length",{"_index":297,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["js",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":358,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["keyboard",{"_index":418,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyboard/mous",{"_index":662,"title":{},"body":{"index.html":{}}}],["keycod",{"_index":426,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown",{"_index":371,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown(ev",{"_index":384,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup",{"_index":372,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ent",{"_index":399,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ev",{"_index":386,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["kim",{"_index":755,"title":{},"body":{"license.html":{}}}],["kind",{"_index":788,"title":{},"body":{"license.html":{}}}],["konsol",{"_index":480,"title":{"classes/konsole.html":{}},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["konsole.debug('no",{"_index":743,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.debug('y",{"_index":737,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('no",{"_index":747,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('y",{"_index":741,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('no",{"_index":745,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('y",{"_index":739,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('no",{"_index":744,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('y",{"_index":738,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('al",{"_index":736,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('error",{"_index":666,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('info",{"_index":748,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('non",{"_index":742,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('warn",{"_index":749,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('no",{"_index":746,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('y",{"_index":740,"title":{},"body":{"classes/konsole.html":{}}}],["konwole.log(1,2,3,4,5",{"_index":667,"title":{},"body":{"classes/konsole.html":{}}}],["last",{"_index":533,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["lazi",{"_index":651,"title":{},"body":{"index.html":{}}}],["left",{"_index":421,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"overview.html":{}}}],["less",{"_index":166,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["level",{"_index":684,"title":{},"body":{"classes/konsole.html":{}}}],["liabil",{"_index":800,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":797,"title":{},"body":{"license.html":{}}}],["licens",{"_index":750,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":769,"title":{},"body":{"license.html":{}}}],["line",{"_index":274,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["list",{"_index":252,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'nam",{"_index":257,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["list.compon",{"_index":392,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.component.t",{"_index":484,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":525,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:114",{"_index":519,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:132",{"_index":524,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:61",{"_index":538,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:63",{"_index":542,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:65",{"_index":518,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:67",{"_index":517,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:86",{"_index":516,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:89",{"_index":532,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:90",{"_index":528,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:92",{"_index":535,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:93",{"_index":507,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:96",{"_index":541,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:97",{"_index":531,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:98",{"_index":530,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:99",{"_index":529,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.direct",{"_index":391,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.directive.t",{"_index":353,"title":{},"body":{"directives/NguiListDirective.html":{},"coverage.html":{}}}],["list.directive.ts:13",{"_index":361,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:15",{"_index":356,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:17",{"_index":362,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.modul",{"_index":102,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["list.module.t",{"_index":468,"title":{},"body":{"modules/NguiListModule.html":{}}}],["list/ngui",{"_index":101,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["list/src/ngui",{"_index":285,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list/src/no",{"_index":562,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["list/src/non",{"_index":565,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["listdirect",{"_index":374,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listen",{"_index":131,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["listitem",{"_index":431,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitemndx",{"_index":433,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems.indexof(thislistitem",{"_index":434,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[0",{"_index":437,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitemndx",{"_index":436,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitems.length",{"_index":439,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["load",{"_index":495,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["log",{"_index":672,"title":{},"body":{"classes/konsole.html":{}}}],["log(...arg",{"_index":697,"title":{},"body":{"classes/konsole.html":{}}}],["log_level",{"_index":669,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel",{"_index":670,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel.touppercas",{"_index":713,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels.indexof(loglevel",{"_index":715,"title":{},"body":{"classes/konsole.html":{}}}],["lt;ng",{"_index":301,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["make",{"_index":487,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["match",{"_index":81,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":72,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["medium",{"_index":641,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":791,"title":{},"body":{"license.html":{}}}],["merg",{"_index":771,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["method",{"_index":20,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["miscellan",{"_index":625,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":751,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":770,"title":{},"body":{"license.html":{}}}],["modul",{"_index":82,"title":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"modules.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":458,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["name",{"_index":29,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["necessari",{"_index":527,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["new",{"_index":121,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["nextlistitem",{"_index":435,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextlistitem.focu",{"_index":449,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextsibl",{"_index":365,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ngafterviewinit",{"_index":504,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngfor=\"let",{"_index":513,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngif=\"item",{"_index":511,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":151,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["ngoninit",{"_index":152,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["ngui",{"_index":70,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["ngui/common",{"_index":631,"title":{},"body":{"index.html":{}}}],["nguiautocompletecompon",{"_index":245,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguicommonmodul",{"_index":83,"title":{"modules/NguiCommonModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguihighlight",{"_index":110,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["nguihighlightpip",{"_index":106,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"overview.html":{}}}],["nguihilight",{"_index":660,"title":{},"body":{"index.html":{}}}],["nguiinview",{"_index":254,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewcompon",{"_index":125,"title":{"components/NguiInviewComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewdirect",{"_index":253,"title":{"directives/NguiInviewDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewmodul",{"_index":91,"title":{"modules/NguiInviewModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiinviewpag",{"_index":540,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nguiinviewpagecompon",{"_index":248,"title":{"components/NguiInviewPageComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistdirect",{"_index":256,"title":{"directives/NguiListDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistitemdirect",{"_index":258,"title":{"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistmodul",{"_index":92,"title":{"modules/NguiListModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguioutview",{"_index":262,"title":{},"body":{"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguioutview]'},{'nam",{"_index":255,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiutilsmodul",{"_index":93,"title":{"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguivirtuallistcompon",{"_index":250,"title":{"components/NguiVirtualListComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguivirtuallistcomponent.addlist",{"_index":560,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["noinspect",{"_index":725,"title":{},"body":{"classes/konsole.html":{}}}],["noitem",{"_index":512,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nomatchfound",{"_index":396,"title":{"classes/NoMatchFound.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["none",{"_index":395,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["noneselect",{"_index":394,"title":{"classes/NoneSelect.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{},"coverage.html":{}}}],["noninfring",{"_index":794,"title":{},"body":{"license.html":{}}}],["notic",{"_index":783,"title":{},"body":{"license.html":{}}}],["notinview",{"_index":136,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["npm",{"_index":643,"title":{},"body":{"index.html":{}}}],["num",{"_index":295,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["num\">row",{"_index":515,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["number",{"_index":294,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["object",{"_index":401,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["object.keys(this.log_level",{"_index":714,"title":{},"body":{"classes/konsole.html":{}}}],["observ",{"_index":147,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["observeropt",{"_index":155,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["obtain",{"_index":762,"title":{},"body":{"license.html":{}}}],["on",{"_index":723,"title":{},"body":{"classes/konsole.html":{}}}],["once80pctvis",{"_index":148,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["ondestroy",{"_index":140,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["oninit",{"_index":139,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["option",{"_index":30,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["otherwis",{"_index":803,"title":{},"body":{"license.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/NguiCommonModule.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":156,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outview",{"_index":287,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["overview",{"_index":809,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":609,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":296,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["page'},{'nam",{"_index":249,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.compon",{"_index":471,"title":{},"body":{"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component.t",{"_index":286,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":315,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:122",{"_index":320,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:56",{"_index":333,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:60",{"_index":314,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:63",{"_index":331,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:65",{"_index":332,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:67",{"_index":329,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:72",{"_index":322,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:73",{"_index":312,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:84",{"_index":318,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:94",{"_index":317,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:99",{"_index":316,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.cont",{"_index":345,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["pagesref",{"_index":501,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["param",{"_index":704,"title":{},"body":{"classes/konsole.html":{}}}],["paramet",{"_index":28,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["parent",{"_index":410,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistcomp",{"_index":366,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistel",{"_index":429,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parseint('00000",{"_index":676,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00001",{"_index":677,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00010",{"_index":678,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00100",{"_index":679,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('01000",{"_index":680,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('10000",{"_index":681,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('11111",{"_index":682,"title":{},"body":{"classes/konsole.html":{}}}],["particular",{"_index":793,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":756,"title":{},"body":{"license.html":{}}}],["permit",{"_index":777,"title":{},"body":{"license.html":{}}}],["person",{"_index":761,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":105,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":117,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["platform_id",{"_index":216,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["platformid",{"_index":159,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["pleas",{"_index":656,"title":{},"body":{"index.html":{}}}],["polyfil",{"_index":657,"title":{},"body":{"index.html":{}}}],["port",{"_index":493,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["portion",{"_index":786,"title":{},"body":{"license.html":{}}}],["posit",{"_index":133,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["press",{"_index":359,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["prevlistitem",{"_index":438,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevlistitem.focu",{"_index":445,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevsibl",{"_index":367,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["privat",{"_index":221,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["projects/.../fir",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngui",{"_index":5,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["properti",{"_index":17,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["provid",{"_index":10,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":263,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["publish",{"_index":772,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":579,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["push",{"_index":486,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ratio",{"_index":169,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["re",{"_index":120,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["read",{"_index":544,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["reason",{"_index":36,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["refer",{"_index":35,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["regexp(search",{"_index":122,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["remain",{"_index":325,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["remov",{"_index":13,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["renam",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":308,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["renderer2",{"_index":309,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["reportaccept",{"_index":639,"title":{},"body":{"index.html":{}}}],["reportarticl",{"_index":640,"title":{},"body":{"index.html":{}}}],["reportunit",{"_index":637,"title":{},"body":{"index.html":{}}}],["repres",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["requir",{"_index":300,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["requirednum",{"_index":711,"title":{},"body":{"classes/konsole.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["rest",{"_index":510,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["restor",{"_index":292,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restoreitem",{"_index":306,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restrict",{"_index":767,"title":{},"body":{"license.html":{}}}],["restrictionnum",{"_index":709,"title":{},"body":{"classes/konsole.html":{}}}],["result",{"_index":80,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":119,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["return",{"_index":34,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["right",{"_index":422,"title":{},"body":{"directives/NguiListItemDirective.html":{},"license.html":{}}}],["rootviewcontain",{"_index":19,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["row",{"_index":293,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["rxj",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["safari",{"_index":655,"title":{},"body":{"index.html":{}}}],["same",{"_index":326,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["save",{"_index":644,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":488,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["search",{"_index":114,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["see",{"_index":489,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["select",{"_index":355,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoneSelect.html":{}}}],["select.t",{"_index":566,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["select.ts:2",{"_index":567,"title":{},"body":{"classes/NoneSelect.html":{}}}],["selector",{"_index":141,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["sell",{"_index":776,"title":{},"body":{"license.html":{}}}],["seper",{"_index":37,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["servic",{"_index":11,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["set",{"_index":46,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["setitem",{"_index":307,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setitems(item",{"_index":319,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setloglevel",{"_index":673,"title":{},"body":{"classes/konsole.html":{}}}],["setloglevel(loglevel",{"_index":699,"title":{},"body":{"classes/konsole.html":{}}}],["shall",{"_index":784,"title":{},"body":{"license.html":{}}}],["skip",{"_index":557,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["softwar",{"_index":763,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["src/dynam",{"_index":478,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/fire",{"_index":483,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/konsol",{"_index":481,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/ngui",{"_index":282,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["start",{"_index":206,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["statement",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":668,"title":{},"body":{"classes/konsole.html":{}}}],["still",{"_index":536,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["stop",{"_index":204,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["string",{"_index":113,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["style",{"_index":45,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["subject",{"_index":779,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":774,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":785,"title":{},"body":{"license.html":{}}}],["support",{"_index":806,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":807,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":440,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabindex",{"_index":398,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabl",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":145,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["templateref",{"_index":212,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["test",{"_index":638,"title":{},"body":{"index.html":{}}}],["text",{"_index":116,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["text.replace(r",{"_index":124,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["this.autocompletecompon",{"_index":407,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.bluren",{"_index":237,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.bottominview.emit(thi",{"_index":555,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.bottominview.observers.length",{"_index":546,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.cdref.detectchang",{"_index":342,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.contentsel",{"_index":343,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.defaultinviewhandler(entri",{"_index":234,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.destroy",{"_index":348,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dynamiccomponentservice.createcomponent(nguiinviewpagecompon",{"_index":550,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.dynamiccomponentservice.insertcomponent(this.inviewpag",{"_index":552,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.el.nativeel",{"_index":425,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":415,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.element.nativeelement.getboundingclientrect().height",{"_index":349,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('.inview",{"_index":344,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.factoryresolv",{"_index":64,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.factoryresolver.resolvecomponentfactory(compon",{"_index":67,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.inview.emit(entri",{"_index":235,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inview.observers.length",{"_index":239,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inviewpag",{"_index":549,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.setitems(item",{"_index":561,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.templ",{"_index":553,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpages.push(this.inviewpag",{"_index":554,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.isinview",{"_index":233,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.islistload",{"_index":548,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.item",{"_index":337,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.itemsbackup",{"_index":339,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.listdirect",{"_index":405,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.log_levels[param",{"_index":712,"title":{},"body":{"classes/konsole.html":{}}}],["this.log_levels[this.loglevel",{"_index":710,"title":{},"body":{"classes/konsole.html":{}}}],["this.loglevel",{"_index":720,"title":{},"body":{"classes/konsole.html":{}}}],["this.nguiinview.emit(entri",{"_index":275,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nguioutview.emit(entri",{"_index":276,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.notinview.emit(entri",{"_index":236,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.object",{"_index":412,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.object.html",{"_index":416,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.observ",{"_index":226,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.disconnect",{"_index":229,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.observe(this.element.nativeel",{"_index":228,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observeropt",{"_index":224,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.once80pctvis",{"_index":238,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.opt",{"_index":223,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.outview",{"_index":336,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.pagesref",{"_index":551,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.parentlistcomp",{"_index":404,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.element.nativeel",{"_index":430,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.escaped.emit",{"_index":456,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.selected.emit(this.object",{"_index":455,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocus",{"_index":461,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused']('listitem",{"_index":462,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeel",{"_index":402,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setstyle(this.contentsel",{"_index":341,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.rootviewcontain",{"_index":65,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.rootviewcontainer.insert(componentref.hostview",{"_index":78,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.templ",{"_index":545,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.tolog('debug",{"_index":724,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('error",{"_index":734,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('info",{"_index":730,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('log",{"_index":728,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('warn",{"_index":732,"title":{},"body":{"classes/konsole.html":{}}}],["this.viewcontainer.clear",{"_index":414,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.virtuallistcompon",{"_index":406,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["thislistitem",{"_index":424,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["threshold",{"_index":177,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["throw",{"_index":408,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tolog",{"_index":674,"title":{},"body":{"classes/konsole.html":{}}}],["tolog(param",{"_index":701,"title":{},"body":{"classes/konsole.html":{}}}],["tort",{"_index":802,"title":{},"body":{"license.html":{}}}],["trackbi",{"_index":514,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["transform",{"_index":111,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["transform(text",{"_index":112,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["tree",{"_index":127,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["true",{"_index":173,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["ts",{"_index":219,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["tslint",{"_index":726,"title":{},"body":{"classes/konsole.html":{}}}],["tslint:dis",{"_index":273,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["type",{"_index":49,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["ui",{"_index":633,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":340,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":419,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["us",{"_index":56,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":196,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["util",{"_index":652,"title":{},"body":{"index.html":{}}}],["utils.modul",{"_index":104,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["utils.module.t",{"_index":476,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["utils/ngui",{"_index":103,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{}}}],["utils/src/dynam",{"_index":7,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["utils/src/fir",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/src/konsole.t",{"_index":604,"title":{},"body":{"coverage.html":{},"classes/konsole.html":{}}}],["utils/src/konsole.ts:11",{"_index":683,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:22",{"_index":685,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:25",{"_index":702,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:33",{"_index":700,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:47",{"_index":688,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:55",{"_index":698,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:62",{"_index":695,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:70",{"_index":706,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:77",{"_index":693,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/ngui",{"_index":107,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["valu",{"_index":172,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["var",{"_index":243,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["view",{"_index":290,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewchild",{"_index":537,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewchild('pag",{"_index":543,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewcontain",{"_index":373,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["viewcontainerref",{"_index":32,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewport",{"_index":132,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["virtual",{"_index":251,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["virtuallistcompon",{"_index":375,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["visibl",{"_index":201,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["void",{"_index":202,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["warn",{"_index":675,"title":{},"body":{"classes/konsole.html":{}}}],["warn(...arg",{"_index":705,"title":{},"body":{"classes/konsole.html":{}}}],["warranti",{"_index":787,"title":{},"body":{"license.html":{}}}],["whether",{"_index":162,"title":{},"body":{"components/NguiInviewComponent.html":{},"license.html":{}}}],["window",{"_index":716,"title":{},"body":{"classes/konsole.html":{}}}],["window.consol",{"_index":703,"title":{},"body":{"classes/konsole.html":{}}}],["window.konsol",{"_index":664,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorag",{"_index":717,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage.setitem('konsole.log_level",{"_index":719,"title":{},"body":{"classes/konsole.html":{}}}],["without",{"_index":766,"title":{},"body":{"license.html":{}}}],["won't",{"_index":194,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ye",{"_index":50,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["zone.j",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DynamicComponentService.html":{"url":"injectables/DynamicComponentService.html","title":"injectable - DynamicComponentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n        \n\n            \n                Description\n            \n            \n                Provide service to add or remove component dynamically\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                factoryResolver\n                            \n                            \n                                rootViewContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                insertComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryResolver: )\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryResolver\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateComponent(component: any, into?: ViewContainerRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            returns component reference\nThe reason to seperate createCompnent and insertComponent is\nto allow some actions before we insert into a hostView.\ne.g styling, setting attributes, etc\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        into\n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ninsertComponent(componentRef: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            insert component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentRef\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Component\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            factoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        factoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                        used to create a factory from a component class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootViewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootViewContainer:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                        defines where a dynamic components insert into \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Provide service to add or remove component dynamically\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiCommonModule.html":{"url":"modules/NguiCommonModule.html","title":"module - NguiCommonModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiCommonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-common.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NguiHighlightPipe.html":{"url":"pipes/NguiHighlightPipe.html","title":"pipe - NguiHighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  NguiHighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        nguiHighlight\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(text: string, search: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        search\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `${match}`);\n    }\n\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewComponent.html":{"url":"components/NguiInviewComponent.html","title":"component - NguiInviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n\n\n    \n        Description\n    \n    \n        An element that listens to viewport positioning and fires inView and notInview events\nexample\n\n   \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview\n            \n\n\n            \n                styles\n                :host {display: block;}\n            \n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isInview\n                            \n                            \n                                observer\n                            \n                            \n                                once80PctVisible\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultInviewHandler\n                            \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEnabled\n                            \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                inview\n                            \n                            \n                                notInview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blurEnabled\n                    \n                    \n                        Controls whether blur effect is applied to a component with less than 80% intersection ratio.\nOnly applies when there are no \"inview\" event handlers defined.\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type:    IntersectionObserverInit\n\n                            \n                        \n                            Default value: {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        inview\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notInview\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultInviewHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultInviewHandler(entry: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            default intersection handler, which sets blur dependes on intersection ratio\nthis won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            fires (inview) and (notInview) events when this component is visible or not visible  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            stop IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInview:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:53\n                            \n                        \n\n                \n                    \n                        indicates that this element is in viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            once80PctVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        once80PctVisible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                        indicates that this element is 80% in viewport. Used by the default callback \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:36\n                            \n                        \n\n                \n                    \n                         reference \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * An element that listens to viewport positioning and fires inView and notInview events\n * ### example\n * ```ts\n * \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        \n        \n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /**  reference */\n  @ContentChild(TemplateRef) template: TemplateRef;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter = new EventEmitter();\n  @Output() notInview: EventEmitter = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiInviewDirective.html":{"url":"directives/NguiInviewDirective.html","title":"directive - NguiInviewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiInviewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n        \n\n            \n                Description\n            \n            \n                Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [nguiInview], [nguiOutview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nguiInview\n                            \n                            \n                                nguiOutview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type:    IntersectionObserverInit\n\n                            \n                        \n                            Default value: {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:27\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nguiInview\n                    \n                    \n                        Event that will be fired when in viewport \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nguiOutview\n                    \n                    \n                        Event that will be fired when out of  viewport \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:62\n                            \n                        \n\n\n                \n                    \n                            Fires (nguiInview) event when this element is in viewport\n  and fires (nguiOutview) event when this element is not in viewport\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:52\n                            \n                        \n\n\n                \n                    \n                            Stops IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiInviewModule.html":{"url":"modules/NguiInviewModule.html","title":"module - NguiInviewModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiInviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiInviewComponent\n                            \n                            \n                                NguiInviewDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewComponent\n                            \n                            \n                                    NguiInviewDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewPageComponent.html":{"url":"components/NguiInviewPageComponent.html","title":"component - NguiInviewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n\n\n    \n        Description\n    \n    \n        A block of component that listens to inView and outView events,\nso that it empties contents when out of view after backup items\nand restores the contents when in view\nexample\n\n   \n     \n       row number: {{ num }}\n     \n   \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview-page\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n  \n  \n  \n  \n  {{ itemsBackup.length }} items hidden\n\n\n\n   Error: requires [items] \n   Error: requires &lt;ng-template>\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsEl\n                            \n                            \n                                destroyed\n                            \n                            \n                                itemsBackup\n                            \n                            \n                                options\n                            \n                            \n                                outView\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emptyItems\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restoreItems\n                            \n                            \n                                setItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        List of elements that are used to render this element \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Empty items when not in viewport, so that elements are not rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restoreItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestoreItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Restore items when in viewport, so that elements are rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetItems(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsEl:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:72\n                            \n                        \n\n                \n                    \n                        The first element of this component.\nThe height of it remains the same even when items get empty out.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destroyed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsBackup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsBackup:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:67\n                            \n                        \n\n                \n                    \n                        The copy of items. This is set when this element is out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:63\n                            \n                        \n\n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outView:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        Indicates that the page of out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:56\n                            \n                        \n\n                \n                    \n                        Allow users to change the contents \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n *\n * ### example\n * ```ts\n * \n *   \n *     \n *       row number: {{ num }}\n *     \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    \n      \n      \n      \n      \n      {{ itemsBackup.length }} items hidden\n    \n\n    \n       Error: requires [items] \n       Error: requires &lt;ng-template>\n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  // @Input('template') template: TemplateRef;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array;\n\n  /** IntersectionObserver options */\n  options: any;\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array): void {\n    if (!this.destroyed) {\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ itemsBackup.length }} items hidden   Error: requires [items]    Error: requires '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListDirective.html":{"url":"directives/NguiListDirective.html","title":"directive - NguiListDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiListDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngui-list\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListItemDirective.html":{"url":"directives/NguiListItemDirective.html","title":"directive - NguiListItemDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiListItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngui-list-item\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nextSibling\n                            \n                            \n                                parentListComp\n                            \n                            \n                                prevSibling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                click\n                            \n                            \n                                focus\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, viewContainer: ViewContainerRef, listDirective: NguiListDirective, virtualListComponent: NguiVirtualListComponent, autocompleteComponent: NguiAutocompleteComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        listDirective\n                                                  \n                                                        \n                                                                    NguiListDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualListComponent\n                                                  \n                                                        \n                                                                    NguiVirtualListComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        autocompleteComponent\n                                                  \n                                                        \n                                                                    NguiAutocompleteComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keydown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeydown(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeyup(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentListComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentListComp:     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                    \n                \n                    \n                        \n                            Type :     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prevSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiListModule.html":{"url":"modules/NguiListModule.html","title":"module - NguiListModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_imports\n\n\n\ncluster_NguiListModule_exports\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiAutocompleteComponent\n                            \n                            \n                                NguiInviewPageComponent\n                            \n                            \n                                NguiListDirective\n                            \n                            \n                                NguiListItemDirective\n                            \n                            \n                                NguiVirtualListComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                NguiInviewPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiAutocompleteComponent\n                            \n                            \n                                    NguiInviewPageComponent\n                            \n                            \n                                    NguiListDirective\n                            \n                            \n                                    NguiListItemDirective\n                            \n                            \n                                    NguiVirtualListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiUtilsModule.html":{"url":"modules/NguiUtilsModule.html","title":"module - NguiUtilsModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiUtilsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiHighlightPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiHighlightPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiVirtualListComponent.html":{"url":"components/NguiVirtualListComponent.html","title":"component - NguiVirtualListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiVirtualListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n\n\n    \n        Description\n    \n    \n        Virtual List\nThe  inserts  into\n when it is in viewport\nWhen it's inserted, it will be pushed down, which makes it out of viewport.\nUser scrolls down to see the bottom of the list,\nthen it will insert another  again.\n listens to (nguiInview) and (nguiOutview) events,\nwhen  is out of view port, it empties out the contents.\nand it restores back the contents when it is in viewport again.\nexample\n\n   \n     Loading\n     row number: {{ num }}\n   \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-virtual-list\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n   -->\n  \n   into #pages -->\n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _focused\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                addList\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, element: ElementRef, dynamicComponentService: DynamicComponentService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dynamicComponentService\n                                                  \n                                                        \n                                                                    DynamicComponentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nexample\n\n   \n     ngIf=\"items else noItems\">\n        ngFor=\"let num of items; trackBy: num\">row number: {{ num }}\n     \n     Loading\n   \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnInviewPageToPages\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnInviewPageToPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addList\n                            \n                            \n                        \n                    \n                \n                \n                    \naddList(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Check if necessary input and output is provided \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _focused\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _focused:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dynamicComponentService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dynamicComponentService:     DynamicComponentService\n\n                    \n                \n                    \n                        \n                            Type :     DynamicComponentService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPage:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:89\n                            \n                        \n\n                \n                    \n                        The last NguiInviewPageComponent being inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPages:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isListLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:92\n                            \n                        \n\n                \n                    \n                        Indicates if a page is still loading \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagesRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pagesRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:61\n                            \n                        \n\n                \n                    \n                        the container NguiInviewPage will be inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        Template of NguiInviewPage. Allow users to define their own template  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `` inserts  into\n * `` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `` again.\n *\n *  listens to (nguiInview) and (nguiOutview) events,\n * when  is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n *\n * ### example\n * ```ts\n * \n *   \n *     Loading\n *     row number: {{ num }}\n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    \n       -->\n      \n       into #pages -->\n      \n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n   *\n   * ### example\n   * ```ts\n   * \n   *   \n   *     \n   *        row number: {{ num }}\n   *     \n   *     Loading\n   *   \n   * \n   * ```\n   */\n  @Output() bottomInview: EventEmitter = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error(' requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    } else {\n      console.log('Already a page being inserted, skipping adding a page');\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->     into #pages -->  '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiVirtualListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoMatchFound.html":{"url":"classes/NoMatchFound.html","title":"class - NoMatchFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoMatchFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'No Match Found'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoMatchFound {\n  html = 'No Match Found';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoneSelect.html":{"url":"classes/NoneSelect.html","title":"class - NoneSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoneSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Select'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/none-select.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoneSelect {\n  html = 'Select';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.5.0 (2018-08-15)\n\nNew \"blurEnabled\" configuration option for \"ngui-inview\" component\n\"ngui-inview\" component's \"options\" config was renamed to \"observerOptions\" to better represent its purpose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n            \n            \n                directive\n            \n            \n                NguiInviewDirective\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n            \n            \n                component\n            \n            \n                NguiAutocompleteComponent\n            \n            \n                27 %\n                (12/43)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewPageComponent\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListItemDirective\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListDirective\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n            \n            \n                component\n            \n            \n                NguiVirtualListComponent\n            \n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n            \n            \n                class\n            \n            \n                NoMatchFound\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n            \n            \n                class\n            \n            \n                NoneSelect\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n            \n            \n                function\n            \n            \n                fireEvent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n            \n            \n                class\n            \n            \n                konsole\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n            \n            \n                pipe\n            \n            \n                NguiHighlightPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fireEvent   (projects/.../fire-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfireEvent(el: undefined, type: undefined, options: any)\n                    \n                \n\n\n\n\n                \n                    \n                            fire the given event with options on the element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            fireEvent(el, &#39;click&#39;);\nfireEvent(el, &#39;keypress&#39;, {key: &#39;Enter&#39;});\n                                        \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngui/common\nAngular 6+ UI common directives, functions, services\n\n \n\n\nDemoObject DocumentationCode Coverage ReportUnit Test ReportAcceptance ReportArticle on Medium  \nInstall\n\ninstall @ngui/common\n\n$ npm install @ngui/common --save\nimport NguiCommonModule to your AppModule  \n\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '@ngui/common';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, NguiListModule, NguiInviewModule, NguiUtilsModule],\n  declarations: [AppComponent],\n  providers: [HTTP_PROVIDERS],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }Use it in your code\n\n\n  \nModules\nNguiInViewModule\nHandles lazy rendering of Angular components, which utilizes HTML5 IntersectionObserver.\nFor IE11 and Safari, please add polyfill for this module:\n\nngui-inview component\nngui-inview directive\n\nNguiUtilsModules\nCollection of basic utility functions\n\nDynamicComponentService\nnguiHilight pipe\nfireEvent function\n\nNguiListModule\nHandles list elements with highlight and keyboard/mouse interaction\n\nngui-inview-page component\nngui-list component\nngui-virtual-list component\nngui-autocomplete component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/konsole.html":{"url":"classes/konsole.html","title":"class - konsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  konsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n        \n\n            \n                Description\n            \n            \n                window.konsole alternative\nexample\nkonsole.setLogLevel('error');\nkonwole.log(1,2,3,4,5);\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOG_LEVELS\n                            \n                            \n                                    Static\n                                logLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                setLogLevel\n                            \n                            \n                                    Static\n                                toLog\n                            \n                            \n                                    Static\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOG_LEVELS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOG_LEVELS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:11\n                            \n                        \n\n                \n                    \n                        all log levels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            logLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logLevel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'INFO'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:22\n                            \n                        \n\n                \n                    \n                        current log level set by setLogLevel, default 'INFO' \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:47\n                            \n                        \n\n\n                \n                    \n                            The same as console.debug() if the current log level is greater than debug \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:77\n                            \n                        \n\n\n                \n                    \n                            The same as console.error() if the current log level is greater than error \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:62\n                            \n                        \n\n\n                \n                    \n                            The same as console.info() if the current log level is greater than info \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:55\n                            \n                        \n\n\n                \n                    \n                            The same as console.log() if the current log level is greater than log \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLogLevel(logLevel: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:33\n                            \n                        \n\n\n                \n                    \n                            sets the current log level \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toLog(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns if it should call window.console or not \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warn(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:70\n                            \n                        \n\n\n                \n                    \n                            The same as console.warn() if the current log level is greater than warn \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Allen Kim\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NguiCommonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiInviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiUtilsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
