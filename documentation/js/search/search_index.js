var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/DynamicComponentService.html",[0,1.308,1,1.16]],["body/injectables/DynamicComponentService.html",[0,2.116,1,1.514,2,0.385,3,0.385,4,0.267,5,0.497,6,0.497,7,3.425,8,2.165,9,1.233,10,1.06,11,2.999,12,2.999,13,3.69,14,1.583,15,3.716,16,0.595,17,1.06,18,5.093,19,4.571,20,1.345,21,3.69,22,4.571,23,1.093,24,2.663,25,0.047,26,1.293,27,3.69,28,1.216,29,1.216,30,1.216,31,3.69,32,3.512,33,2.663,34,1.811,35,2.999,36,3.69,37,3.69,38,3.69,39,2.545,40,2.999,41,2.999,42,4.037,43,3.69,44,2.999,45,2.205,46,1.934,47,3.69,48,3.69,49,0.892,50,2.663,51,4.14,52,3.69,53,2.663,54,4.571,55,2.663,56,1.708,57,2.999,58,4.234,59,0.105,60,0.52,61,0.52,62,0.267,63,2.663,64,2.663,65,3.69,66,1.934,67,2.663,68,2.663,69,4.234,70,0.862,71,2.663,72,2.663,73,3.69,74,1.836,75,1.591,76,2.663,77,2.663,78,2.663,79,2.663,80,0.03,81,0.03]],["title/modules/NguiCommonModule.html",[82,0.631,83,1.481]],["body/modules/NguiCommonModule.html",[2,0.504,3,0.504,4,0.349,5,0.349,6,0.349,10,1,25,0.046,59,0.086,60,1.046,61,0.68,62,0.509,70,1.567,80,0.035,81,0.035,82,0.985,83,2.982,84,1.128,85,1.27,86,1.612,87,1.612,88,2.831,89,2.831,90,2.831,91,2.325,92,2.622,93,2.622,94,2.311,95,1.825,96,1.128,97,3.483,98,2.311,99,2.402,100,2.831,101,2.831,102,3.483,103,2.831,104,3.483]],["title/pipes/NguiHighlightPipe.html",[105,1.481,106,1.481]],["body/pipes/NguiHighlightPipe.html",[2,0.534,3,0.534,4,0.37,5,0.458,6,0.458,20,1.348,25,0.047,26,0.938,28,1.062,29,1.428,30,1.062,34,1.669,49,0.721,59,0.091,60,0.721,61,0.721,62,0.37,66,1.937,80,0.037,81,0.042,105,2.605,106,2.398,107,3.72,108,3.005,109,1.517,110,4.576,111,3.696,112,4.576,113,3.329,114,5.195,115,3.696,116,4.576,117,4.576,118,1.711,119,4.971,120,3.696,121,1.711,122,3.696,123,3.696,124,3.696]],["title/components/NguiInviewComponent.html",[14,0.812,125,1.16]],["body/components/NguiInviewComponent.html",[0,0.78,2,0.244,3,0.244,4,0.169,5,0.514,6,0.514,9,0.78,10,0.756,14,1.343,16,0.377,17,0.756,20,0.96,23,1.081,25,0.047,26,1.314,28,0.93,29,1.209,30,1.307,34,1.448,35,2.14,44,2.14,45,1.573,46,1.38,49,0.858,56,1.838,59,0.042,60,0.514,61,0.329,62,0.169,70,1.473,74,1.816,75,1.573,80,0.021,81,0.021,84,0.853,85,0.615,109,0.692,118,1.219,121,1.499,125,1.503,126,1.163,127,1.163,128,3.538,129,1.37,130,1.962,131,1.816,132,2.515,133,2.633,134,1.918,135,2.35,136,4.396,137,1.548,138,1.38,139,1.936,140,2.234,141,2.164,142,1.573,143,1.816,144,1.816,145,2.902,146,3.661,147,2.976,148,3.661,149,2.633,150,2.14,151,2.525,152,2.188,153,2.206,154,3.239,155,3.421,156,2.373,157,0.883,158,1.694,159,2.633,160,2.633,161,2.633,162,2.14,163,2.976,164,2.633,165,3.661,166,2.633,167,3.661,168,4.208,169,3.661,170,2.976,171,1.659,172,1.503,173,1.936,174,1.686,175,2.794,176,2.14,177,2.14,178,1.38,179,1.816,180,1.816,181,1.816,182,2.14,183,2.14,184,1.686,185,2.633,186,2.633,187,2.633,188,1.686,189,2.627,190,1.686,191,1.686,192,2.633,193,1.686,194,2.14,195,2.633,196,1.816,197,2.633,198,2.14,199,2.14,200,1.686,201,3.661,202,1.948,203,1.686,204,2.14,205,1.686,206,1.573,207,2.188,208,1.686,209,2.525,210,1.686,211,2.633,212,2.525,213,1.163,214,1.816,215,1.686,216,1.37,217,1.37,218,0.78,219,1.163,220,1.163,221,1.573,222,1.37,223,1.37,224,1.37,225,1.37,226,1.37,227,1.37,228,1.37,229,1.37,230,1.37,231,1.37,232,1.37,233,1.686,234,1.686,235,1.686,236,1.686,237,1.686,238,1.686,239,1.686,240,1.686,241,1.38,242,0.588,243,2.525,244,1.163,245,0.692,246,1.163,247,1.163,248,0.692,249,1.163,250,0.615,251,0.692,252,0.96,253,0.615,254,1.007,255,1.163,256,0.546,257,1.163,258,0.615,259,1.007,260,1.163]],["title/directives/NguiInviewDirective.html",[242,0.631,253,1.031]],["body/directives/NguiInviewDirective.html",[0,1.039,2,0.324,3,0.324,4,0.225,5,0.522,6,0.522,9,1.039,16,0.501,17,0.939,20,1.191,23,1.341,25,0.047,26,1.306,28,0.939,29,0.939,30,1.392,34,1.405,49,0.946,56,1.039,59,0.055,60,0.638,61,0.438,62,0.225,74,2.254,75,1.953,80,0.026,81,0.026,84,1.058,96,1.058,109,0.921,118,1.513,121,1.784,128,3.594,130,2.139,132,3.074,134,2.696,137,1.707,139,2.303,140,2.657,141,1.513,147,3.441,150,2.656,151,2.919,152,2.529,153,2.357,155,3.441,156,2.688,157,1.176,158,2.173,159,3.132,171,0.818,172,0.921,175,3.026,176,2.656,177,2.656,178,1.713,179,2.254,180,2.254,181,2.254,182,2.656,183,2.656,185,1.824,187,1.824,189,2.896,198,1.824,199,2.656,202,2.173,204,2.656,206,1.953,216,1.824,217,1.824,218,1.039,221,1.341,222,1.824,223,2.656,224,2.656,225,1.824,226,2.656,227,2.656,228,1.824,229,1.824,230,1.824,231,1.824,232,1.824,242,0.861,253,1.191,254,3.026,261,1.824,262,4.116,263,2.657,264,3.268,265,2.244,266,2.244,267,2.244,268,2.244,269,2.244,270,2.244,271,2.244,272,2.244,273,1.341,274,1.341,275,2.244,276,2.244]],["title/modules/NguiInviewModule.html",[82,0.631,91,1.16]],["body/modules/NguiInviewModule.html",[2,0.517,3,0.517,4,0.358,5,0.358,6,0.358,10,1.028,25,0.046,59,0.088,60,1.032,61,0.698,62,0.529,80,0.036,81,0.036,82,1.002,84,1.159,85,1.305,86,2.267,87,1.656,91,2.309,94,2.35,95,1.875,96,1.159,98,2.35,99,2.468,125,2.343,218,1.656,253,2.081,277,2.909,278,2.909,279,2.909,280,3.578,281,3.093,282,3.093,283,3.578,284,3.578]],["title/components/NguiInviewPageComponent.html",[14,0.812,248,1.16]],["body/components/NguiInviewPageComponent.html",[2,0.232,3,0.232,4,0.16,5,0.503,6,0.503,9,0.741,14,1.321,16,0.358,17,0.726,20,0.922,23,1.038,25,0.047,26,1.259,28,0.726,29,1.113,30,1.284,34,1.413,39,1.744,41,1.302,45,1.511,46,1.642,49,0.872,56,1.171,59,0.04,60,0.313,61,0.313,62,0.16,66,0.839,70,1.448,80,0.02,81,0.02,85,0.584,96,1.448,109,0.657,118,1.171,125,0.657,126,1.104,127,1.104,130,2.104,131,1.744,132,2.671,135,2.429,137,0.819,138,1.325,139,1.873,140,2.161,141,2.129,142,1.511,143,1.744,144,2.454,145,3.173,151,2.454,152,2.127,153,1.865,157,0.839,158,1.647,171,0.922,172,1.038,173,1.511,175,1.511,196,1.744,202,2.18,207,1.873,209,1.744,212,2.672,213,1.104,214,1.744,219,1.104,220,1.104,221,1.873,241,1.325,242,0.565,243,2.454,244,1.104,245,0.657,246,1.104,247,1.104,248,1.461,249,1.104,250,0.584,251,0.657,252,1.298,253,0.584,254,0.957,255,1.104,256,0.519,257,1.104,258,0.584,259,3.206,260,1.104,285,2.631,286,1.302,287,4.118,288,3.505,289,3.505,290,2.893,291,2.529,292,2.893,293,2.056,294,2.056,295,2.056,296,2.454,297,3.134,298,3.134,299,3.348,300,2.84,301,2.529,302,3.559,303,3.559,304,3.559,305,3.559,306,3.559,307,2.529,308,2.749,309,2.454,310,3.134,311,2.893,312,2.529,313,2.671,314,1.602,315,1.602,316,1.602,317,1.602,318,1.602,319,2.529,320,1.602,321,2.547,322,1.602,323,2.056,324,4.118,325,2.529,326,2.056,327,2.529,328,2.161,329,1.602,330,2.056,331,1.602,332,1.602,333,1.602,334,2.529,335,1.602,336,3.559,337,3.559,338,1.602,339,2.529,340,2.547,341,2.529,342,3.134,343,2.529,344,1.602,345,1.602,346,1.602,347,1.744,348,3.134,349,1.602,350,1.602,351,1.602,352,1.602]],["title/directives/NguiListDirective.html",[242,0.631,256,0.915]],["body/directives/NguiListDirective.html",[2,0.482,3,0.482,4,0.334,5,0.518,6,0.518,16,0.745,17,1.232,23,1.369,25,0.046,26,1.271,28,0.958,29,0.958,30,0.958,49,0.977,59,0.082,60,0.651,61,0.651,62,0.334,70,1.389,80,0.035,81,0.035,109,1.369,121,1.985,130,2.125,134,2.623,137,1.389,141,1.985,156,3.094,157,1.748,158,2.453,189,3.221,242,1.059,252,1.564,256,1.389,263,2.958,273,1.993,274,1.993,285,2.713,353,2.711,354,3.269,355,3.094,356,4.289,357,2.958,358,2.958,359,3.486,360,3.486,361,3.335,362,3.335,363,3.335]],["title/directives/NguiListItemDirective.html",[242,0.631,258,1.031]],["body/directives/NguiListItemDirective.html",[2,0.275,3,0.275,4,0.19,5,0.51,6,0.51,16,0.425,17,0.83,20,1.053,23,1.186,25,0.047,26,1.275,28,0.546,29,0.546,30,1.205,32,2.691,34,0.694,49,0.819,59,0.047,60,0.862,61,0.371,62,0.19,66,2.406,70,1.532,80,0.023,81,0.028,109,0.781,118,1.337,137,1.6,139,2.088,141,1.337,142,2.331,152,2.331,153,1.831,157,0.997,158,1.806,163,3.171,171,1.053,173,1.137,178,1.831,202,2.125,207,1.137,221,2.64,242,0.78,245,1.884,250,1.674,251,1.186,252,1.956,256,1.487,258,1.053,259,2.64,273,1.726,274,1.726,285,2.668,300,1.312,308,2.088,309,2.691,313,1.137,321,3.591,354,1.312,355,1.137,357,1.312,364,1.546,365,3.902,366,3.902,367,3.902,368,3.493,369,3.902,370,3.493,371,3.493,372,2.889,373,3.493,374,3.493,375,3.493,376,3.493,377,2.889,378,2.349,379,1.902,380,3.41,381,1.902,382,1.902,383,1.902,384,2.889,385,1.902,386,2.889,387,1.902,388,1.902,389,1.902,390,1.902,391,1.546,392,1.546,393,1.546,394,1.726,395,1.546,396,1.726,397,1.546,398,2.889,399,1.902,400,1.902,401,1.546,402,1.902,403,1.546,404,2.889,405,1.902,406,1.902,407,1.902,408,1.902,409,1.902,410,1.902,411,1.546,412,2.889,413,2.889,414,1.902,415,1.902,416,1.902,417,2.349,418,2.889,419,2.349,420,2.349,421,2.889,422,2.349,423,1.902,424,1.902,425,1.902,426,2.889,427,1.902,428,1.902,429,1.902,430,1.902,431,1.902,432,1.902,433,1.902,434,1.902,435,1.902,436,2.889,437,1.902,438,1.902,439,1.902,440,2.889,441,4.417,442,1.902,443,1.902,444,3.902,445,1.902,446,4.417,447,1.902,448,1.546,449,1.902,450,1.902,451,1.902,452,1.902,453,1.902,454,1.902,455,2.889,456,1.902,457,1.902,458,1.902,459,1.902,460,1.902,461,2.889,462,2.889,463,1.902]],["title/modules/NguiListModule.html",[82,0.631,92,1.308]],["body/modules/NguiListModule.html",[2,0.433,3,0.433,4,0.3,5,0.3,6,0.3,10,0.861,25,0.046,59,0.074,60,1.065,61,0.585,62,0.501,70,0.971,80,0.032,81,0.032,82,0.893,84,0.971,85,1.093,86,2.083,87,1.388,91,2.112,92,2.653,94,2.096,95,1.571,96,0.971,98,2.096,99,2.068,100,2.437,101,2.437,135,1.388,218,1.388,245,2.289,248,2.311,250,2.033,251,1.231,252,1.093,256,1.806,258,2.033,281,2.758,282,3.45,391,2.437,392,2.437,393,2.437,464,2.437,465,2.437,466,2.998,467,2.437,468,2.998,469,4,470,2.998,471,2.437]],["title/modules/NguiUtilsModule.html",[82,0.631,93,1.308]],["body/modules/NguiUtilsModule.html",[1,2.239,2,0.508,3,0.508,4,0.352,5,0.352,6,0.352,10,1.395,25,0.047,59,0.087,60,1.064,61,0.686,62,0.527,80,0.036,81,0.036,82,0.99,84,1.138,85,1.281,86,2.249,87,1.627,93,2.577,94,2.324,95,1.842,96,1.138,98,2.324,103,2.857,106,2.985,137,1.138,218,1.627,281,3.058,282,2.424,472,2.857,473,2.857,474,2.857,475,2.857,476,3.514,477,3.514,478,3.514,479,2.857,480,2.65,481,3.514,482,2.65,483,3.514]],["title/components/NguiVirtualListComponent.html",[14,0.812,250,1.031]],["body/components/NguiVirtualListComponent.html",[1,1.91,2,0.193,3,0.193,4,0.134,5,0.504,6,0.504,7,0.923,9,0.619,10,0.629,14,1.016,16,0.299,17,0.629,20,0.798,23,0.898,25,0.047,26,1.288,28,0.629,29,1.016,30,0.629,32,2.44,34,1.013,39,1.51,42,3.849,45,1.308,46,0.701,49,0.938,51,2.608,57,1.779,59,0.033,60,0.542,61,0.261,62,0.134,70,1.442,80,0.018,81,0.018,85,0.488,96,1.23,109,0.549,118,1.013,121,1.286,125,0.549,126,0.923,127,0.923,130,1.717,131,1.51,132,2.27,134,2.269,135,1.485,137,1.507,138,1.681,141,2.004,142,1.308,143,1.51,144,1.51,145,3.266,153,1.147,156,2.499,158,1.758,170,1.779,171,0.798,172,0.898,173,0.8,189,2.661,194,1.779,196,2.765,202,1.758,207,1.66,209,1.51,212,2.213,213,1.51,214,1.51,219,1.51,220,0.923,241,1.147,242,0.489,243,2.213,244,0.923,245,0.549,246,0.923,247,0.923,248,1.645,249,0.923,250,1.17,251,2.163,252,1.624,253,0.488,254,1.66,255,0.923,256,0.433,257,0.923,258,0.488,259,2.396,260,0.923,262,1.779,263,3.209,285,2.637,288,1.779,289,3.087,290,2.608,292,1.779,293,2.258,294,2.608,295,2.876,296,3.266,300,0.923,308,2.114,309,2.619,311,3.087,313,2.499,323,1.779,328,1.915,347,2.44,354,1.915,355,2.114,357,1.51,358,1.51,359,1.779,360,1.779,419,1.779,420,2.608,471,1.088,479,1.088,484,1.088,485,2.189,486,2.189,487,2.189,488,2.189,489,2.189,490,3.798,491,2.189,492,3.208,493,3.208,494,2.189,495,4.56,496,2.777,497,3.208,498,3.798,499,4.183,500,3.208,501,3.208,502,3.208,503,2.189,504,3.208,505,3.798,506,1.338,507,2.189,508,2.189,509,3.208,510,2.189,511,1.338,512,1.338,513,1.338,514,1.338,515,1.338,516,1.338,517,1.338,518,1.338,519,1.338,520,1.147,521,2.189,522,1.779,523,2.189,524,1.338,525,1.338,526,2.189,527,2.189,528,1.338,529,1.338,530,1.338,531,1.338,532,1.338,533,2.189,534,2.777,535,1.338,536,2.189,537,2.189,538,1.338,539,2.189,540,3.208,541,1.338,542,1.338,543,1.338,544,1.338,545,2.189,546,1.338,547,1.088,548,2.777,549,1.338,550,1.338,551,1.338,552,1.338,553,1.338,554,1.338,555,1.338,556,1.338,557,1.338,558,1.338,559,1.088,560,1.338,561,1.338]],["title/classes/NoMatchFound.html",[59,0.07,396,1.689]],["body/classes/NoMatchFound.html",[2,0.588,3,0.588,4,0.407,5,0.486,6,0.486,16,0.909,17,1.394,25,0.045,26,1.033,49,0.794,59,0.12,62,0.407,80,0.039,81,0.045,113,2.899,171,1.484,172,1.67,241,2.813,396,2.899,397,3.944,562,3.944,563,3.308,564,4.07]],["title/classes/NoneSelect.html",[59,0.07,394,1.689]],["body/classes/NoneSelect.html",[2,0.594,3,0.594,4,0.412,5,0.489,6,0.489,16,0.918,17,1.402,25,0.045,26,1.044,49,0.803,59,0.121,62,0.412,80,0.039,81,0.039,113,2.917,171,1.499,172,1.688,241,2.823,355,2.917,394,2.917,565,3.968,566,3.343,567,4.112]],["title/coverage.html",[568,2.651]],["body/coverage.html",[0,1.531,1,1.358,4,0.331,5,0.566,6,0.566,7,2.281,8,2.688,14,1.433,25,0.046,49,0.645,59,0.117,80,0.034,81,0.038,105,1.733,106,1.733,107,2.688,108,2.688,121,1.531,125,1.358,128,2.942,129,2.688,135,1.531,242,1.055,245,1.358,248,1.358,250,1.206,251,1.358,252,1.206,253,1.206,256,1.071,258,1.206,261,2.688,285,2.706,286,2.688,353,2.688,364,2.688,394,1.976,396,1.976,403,4.055,448,2.688,480,1.976,482,1.976,484,2.688,520,1.733,562,2.688,563,2.688,565,2.688,566,2.688,568,2.281,569,2.688,570,3.307,571,3.307,572,3.307,573,3.307,574,3.307,575,3.307,576,3.307,577,3.307,578,3.307,579,3.307,580,3.307,581,3.307,582,3.307,583,3.307,584,3.307,585,4.266,586,3.307,587,3.307,588,2.688,589,2.688,590,4.266,591,3.307,592,2.688,593,3.307,594,3.307,595,3.307,596,3.307]],["title/dependencies.html",[84,1.1,597,2.367]],["body/dependencies.html",[15,3.3,25,0.047,61,0.792,80,0.039,81,0.039,84,1.315,218,1.879,598,4.059,599,5.702,600,4.059,601,4.059,602,4.059,603,4.844,604,3.341,605,4.059,606,4.059,607,4.059,608,4.059,609,4.059,610,4.059,611,4.059,612,4.059]],["title/miscellaneous/functions.html",[520,1.78,613,1.924]],["body/miscellaneous/functions.html",[5,0.411,6,0.411,16,0.916,25,0.043,28,1.178,29,1.178,30,1.546,49,1.015,80,0.039,81,0.039,130,1.684,134,2.149,137,1.328,138,2.149,340,3.962,358,2.829,378,3.334,482,2.913,520,2.149,522,3.334,588,3.334,589,3.962,613,3.334,614,4.101,615,5.201,616,4.101,617,4.101,618,4.101]],["title/index.html",[16,0.529,206,1.414,619,1.924]],["body/index.html",[1,1.417,10,0.992,11,2.807,12,2.807,14,1.536,25,0.045,56,1.598,59,0.085,60,0.94,62,0.346,70,1.732,75,2.063,80,0.035,81,0.035,82,0.979,83,1.809,86,1.598,87,1.598,91,1.978,92,2.23,93,2.23,98,1.809,105,1.809,130,1.417,135,2.23,175,2.063,242,0.979,251,1.417,252,1.757,296,2.381,308,2.063,411,2.807,417,3.564,482,2.063,520,2.525,568,2.381,620,5.069,621,4.385,622,3.453,623,3.453,624,3.453,625,3.453,626,3.453,627,3.453,628,3.453,629,3.453,630,3.453,631,4.818,632,3.453,633,3.453,634,4.385,635,3.453,636,3.453,637,4.385,638,3.453,639,3.453,640,3.453,641,4.385,642,3.453,643,3.453,644,3.453,645,3.453,646,3.453,647,3.453,648,3.453,649,3.453,650,3.453,651,3.453,652,3.453]],["title/classes/konsole.html",[59,0.07,480,1.689]],["body/classes/konsole.html",[2,0.711,3,0.253,4,0.175,5,0.483,6,0.483,9,0.809,16,0.39,17,0.778,20,0.987,25,0.047,26,1.2,28,1.28,29,1.28,30,1.28,34,1.793,46,1.956,49,0.898,59,0.067,62,0.175,66,1.737,80,0.022,81,0.022,113,2.413,138,0.916,171,1.361,172,1.111,178,0.916,179,3.528,202,2.235,273,1.98,274,1.98,299,3.472,313,3.088,326,3.926,328,1.867,347,1.867,380,3.283,395,2.201,401,2.201,480,1.618,547,2.201,559,2.201,592,1.421,604,1.205,653,1.748,654,1.748,655,2.707,656,1.748,657,5.509,658,3.732,659,4.917,660,4.271,661,5.431,662,3.732,663,2.707,664,4.271,665,2.707,666,2.707,667,2.707,668,2.707,669,2.707,670,2.707,671,2.707,672,1.748,673,5.212,674,1.748,675,5.116,676,2.707,677,1.748,678,2.707,679,4.829,680,4.038,681,2.707,682,1.748,683,2.707,684,1.748,685,2.707,686,2.707,687,1.748,688,2.707,689,1.748,690,2.707,691,1.748,692,2.707,693,1.748,694,2.707,695,1.748,696,2.707,697,1.748,698,2.707,699,1.748,700,2.707,701,1.748,702,1.748,703,1.748,704,1.748,705,1.748,706,1.748,707,1.748,708,1.748,709,1.748,710,1.748,711,1.748,712,1.748,713,1.748,714,2.707,715,2.707,716,1.748,717,1.748,718,1.748,719,1.748,720,1.748,721,1.748,722,1.748,723,1.748,724,1.748,725,1.748,726,1.748,727,1.748,728,2.707,729,3.314,730,3.732,731,1.748,732,3.732,733,3.732,734,3.314,735,2.707,736,1.748,737,1.748,738,1.748]],["title/license.html",[206,1.414,619,1.924,739,1.924]],["body/license.html",[4,0.358,10,1.028,25,0.036,40,2.909,56,2.076,80,0.036,81,0.036,96,1.159,137,1.159,162,2.909,330,4.174,422,2.909,569,2.909,739,2.909,740,3.578,741,4.898,742,3.578,743,3.578,744,3.578,745,3.578,746,4.485,747,3.578,748,3.578,749,3.578,750,3.578,751,4.485,752,3.578,753,5.585,754,3.578,755,4.485,756,4.898,757,3.578,758,4.898,759,4.485,760,3.578,761,3.578,762,3.578,763,3.578,764,3.578,765,3.578,766,3.578,767,3.578,768,3.578,769,3.578,770,3.578,771,3.578,772,3.578,773,4.485,774,4.485,775,3.578,776,3.578,777,4.485,778,3.578,779,3.578,780,3.578,781,3.578,782,3.578,783,3.578,784,3.578,785,3.578,786,3.578,787,3.578,788,3.578,789,3.578,790,3.578,791,3.578,792,3.578,793,3.578,794,3.578,795,3.578,796,3.578]],["title/modules.html",[82,0.859]],["body/modules.html",[25,0.04,80,0.04,81,0.04,82,0.956,83,2.243,91,1.757,92,1.981,93,1.981,604,3.763,797,5.456,798,5.456,799,5.456]],["title/overview.html",[800,3.125]],["body/overview.html",[0,1.38,1,1.842,10,0.856,14,0.856,25,0.047,59,0.074,62,0.298,80,0.032,81,0.032,82,0.89,83,2.882,84,0.965,85,1.087,86,1.38,87,1.38,88,2.423,89,2.423,90,2.423,91,2.299,92,2.667,93,2.563,94,2.088,95,1.562,96,0.965,105,1.562,106,2.749,125,2.153,178,2.088,180,2.748,181,2.748,242,0.666,245,2.153,248,2.153,250,1.913,253,1.913,256,1.699,258,1.913,277,2.423,278,2.423,279,2.423,464,2.423,465,2.423,467,2.423,472,2.423,473,2.423,474,2.423,475,2.423,800,2.423]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":403,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["0.8.26",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":178,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{},"overview.html":{}}}],["1/1",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":73,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["10/10",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["12/43",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":179,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"classes/konsole.html":{}}}],["2.5.4",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":743,"title":{},"body":{"license.html":{}}}],["27",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":180,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["37",{"_index":442,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["38",{"_index":443,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39",{"_index":447,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39;click&#39",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;enter&#39",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;keypress&#39",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["4",{"_index":181,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["40",{"_index":448,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["5",{"_index":182,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["5/6",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":75,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"index.html":{}}}],["6.0.0",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":74,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["7/11",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":183,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["80",{"_index":167,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["83",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["_focus",{"_index":497,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["abov",{"_index":772,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":697,"title":{},"body":{"classes/konsole.html":{}}}],["action",{"_index":40,"title":{},"body":{"injectables/DynamicComponentService.html":{},"license.html":{}}}],["actual_compon",{"_index":260,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ad",{"_index":558,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["add",{"_index":12,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["addaninviewpagetopag",{"_index":502,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist",{"_index":503,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist(item",{"_index":523,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["afterviewinit",{"_index":496,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["again",{"_index":492,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["allen",{"_index":744,"title":{},"body":{"license.html":{}}}],["allow",{"_index":39,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["altern",{"_index":654,"title":{},"body":{"classes/konsole.html":{}}}],["and/or",{"_index":765,"title":{},"body":{"license.html":{}}}],["angular",{"_index":621,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":218,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["anoth",{"_index":491,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["appcompon",{"_index":637,"title":{},"body":{"index.html":{}}}],["appli",{"_index":165,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["appmodul",{"_index":634,"title":{},"body":{"index.html":{}}}],["arg",{"_index":680,"title":{},"body":{"classes/konsole.html":{}}}],["argument",{"_index":380,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["aris",{"_index":795,"title":{},"body":{"license.html":{}}}],["array",{"_index":313,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["array.from(parentlistel.queryselectorall('ngui",{"_index":432,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["array.from(this.item",{"_index":351,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["array.from(this.itemsbackup",{"_index":338,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["arrow",{"_index":444,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["associ",{"_index":754,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":47,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["author",{"_index":786,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":411,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["autocomplete'},{'nam",{"_index":246,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["autocomplete.compon",{"_index":393,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["autocomplete.component.t",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["autocompletecompon",{"_index":376,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["back",{"_index":494,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["backup",{"_index":291,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["basic",{"_index":648,"title":{},"body":{"index.html":{}}}],["be",{"_index":534,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["befor",{"_index":41,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{}}}],["block",{"_index":144,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["blur",{"_index":163,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["bluren",{"_index":154,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["boolean",{"_index":328,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":490,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["bottominview",{"_index":505,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["break",{"_index":446,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["brows",{"_index":799,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":604,"title":{},"body":{"dependencies.html":{},"classes/konsole.html":{},"modules.html":{}}}],["browsermodul",{"_index":635,"title":{},"body":{"index.html":{}}}],["c",{"_index":742,"title":{},"body":{"license.html":{}}}],["call",{"_index":347,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["callback",{"_index":211,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["case",{"_index":441,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cdr",{"_index":498,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["cdref",{"_index":310,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["chang",{"_index":334,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["changedetectorref",{"_index":311,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["charg",{"_index":750,"title":{},"body":{"license.html":{}}}],["check",{"_index":526,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["child",{"_index":360,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["claim",{"_index":789,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["click",{"_index":369,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cluster_nguicommonmodul",{"_index":88,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_export",{"_index":90,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_import",{"_index":89,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodul",{"_index":277,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_declar",{"_index":278,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_export",{"_index":279,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguilistmodul",{"_index":464,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_declar",{"_index":465,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_export",{"_index":467,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_import",{"_index":466,"title":{},"body":{"modules/NguiListModule.html":{}}}],["cluster_nguiutilsmodul",{"_index":472,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_declar",{"_index":473,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_export",{"_index":474,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_provid",{"_index":475,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["code",{"_index":639,"title":{},"body":{"index.html":{}}}],["collect",{"_index":647,"title":{},"body":{"index.html":{}}}],["common",{"_index":623,"title":{},"body":{"index.html":{}}}],["common.module.t",{"_index":97,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["common/src/lib/ngui",{"_index":6,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["commonmodul",{"_index":281,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["compid",{"_index":69,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compon",{"_index":14,"title":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.servic",{"_index":479,"title":{},"body":{"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["component.service.t",{"_index":8,"title":{},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{}}}],["component.service.ts:41",{"_index":55,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:43",{"_index":27,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:55",{"_index":33,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:65",{"_index":53,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component_templ",{"_index":244,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentfactoryresolv",{"_index":54,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref",{"_index":51,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentref.inst",{"_index":79,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.instance.id",{"_index":77,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.location.nativeelement.setattribute('id",{"_index":76,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["condit",{"_index":771,"title":{},"body":{"license.html":{}}}],["config",{"_index":186,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["connect",{"_index":796,"title":{},"body":{"license.html":{}}}],["console.debug",{"_index":678,"title":{},"body":{"classes/konsole.html":{}}}],["console.debug.apply(consol",{"_index":716,"title":{},"body":{"classes/konsole.html":{}}}],["console.error",{"_index":547,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.error(`error",{"_index":710,"title":{},"body":{"classes/konsole.html":{}}}],["console.error.apply(consol",{"_index":724,"title":{},"body":{"classes/konsole.html":{}}}],["console.info",{"_index":685,"title":{},"body":{"classes/konsole.html":{}}}],["console.info.apply(consol",{"_index":720,"title":{},"body":{"classes/konsole.html":{}}}],["console.log",{"_index":559,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.log('alreadi",{"_index":556,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["console.log('nguiinviewpagecomponent.ngondestroy",{"_index":346,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log('nguiinviewpagecomponent.setitem",{"_index":352,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log.apply(consol",{"_index":718,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn",{"_index":696,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn.apply(consol",{"_index":722,"title":{},"body":{"classes/konsole.html":{}}}],["const",{"_index":66,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["constructor(@inject(componentfactoryresolv",{"_index":63,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(el",{"_index":157,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}}}],["constructor(factoryresolv",{"_index":24,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(publ",{"_index":363,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["constructor(render",{"_index":506,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["contain",{"_index":539,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["content",{"_index":289,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild",{"_index":214,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild(templateref",{"_index":220,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentsel",{"_index":302,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["contract",{"_index":792,"title":{},"body":{"license.html":{}}}],["control",{"_index":161,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["copi",{"_index":330,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"license.html":{}}}],["copyright",{"_index":741,"title":{},"body":{"license.html":{}}}],["core",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":568,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":57,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["createcompn",{"_index":38,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcompon",{"_index":21,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent(compon",{"_index":31,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["current",{"_index":675,"title":{},"body":{"classes/konsole.html":{}}}],["damag",{"_index":790,"title":{},"body":{"license.html":{}}}],["deal",{"_index":755,"title":{},"body":{"license.html":{}}}],["debug",{"_index":660,"title":{},"body":{"classes/konsole.html":{}}}],["debug(...arg",{"_index":676,"title":{},"body":{"classes/konsole.html":{}}}],["declar",{"_index":86,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":213,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["default",{"_index":171,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defaultinviewhandl",{"_index":149,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defaultinviewhandler(entri",{"_index":192,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defin",{"_index":26,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["demoobject",{"_index":624,"title":{},"body":{"index.html":{}}}],["depend",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprec",{"_index":185,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["descript",{"_index":9,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["destroy",{"_index":303,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["direct",{"_index":242,"title":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["display",{"_index":143,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["distribut",{"_index":763,"title":{},"body":{"license.html":{}}}],["document",{"_index":569,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentationcod",{"_index":625,"title":{},"body":{"index.html":{}}}],["dom",{"_index":126,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["down",{"_index":420,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["dyn",{"_index":71,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynam",{"_index":15,"title":{},"body":{"injectables/DynamicComponentService.html":{},"dependencies.html":{}}}],["dynamical",{"_index":521,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["dynamiccomponentservic",{"_index":1,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["e.g",{"_index":44,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["effect",{"_index":164,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["el",{"_index":378,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["elementref",{"_index":158,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["empti",{"_index":288,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["emptyitem",{"_index":305,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["enter",{"_index":454,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["enter(13",{"_index":450,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["entri",{"_index":198,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entries.foreach((entri",{"_index":230,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entry.intersectionratio",{"_index":240,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry['isintersect",{"_index":232,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entrycompon",{"_index":469,"title":{},"body":{"modules/NguiListModule.html":{}}}],["env",{"_index":707,"title":{},"body":{"classes/konsole.html":{}}}],["error",{"_index":299,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["error('ngui",{"_index":409,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["error(...arg",{"_index":681,"title":{},"body":{"classes/konsole.html":{}}}],["esc",{"_index":357,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["esc(27",{"_index":451,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escap",{"_index":354,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["etc",{"_index":48,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["even",{"_index":327,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["event",{"_index":137,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.additems(item",{"_index":508,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["event.key",{"_index":453,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.keycod",{"_index":428,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.t",{"_index":589,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["event.which",{"_index":427,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["eventemitt",{"_index":189,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["exampl",{"_index":138,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["express",{"_index":779,"title":{},"body":{"license.html":{}}}],["factori",{"_index":58,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factory.create(this.rootviewcontainer.parentinjector",{"_index":68,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factoryresolv",{"_index":18,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["fals",{"_index":207,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"classes/konsole.html":{},"license.html":{}}}],["fill",{"_index":509,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["fire",{"_index":134,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["fireev",{"_index":482,"title":{},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fireevent(el",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":323,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["fit",{"_index":782,"title":{},"body":{"license.html":{}}}],["focu",{"_index":370,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["focus",{"_index":460,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["follow",{"_index":770,"title":{},"body":{"license.html":{}}}],["formsmodul",{"_index":636,"title":{},"body":{"index.html":{}}}],["found",{"_index":397,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{}}}],["found.t",{"_index":563,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["found.ts:2",{"_index":564,"title":{},"body":{"classes/NoMatchFound.html":{}}}],["free",{"_index":749,"title":{},"body":{"license.html":{}}}],["function",{"_index":520,"title":{"miscellaneous/functions.html":{}},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":768,"title":{},"body":{"license.html":{}}}],["get",{"_index":619,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":522,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["grant",{"_index":748,"title":{},"body":{"license.html":{}}}],["greater",{"_index":679,"title":{},"body":{"classes/konsole.html":{}}}],["handl",{"_index":417,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["handleintersect",{"_index":150,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handleintersect(entri",{"_index":199,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handler",{"_index":170,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["height",{"_index":324,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["height}px",{"_index":350,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["herebi",{"_index":747,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":298,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["highlight",{"_index":650,"title":{},"body":{"index.html":{}}}],["highlight.pip",{"_index":477,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["highlight.pipe.t",{"_index":108,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["highlight.pipe.ts:5",{"_index":115,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["holder",{"_index":787,"title":{},"body":{"license.html":{}}}],["host",{"_index":142,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["hostlisten",{"_index":368,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('blur",{"_index":463,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('click",{"_index":457,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('focu",{"_index":459,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keydown",{"_index":423,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keyup",{"_index":452,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostview",{"_index":43,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["html",{"_index":241,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{}}}],["html5",{"_index":642,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":321,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["http_provid",{"_index":638,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["ie11",{"_index":643,"title":{},"body":{"index.html":{}}}],["ig",{"_index":123,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["implement",{"_index":118,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["impli",{"_index":780,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["includ",{"_index":758,"title":{},"body":{"license.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["indic",{"_index":209,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["info(...arg",{"_index":683,"title":{},"body":{"classes/konsole.html":{}}}],["inject",{"_index":0,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{},"overview.html":{}}}],["inject(platform_id",{"_index":222,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["input",{"_index":153,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["input('item",{"_index":400,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["input('templ",{"_index":335,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["insert",{"_index":42,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["insertcompon",{"_index":22,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent(componentref",{"_index":52,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["instal",{"_index":631,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":413,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["instead",{"_index":187,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["interact",{"_index":652,"title":{},"body":{"index.html":{}}}],["intersect",{"_index":168,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["intersectionobserv",{"_index":175,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["intersectionobserver(this.handleintersect.bind(thi",{"_index":225,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverentri",{"_index":231,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverinit",{"_index":176,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["invalid",{"_index":711,"title":{},"body":{"classes/konsole.html":{}}}],["inview",{"_index":135,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["inview'},{'nam",{"_index":247,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inview)=\"someth",{"_index":197,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.compon",{"_index":283,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.component.t",{"_index":129,"title":{},"body":{"components/NguiInviewComponent.html":{},"coverage.html":{}}}],["inview.component.ts:36",{"_index":215,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:39",{"_index":184,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:42",{"_index":188,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:46",{"_index":174,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:48",{"_index":190,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:49",{"_index":191,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:51",{"_index":210,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:53",{"_index":208,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:55",{"_index":160,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:63",{"_index":205,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:71",{"_index":203,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:76",{"_index":200,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:92",{"_index":193,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.direct",{"_index":284,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.directive.t",{"_index":261,"title":{},"body":{"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inview.directive.ts:21",{"_index":272,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:24",{"_index":265,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:26",{"_index":266,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:29",{"_index":267,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:31",{"_index":264,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:34",{"_index":271,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:39",{"_index":270,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:51",{"_index":269,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:61",{"_index":268,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.modul",{"_index":100,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["inview.module.t",{"_index":280,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview/ngui",{"_index":99,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{}}}],["inview/src/ngui",{"_index":128,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inviewpag",{"_index":499,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["invok",{"_index":195,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["isinview",{"_index":146,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["islistload",{"_index":500,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["isplatformbrows",{"_index":217,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":223,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["it'",{"_index":485,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["item",{"_index":259,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["item.direct",{"_index":470,"title":{},"body":{"modules/NguiListModule.html":{}}}],["item.directive.t",{"_index":364,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:24",{"_index":379,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:26",{"_index":389,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:27",{"_index":390,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:28",{"_index":377,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:39",{"_index":388,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:52",{"_index":385,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:75",{"_index":387,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:88",{"_index":382,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:92",{"_index":383,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:98",{"_index":381,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["itemsbackup",{"_index":304,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["itemsbackup.length",{"_index":297,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["js",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":358,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["keyboard",{"_index":418,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyboard/mous",{"_index":651,"title":{},"body":{"index.html":{}}}],["keycod",{"_index":426,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown",{"_index":371,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown(ev",{"_index":384,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup",{"_index":372,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ent",{"_index":399,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ev",{"_index":386,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["kim",{"_index":745,"title":{},"body":{"license.html":{}}}],["kind",{"_index":778,"title":{},"body":{"license.html":{}}}],["konsol",{"_index":480,"title":{"classes/konsole.html":{}},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["konsole.debug('no",{"_index":732,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.debug('y",{"_index":726,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('no",{"_index":736,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('y",{"_index":730,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('no",{"_index":734,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('y",{"_index":728,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('no",{"_index":733,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('y",{"_index":727,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('al",{"_index":725,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('error",{"_index":655,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('info",{"_index":737,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('non",{"_index":731,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('warn",{"_index":738,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('no",{"_index":735,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('y",{"_index":729,"title":{},"body":{"classes/konsole.html":{}}}],["konwole.log(1,2,3,4,5",{"_index":656,"title":{},"body":{"classes/konsole.html":{}}}],["last",{"_index":533,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["lazi",{"_index":640,"title":{},"body":{"index.html":{}}}],["left",{"_index":421,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"overview.html":{}}}],["less",{"_index":166,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["level",{"_index":673,"title":{},"body":{"classes/konsole.html":{}}}],["liabil",{"_index":791,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":788,"title":{},"body":{"license.html":{}}}],["licens",{"_index":739,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":759,"title":{},"body":{"license.html":{}}}],["line",{"_index":274,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["list",{"_index":252,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'nam",{"_index":257,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["list.compon",{"_index":392,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.component.t",{"_index":484,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":525,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:114",{"_index":519,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:132",{"_index":524,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:61",{"_index":538,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:63",{"_index":542,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:65",{"_index":518,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:67",{"_index":517,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:86",{"_index":516,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:89",{"_index":532,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:90",{"_index":528,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:92",{"_index":535,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:93",{"_index":507,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:96",{"_index":541,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:97",{"_index":531,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:98",{"_index":530,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:99",{"_index":529,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.direct",{"_index":391,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.directive.t",{"_index":353,"title":{},"body":{"directives/NguiListDirective.html":{},"coverage.html":{}}}],["list.directive.ts:13",{"_index":361,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:15",{"_index":356,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:17",{"_index":362,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.modul",{"_index":102,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["list.module.t",{"_index":468,"title":{},"body":{"modules/NguiListModule.html":{}}}],["list/ngui",{"_index":101,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["list/src/ngui",{"_index":285,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list/src/no",{"_index":562,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["list/src/non",{"_index":565,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["listdirect",{"_index":374,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listen",{"_index":131,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["listitem",{"_index":431,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitemndx",{"_index":433,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems.indexof(thislistitem",{"_index":434,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[0",{"_index":437,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitemndx",{"_index":436,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitems.length",{"_index":439,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["load",{"_index":495,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["log",{"_index":661,"title":{},"body":{"classes/konsole.html":{}}}],["log(...arg",{"_index":686,"title":{},"body":{"classes/konsole.html":{}}}],["log_level",{"_index":658,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel",{"_index":659,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel.touppercas",{"_index":702,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels.indexof(loglevel",{"_index":704,"title":{},"body":{"classes/konsole.html":{}}}],["lt;ng",{"_index":301,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["make",{"_index":487,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["match",{"_index":81,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":72,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["medium",{"_index":630,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":781,"title":{},"body":{"license.html":{}}}],["merg",{"_index":761,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["method",{"_index":20,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["miscellan",{"_index":613,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":740,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":760,"title":{},"body":{"license.html":{}}}],["modul",{"_index":82,"title":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"modules.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":458,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["name",{"_index":29,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["necessari",{"_index":527,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["new",{"_index":121,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["nextlistitem",{"_index":435,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextlistitem.focu",{"_index":449,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextsibl",{"_index":365,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ngafterviewinit",{"_index":504,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngfor=\"let",{"_index":513,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngif=\"item",{"_index":511,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":151,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["ngoninit",{"_index":152,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["ngui",{"_index":70,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["ngui/common",{"_index":620,"title":{},"body":{"index.html":{}}}],["nguiautocompletecompon",{"_index":245,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguicommonmodul",{"_index":83,"title":{"modules/NguiCommonModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguihighlight",{"_index":110,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["nguihighlightpip",{"_index":106,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"overview.html":{}}}],["nguihilight",{"_index":649,"title":{},"body":{"index.html":{}}}],["nguiinview",{"_index":254,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewcompon",{"_index":125,"title":{"components/NguiInviewComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewdirect",{"_index":253,"title":{"directives/NguiInviewDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewmodul",{"_index":91,"title":{"modules/NguiInviewModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiinviewpag",{"_index":540,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nguiinviewpagecompon",{"_index":248,"title":{"components/NguiInviewPageComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistdirect",{"_index":256,"title":{"directives/NguiListDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistitemdirect",{"_index":258,"title":{"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistmodul",{"_index":92,"title":{"modules/NguiListModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguioutview",{"_index":262,"title":{},"body":{"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguioutview]'},{'nam",{"_index":255,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiutilsmodul",{"_index":93,"title":{"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguivirtuallistcompon",{"_index":250,"title":{"components/NguiVirtualListComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguivirtuallistcomponent.addlist",{"_index":560,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["noinspect",{"_index":714,"title":{},"body":{"classes/konsole.html":{}}}],["noitem",{"_index":512,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nomatchfound",{"_index":396,"title":{"classes/NoMatchFound.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["none",{"_index":395,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["noneselect",{"_index":394,"title":{"classes/NoneSelect.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{},"coverage.html":{}}}],["noninfring",{"_index":785,"title":{},"body":{"license.html":{}}}],["notic",{"_index":773,"title":{},"body":{"license.html":{}}}],["notinview",{"_index":136,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["npm",{"_index":632,"title":{},"body":{"index.html":{}}}],["num",{"_index":295,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["num\">row",{"_index":515,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["number",{"_index":294,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["object",{"_index":401,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["object.keys(this.log_level",{"_index":703,"title":{},"body":{"classes/konsole.html":{}}}],["observ",{"_index":147,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["observeropt",{"_index":155,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["obtain",{"_index":752,"title":{},"body":{"license.html":{}}}],["on",{"_index":712,"title":{},"body":{"classes/konsole.html":{}}}],["once80pctvis",{"_index":148,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["ondestroy",{"_index":140,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["oninit",{"_index":139,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["option",{"_index":30,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["otherwis",{"_index":794,"title":{},"body":{"license.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/NguiCommonModule.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":156,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outview",{"_index":287,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["overview",{"_index":800,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":597,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":296,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["page'},{'nam",{"_index":249,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.compon",{"_index":471,"title":{},"body":{"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component.t",{"_index":286,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":315,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:122",{"_index":320,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:56",{"_index":333,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:60",{"_index":314,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:63",{"_index":331,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:65",{"_index":332,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:67",{"_index":329,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:72",{"_index":322,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:73",{"_index":312,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:84",{"_index":318,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:94",{"_index":317,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:99",{"_index":316,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.cont",{"_index":345,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["pagesref",{"_index":501,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["param",{"_index":693,"title":{},"body":{"classes/konsole.html":{}}}],["paramet",{"_index":28,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["parent",{"_index":410,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistcomp",{"_index":366,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistel",{"_index":429,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parseint('00000",{"_index":665,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00001",{"_index":666,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00010",{"_index":667,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00100",{"_index":668,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('01000",{"_index":669,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('10000",{"_index":670,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('11111",{"_index":671,"title":{},"body":{"classes/konsole.html":{}}}],["particular",{"_index":783,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":746,"title":{},"body":{"license.html":{}}}],["permit",{"_index":767,"title":{},"body":{"license.html":{}}}],["person",{"_index":751,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":105,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":117,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["platform_id",{"_index":216,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["platformid",{"_index":159,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["pleas",{"_index":645,"title":{},"body":{"index.html":{}}}],["polyfil",{"_index":646,"title":{},"body":{"index.html":{}}}],["port",{"_index":493,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["portion",{"_index":776,"title":{},"body":{"license.html":{}}}],["posit",{"_index":133,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["press",{"_index":359,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["prevlistitem",{"_index":438,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevlistitem.focu",{"_index":445,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevsibl",{"_index":367,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["privat",{"_index":221,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["projects/.../fir",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngui",{"_index":5,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["properti",{"_index":17,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["provid",{"_index":10,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":263,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["publish",{"_index":762,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":784,"title":{},"body":{"license.html":{}}}],["push",{"_index":486,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ratio",{"_index":169,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["re",{"_index":120,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["read",{"_index":544,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["reason",{"_index":36,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["refer",{"_index":35,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["regexp(search",{"_index":122,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["remain",{"_index":325,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["remov",{"_index":13,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["render",{"_index":308,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["renderer2",{"_index":309,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["reportaccept",{"_index":628,"title":{},"body":{"index.html":{}}}],["reportarticl",{"_index":629,"title":{},"body":{"index.html":{}}}],["reportunit",{"_index":626,"title":{},"body":{"index.html":{}}}],["requir",{"_index":300,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["requirednum",{"_index":700,"title":{},"body":{"classes/konsole.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["rest",{"_index":510,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["restor",{"_index":292,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restoreitem",{"_index":306,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restrict",{"_index":757,"title":{},"body":{"license.html":{}}}],["restrictionnum",{"_index":698,"title":{},"body":{"classes/konsole.html":{}}}],["result",{"_index":80,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":119,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["return",{"_index":34,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["right",{"_index":422,"title":{},"body":{"directives/NguiListItemDirective.html":{},"license.html":{}}}],["rootviewcontain",{"_index":19,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["row",{"_index":293,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["rxj",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["safari",{"_index":644,"title":{},"body":{"index.html":{}}}],["same",{"_index":326,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["save",{"_index":633,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":488,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["search",{"_index":114,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["see",{"_index":489,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["select",{"_index":355,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoneSelect.html":{}}}],["select.t",{"_index":566,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["select.ts:2",{"_index":567,"title":{},"body":{"classes/NoneSelect.html":{}}}],["selector",{"_index":141,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["sell",{"_index":766,"title":{},"body":{"license.html":{}}}],["seper",{"_index":37,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["servic",{"_index":11,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["set",{"_index":46,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["setitem",{"_index":307,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setitems(item",{"_index":319,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setloglevel",{"_index":662,"title":{},"body":{"classes/konsole.html":{}}}],["setloglevel(loglevel",{"_index":688,"title":{},"body":{"classes/konsole.html":{}}}],["shall",{"_index":774,"title":{},"body":{"license.html":{}}}],["skip",{"_index":557,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["softwar",{"_index":753,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["src/dynam",{"_index":478,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/fire",{"_index":483,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/konsol",{"_index":481,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/ngui",{"_index":282,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["start",{"_index":206,"title":{"index.html":{},"license.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["statement",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":657,"title":{},"body":{"classes/konsole.html":{}}}],["still",{"_index":536,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["stop",{"_index":204,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["string",{"_index":113,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["style",{"_index":45,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["subject",{"_index":769,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":764,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":775,"title":{},"body":{"license.html":{}}}],["support",{"_index":797,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":798,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":440,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabindex",{"_index":398,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabl",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":145,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["templateref",{"_index":212,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["test",{"_index":627,"title":{},"body":{"index.html":{}}}],["text",{"_index":116,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["text.replace(r",{"_index":124,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["this.autocompletecompon",{"_index":407,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.bluren",{"_index":237,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.bottominview.emit(thi",{"_index":555,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.bottominview.observers.length",{"_index":546,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.cdref.detectchang",{"_index":342,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.contentsel",{"_index":343,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.defaultinviewhandler(entri",{"_index":234,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.destroy",{"_index":348,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dynamiccomponentservice.createcomponent(nguiinviewpagecompon",{"_index":550,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.dynamiccomponentservice.insertcomponent(this.inviewpag",{"_index":552,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.el.nativeel",{"_index":425,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":415,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.element.nativeelement.getboundingclientrect().height",{"_index":349,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('.inview",{"_index":344,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.factoryresolv",{"_index":64,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.factoryresolver.resolvecomponentfactory(compon",{"_index":67,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.inview.emit(entri",{"_index":235,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inview.observers.length",{"_index":239,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inviewpag",{"_index":549,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.setitems(item",{"_index":561,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.templ",{"_index":553,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpages.push(this.inviewpag",{"_index":554,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.isinview",{"_index":233,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.islistload",{"_index":548,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.item",{"_index":337,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.itemsbackup",{"_index":339,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.listdirect",{"_index":405,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.log_levels[param",{"_index":701,"title":{},"body":{"classes/konsole.html":{}}}],["this.log_levels[this.loglevel",{"_index":699,"title":{},"body":{"classes/konsole.html":{}}}],["this.loglevel",{"_index":709,"title":{},"body":{"classes/konsole.html":{}}}],["this.nguiinview.emit(entri",{"_index":275,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nguioutview.emit(entri",{"_index":276,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.notinview.emit(entri",{"_index":236,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.object",{"_index":412,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.object.html",{"_index":416,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.observ",{"_index":224,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.disconnect",{"_index":229,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.observe(this.element.nativeel",{"_index":228,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observeropt",{"_index":226,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.once80pctvis",{"_index":238,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.opt",{"_index":227,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.outview",{"_index":336,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.pagesref",{"_index":551,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.parentlistcomp",{"_index":404,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.element.nativeel",{"_index":430,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.escaped.emit",{"_index":456,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.selected.emit(this.object",{"_index":455,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocus",{"_index":461,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused']('listitem",{"_index":462,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeel",{"_index":402,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setstyle(this.contentsel",{"_index":341,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.rootviewcontain",{"_index":65,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.rootviewcontainer.insert(componentref.hostview",{"_index":78,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.templ",{"_index":545,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.tolog('debug",{"_index":713,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('error",{"_index":723,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('info",{"_index":719,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('log",{"_index":717,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('warn",{"_index":721,"title":{},"body":{"classes/konsole.html":{}}}],["this.viewcontainer.clear",{"_index":414,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.virtuallistcompon",{"_index":406,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["thislistitem",{"_index":424,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["threshold",{"_index":177,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["throw",{"_index":408,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tolog",{"_index":663,"title":{},"body":{"classes/konsole.html":{}}}],["tolog(param",{"_index":690,"title":{},"body":{"classes/konsole.html":{}}}],["tort",{"_index":793,"title":{},"body":{"license.html":{}}}],["trackbi",{"_index":514,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["transform",{"_index":111,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["transform(text",{"_index":112,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["tree",{"_index":127,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["true",{"_index":173,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["ts",{"_index":219,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["tslint",{"_index":715,"title":{},"body":{"classes/konsole.html":{}}}],["tslint:dis",{"_index":273,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["type",{"_index":49,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["ui",{"_index":622,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":340,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":419,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["us",{"_index":56,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":196,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["util",{"_index":641,"title":{},"body":{"index.html":{}}}],["utils.modul",{"_index":104,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["utils.module.t",{"_index":476,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["utils/ngui",{"_index":103,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{}}}],["utils/src/dynam",{"_index":7,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["utils/src/fir",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/src/konsole.t",{"_index":592,"title":{},"body":{"coverage.html":{},"classes/konsole.html":{}}}],["utils/src/konsole.ts:11",{"_index":672,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:22",{"_index":674,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:25",{"_index":691,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:33",{"_index":689,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:47",{"_index":677,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:55",{"_index":687,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:62",{"_index":684,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:70",{"_index":695,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:77",{"_index":682,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/ngui",{"_index":107,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["valu",{"_index":172,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["var",{"_index":243,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["view",{"_index":290,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewchild",{"_index":537,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewchild('pag",{"_index":543,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewcontain",{"_index":373,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["viewcontainerref",{"_index":32,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewport",{"_index":132,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["virtual",{"_index":251,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["virtuallistcompon",{"_index":375,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["visibl",{"_index":201,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["void",{"_index":202,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["warn",{"_index":664,"title":{},"body":{"classes/konsole.html":{}}}],["warn(...arg",{"_index":694,"title":{},"body":{"classes/konsole.html":{}}}],["warranti",{"_index":777,"title":{},"body":{"license.html":{}}}],["whether",{"_index":162,"title":{},"body":{"components/NguiInviewComponent.html":{},"license.html":{}}}],["window",{"_index":705,"title":{},"body":{"classes/konsole.html":{}}}],["window.consol",{"_index":692,"title":{},"body":{"classes/konsole.html":{}}}],["window.konsol",{"_index":653,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorag",{"_index":706,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage.setitem('konsole.log_level",{"_index":708,"title":{},"body":{"classes/konsole.html":{}}}],["without",{"_index":756,"title":{},"body":{"license.html":{}}}],["won't",{"_index":194,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ye",{"_index":50,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["zone.j",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DynamicComponentService.html":{"url":"injectables/DynamicComponentService.html","title":"injectable - DynamicComponentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n        \n\n            \n                Description\n            \n            \n                Provide service to add or remove component dynamically\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                factoryResolver\n                            \n                            \n                                rootViewContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                insertComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryResolver: )\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryResolver\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateComponent(component: any, into?: ViewContainerRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            returns component reference\nThe reason to seperate createCompnent and insertComponent is\nto allow some actions before we insert into a hostView.\ne.g styling, setting attributes, etc\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        into\n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ninsertComponent(componentRef: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            insert component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentRef\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Component\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            factoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        factoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                        used to create a factory from a component class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootViewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootViewContainer:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                        defines where a dynamic components insert into \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Provide service to add or remove component dynamically\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiCommonModule.html":{"url":"modules/NguiCommonModule.html","title":"module - NguiCommonModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiCommonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-common.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NguiHighlightPipe.html":{"url":"pipes/NguiHighlightPipe.html","title":"pipe - NguiHighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  NguiHighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        nguiHighlight\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(text: string, search: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        search\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `${match}`);\n    }\n\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewComponent.html":{"url":"components/NguiInviewComponent.html","title":"component - NguiInviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n\n\n    \n        Description\n    \n    \n        An element that listens to viewport positioning and fires inView and notInview events\nexample\n\n   \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview\n            \n\n\n            \n                styles\n                :host {display: block;}\n            \n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isInview\n                            \n                            \n                                observer\n                            \n                            \n                                once80PctVisible\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultInviewHandler\n                            \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEnabled\n                            \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                inview\n                            \n                            \n                                notInview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blurEnabled\n                    \n                    \n                        Controls whether blur effect is applied to a component with less than 80% intersection ratio.\nOnly applies when there are no \"inview\" event handlers defined.\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type:    IntersectionObserverInit\n\n                            \n                        \n                            Default value: {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        inview\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notInview\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultInviewHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultInviewHandler(entry: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            default intersection handler, which sets blur dependes on intersection ratio\nthis won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            fires (inview) and (notInview) events when this component is visible or not visible  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            stop IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInview:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:53\n                            \n                        \n\n                \n                    \n                        indicates that this element is in viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            once80PctVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        once80PctVisible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                        indicates that this element is 80% in viewport. Used by the default callback \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:36\n                            \n                        \n\n                \n                    \n                         reference \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * An element that listens to viewport positioning and fires inView and notInview events\n * ### example\n * ```ts\n * \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        \n        \n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /**  reference */\n  @ContentChild(TemplateRef) template: TemplateRef;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter = new EventEmitter();\n  @Output() notInview: EventEmitter = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions || this.options);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiInviewDirective.html":{"url":"directives/NguiInviewDirective.html","title":"directive - NguiInviewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiInviewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n        \n\n            \n                Description\n            \n            \n                Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [nguiInview], [nguiOutview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nguiInview\n                            \n                            \n                                nguiOutview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type:    IntersectionObserverInit\n\n                            \n                        \n                            Default value: {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:26\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nguiInview\n                    \n                    \n                        Event that will be fired when in viewport \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nguiOutview\n                    \n                    \n                        Event that will be fired when out of  viewport \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:31\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:61\n                            \n                        \n\n\n                \n                    \n                            Fires (nguiInview) event when this element is in viewport\n  and fires (nguiOutview) event when this element is not in viewport\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:51\n                            \n                        \n\n\n                \n                    \n                            Stops IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiInviewModule.html":{"url":"modules/NguiInviewModule.html","title":"module - NguiInviewModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiInviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiInviewComponent\n                            \n                            \n                                NguiInviewDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewComponent\n                            \n                            \n                                    NguiInviewDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewPageComponent.html":{"url":"components/NguiInviewPageComponent.html","title":"component - NguiInviewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n\n\n    \n        Description\n    \n    \n        A block of component that listens to inView and outView events,\nso that it empties contents when out of view after backup items\nand restores the contents when in view\nexample\n\n   \n     \n       row number: {{ num }}\n     \n   \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview-page\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n  \n  \n  \n  \n  {{ itemsBackup.length }} items hidden\n\n\n\n   Error: requires [items] \n   Error: requires &lt;ng-template>\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsEl\n                            \n                            \n                                destroyed\n                            \n                            \n                                itemsBackup\n                            \n                            \n                                options\n                            \n                            \n                                outView\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emptyItems\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restoreItems\n                            \n                            \n                                setItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        List of elements that are used to render this element \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Empty items when not in viewport, so that elements are not rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restoreItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestoreItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Restore items when in viewport, so that elements are rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetItems(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsEl:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:72\n                            \n                        \n\n                \n                    \n                        The first element of this component.\nThe height of it remains the same even when items get empty out.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destroyed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsBackup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsBackup:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:67\n                            \n                        \n\n                \n                    \n                        The copy of items. This is set when this element is out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:63\n                            \n                        \n\n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outView:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        Indicates that the page of out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:56\n                            \n                        \n\n                \n                    \n                        Allow users to change the contents \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n *\n * ### example\n * ```ts\n * \n *   \n *     \n *       row number: {{ num }}\n *     \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    \n      \n      \n      \n      \n      {{ itemsBackup.length }} items hidden\n    \n\n    \n       Error: requires [items] \n       Error: requires &lt;ng-template>\n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  // @Input('template') template: TemplateRef;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array;\n\n  /** IntersectionObserver options */\n  options: any;\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array): void {\n    if (!this.destroyed) {\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ itemsBackup.length }} items hidden   Error: requires [items]    Error: requires '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListDirective.html":{"url":"directives/NguiListDirective.html","title":"directive - NguiListDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiListDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngui-list\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListItemDirective.html":{"url":"directives/NguiListItemDirective.html","title":"directive - NguiListItemDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiListItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngui-list-item\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nextSibling\n                            \n                            \n                                parentListComp\n                            \n                            \n                                prevSibling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                click\n                            \n                            \n                                focus\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, viewContainer: ViewContainerRef, listDirective: NguiListDirective, virtualListComponent: NguiVirtualListComponent, autocompleteComponent: NguiAutocompleteComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        listDirective\n                                                  \n                                                        \n                                                                    NguiListDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualListComponent\n                                                  \n                                                        \n                                                                    NguiVirtualListComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        autocompleteComponent\n                                                  \n                                                        \n                                                                    NguiAutocompleteComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keydown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeydown(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeyup(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentListComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentListComp:     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                    \n                \n                    \n                        \n                            Type :     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prevSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiListModule.html":{"url":"modules/NguiListModule.html","title":"module - NguiListModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_imports\n\n\n\ncluster_NguiListModule_exports\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiAutocompleteComponent\n                            \n                            \n                                NguiInviewPageComponent\n                            \n                            \n                                NguiListDirective\n                            \n                            \n                                NguiListItemDirective\n                            \n                            \n                                NguiVirtualListComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                NguiInviewPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiAutocompleteComponent\n                            \n                            \n                                    NguiInviewPageComponent\n                            \n                            \n                                    NguiListDirective\n                            \n                            \n                                    NguiListItemDirective\n                            \n                            \n                                    NguiVirtualListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiUtilsModule.html":{"url":"modules/NguiUtilsModule.html","title":"module - NguiUtilsModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiUtilsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiHighlightPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiHighlightPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiVirtualListComponent.html":{"url":"components/NguiVirtualListComponent.html","title":"component - NguiVirtualListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiVirtualListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n\n\n    \n        Description\n    \n    \n        Virtual List\nThe  inserts  into\n when it is in viewport\nWhen it's inserted, it will be pushed down, which makes it out of viewport.\nUser scrolls down to see the bottom of the list,\nthen it will insert another  again.\n listens to (nguiInview) and (nguiOutview) events,\nwhen  is out of view port, it empties out the contents.\nand it restores back the contents when it is in viewport again.\nexample\n\n   \n     Loading\n     row number: {{ num }}\n   \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-virtual-list\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n   -->\n  \n   into #pages -->\n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _focused\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                addList\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, element: ElementRef, dynamicComponentService: DynamicComponentService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dynamicComponentService\n                                                  \n                                                        \n                                                                    DynamicComponentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nexample\n\n   \n     ngIf=\"items else noItems\">\n        ngFor=\"let num of items; trackBy: num\">row number: {{ num }}\n     \n     Loading\n   \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnInviewPageToPages\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnInviewPageToPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addList\n                            \n                            \n                        \n                    \n                \n                \n                    \naddList(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Check if necessary input and output is provided \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _focused\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _focused:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dynamicComponentService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dynamicComponentService:     DynamicComponentService\n\n                    \n                \n                    \n                        \n                            Type :     DynamicComponentService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPage:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:89\n                            \n                        \n\n                \n                    \n                        The last NguiInviewPageComponent being inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPages:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isListLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:92\n                            \n                        \n\n                \n                    \n                        Indicates if a page is still loading \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagesRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pagesRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:61\n                            \n                        \n\n                \n                    \n                        the container NguiInviewPage will be inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        Template of NguiInviewPage. Allow users to define their own template  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `` inserts  into\n * `` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `` again.\n *\n *  listens to (nguiInview) and (nguiOutview) events,\n * when  is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n *\n * ### example\n * ```ts\n * \n *   \n *     Loading\n *     row number: {{ num }}\n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    \n       -->\n      \n       into #pages -->\n      \n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n   *\n   * ### example\n   * ```ts\n   * \n   *   \n   *     \n   *        row number: {{ num }}\n   *     \n   *     Loading\n   *   \n   * \n   * ```\n   */\n  @Output() bottomInview: EventEmitter = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error(' requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    } else {\n      console.log('Already a page being inserted, skipping adding a page');\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->     into #pages -->  '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiVirtualListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoMatchFound.html":{"url":"classes/NoMatchFound.html","title":"class - NoMatchFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoMatchFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'No Match Found'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoMatchFound {\n  html = 'No Match Found';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoneSelect.html":{"url":"classes/NoneSelect.html","title":"class - NoneSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoneSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Select'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/none-select.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoneSelect {\n  html = 'Select';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n            \n            \n                directive\n            \n            \n                NguiInviewDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n            \n            \n                component\n            \n            \n                NguiAutocompleteComponent\n            \n            \n                27 %\n                (12/43)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewPageComponent\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListItemDirective\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListDirective\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n            \n            \n                component\n            \n            \n                NguiVirtualListComponent\n            \n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n            \n            \n                class\n            \n            \n                NoMatchFound\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n            \n            \n                class\n            \n            \n                NoneSelect\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n            \n            \n                function\n            \n            \n                fireEvent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n            \n            \n                class\n            \n            \n                konsole\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n            \n            \n                pipe\n            \n            \n                NguiHighlightPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fireEvent   (projects/.../fire-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfireEvent(el: undefined, type: undefined, options: any)\n                    \n                \n\n\n\n\n                \n                    \n                            fire the given event with options on the element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            fireEvent(el, &#39;click&#39;);\nfireEvent(el, &#39;keypress&#39;, {key: &#39;Enter&#39;});\n                                        \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngui/common\nAngular 6+ UI common directives, functions, services\n\n \n\n\nDemoObject DocumentationCode Coverage ReportUnit Test ReportAcceptance ReportArticle on Medium  \nInstall\n\ninstall @ngui/common\n\n$ npm install @ngui/common --save\nimport NguiCommonModule to your AppModule  \n\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '@ngui/common';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, NguiListModule, NguiInviewModule, NguiUtilsModule],\n  declarations: [AppComponent],\n  providers: [HTTP_PROVIDERS],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }Use it in your code\n\n\n  \nModules\nNguiInViewModule\nHandles lazy rendering of Angular components, which utilizes HTML5 IntersectionObserver.\nFor IE11 and Safari, please add polyfill for this module:\n\nngui-inview component\nngui-inview directive\n\nNguiUtilsModules\nCollection of basic utility functions\n\nDynamicComponentService\nnguiHilight pipe\nfireEvent function\n\nNguiListModule\nHandles list elements with highlight and keyboard/mouse interaction\n\nngui-inview-page component\nngui-list component\nngui-virtual-list component\nngui-autocomplete component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/konsole.html":{"url":"classes/konsole.html","title":"class - konsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  konsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n        \n\n            \n                Description\n            \n            \n                window.konsole alternative\nexample\nkonsole.setLogLevel('error');\nkonwole.log(1,2,3,4,5);\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOG_LEVELS\n                            \n                            \n                                    Static\n                                logLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                setLogLevel\n                            \n                            \n                                    Static\n                                toLog\n                            \n                            \n                                    Static\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOG_LEVELS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOG_LEVELS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:11\n                            \n                        \n\n                \n                    \n                        all log levels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            logLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logLevel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'INFO'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:22\n                            \n                        \n\n                \n                    \n                        current log level set by setLogLevel, default 'INFO' \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:47\n                            \n                        \n\n\n                \n                    \n                            The same as console.debug() if the current log level is greater than debug \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:77\n                            \n                        \n\n\n                \n                    \n                            The same as console.error() if the current log level is greater than error \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:62\n                            \n                        \n\n\n                \n                    \n                            The same as console.info() if the current log level is greater than info \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:55\n                            \n                        \n\n\n                \n                    \n                            The same as console.log() if the current log level is greater than log \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLogLevel(logLevel: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:33\n                            \n                        \n\n\n                \n                    \n                            sets the current log level \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toLog(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns if it should call window.console or not \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warn(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:70\n                            \n                        \n\n\n                \n                    \n                            The same as console.warn() if the current log level is greater than warn \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Allen Kim\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NguiCommonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiInviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiUtilsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
