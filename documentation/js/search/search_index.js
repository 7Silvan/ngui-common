var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/DynamicComponentService.html",[0,1.308,1,1.16]],["body/injectables/DynamicComponentService.html",[0,2.112,1,1.509,2,0.383,3,0.383,4,0.265,5,0.496,6,0.496,7,3.42,8,2.154,9,1.227,10,1.056,11,2.989,12,2.989,13,3.677,14,1.582,15,3.708,16,0.592,17,1.056,18,5.086,19,4.562,20,1.341,21,3.677,22,4.562,23,1.088,24,2.65,25,0.047,26,1.291,27,3.677,28,1.213,29,1.213,30,1.213,31,3.677,32,3.507,33,2.65,34,1.808,35,2.989,36,3.677,37,3.677,38,3.677,39,2.536,40,2.989,41,2.989,42,4.031,43,3.677,44,2.989,45,2.198,46,1.927,47,3.677,48,3.677,49,0.89,50,2.65,51,4.134,52,3.677,53,2.65,54,4.562,55,2.65,56,1.927,57,2.989,58,4.223,59,0.104,60,0.517,61,0.517,62,0.265,63,2.65,64,2.65,65,3.677,66,1.927,67,2.65,68,2.65,69,4.223,70,0.858,71,2.65,72,2.65,73,3.677,74,2.154,75,1.828,76,2.65,77,2.65,78,2.65,79,2.65,80,0.03,81,0.03]],["title/modules/NguiCommonModule.html",[82,0.631,83,1.481]],["body/modules/NguiCommonModule.html",[2,0.481,3,0.481,4,0.333,5,0.333,6,0.333,10,0.955,25,0.046,59,0.082,60,1.033,61,0.649,62,0.546,70,1.744,80,0.034,81,0.034,82,0.956,83,2.964,84,1.077,85,1.212,86,1.539,87,1.539,88,2.703,89,2.703,90,2.703,91,2.31,92,2.605,93,2.605,94,2.243,95,1.742,96,1.077,97,3.325,98,2.243,99,2.952,100,3.479,101,3.479,102,4.28,103,3.848,104,4.734]],["title/pipes/NguiHighlightPipe.html",[105,1.481,106,1.481]],["body/pipes/NguiHighlightPipe.html",[2,0.533,3,0.533,4,0.369,5,0.457,6,0.457,20,1.345,25,0.047,26,0.936,28,1.059,29,1.426,30,1.059,34,1.666,49,0.72,59,0.091,60,0.72,61,0.72,62,0.369,66,1.933,80,0.037,81,0.042,105,2.602,106,2.395,107,3.715,108,2.998,109,1.514,110,4.57,111,3.688,112,4.57,113,3.328,114,5.19,115,3.688,116,4.57,117,4.57,118,1.707,119,4.966,120,3.688,121,1.707,122,3.688,123,3.688,124,3.688]],["title/components/NguiInviewComponent.html",[14,0.812,125,1.16]],["body/components/NguiInviewComponent.html",[0,0.84,2,0.262,3,0.262,4,0.182,5,0.511,6,0.511,9,0.84,10,0.8,14,1.297,16,0.405,17,0.8,20,1.016,23,1.144,25,0.047,26,1.279,28,0.975,29,1.246,30,1.339,34,1.498,35,2.265,44,2.265,45,1.665,46,1.461,49,0.846,56,1.461,59,0.045,60,0.544,61,0.354,62,0.182,70,1.509,74,2.265,75,1.922,80,0.022,81,0.022,84,0.903,85,0.662,109,0.745,118,1.29,121,1.571,125,1.563,126,1.251,127,1.251,128,3.517,129,1.475,130,2.003,131,1.922,132,2.591,133,2.787,134,1.995,135,2.331,136,4.516,137,1.509,138,1.461,139,2.028,140,2.34,141,2.212,142,1.665,143,1.922,144,1.922,145,2.991,146,3.807,147,3.095,148,3.807,149,2.787,150,2.265,151,2.626,152,2.275,153,1.995,154,2.455,155,0.951,156,1.762,157,1.778,158,1.995,159,2.758,160,2.787,161,2.856,162,1.647,163,1.393,164,2.787,165,1.665,166,2.265,167,2.265,168,2.265,169,2.787,170,2.787,171,1.814,172,2.699,173,1.814,174,1.814,175,2.787,176,1.814,177,3.807,178,2.265,179,2.265,180,2.787,181,2.265,182,2.787,183,1.922,184,2.787,185,2.265,186,2.265,187,1.814,188,3.807,189,2.007,190,1.814,191,2.265,192,1.814,193,1.665,194,2.275,195,1.814,196,2.626,197,1.814,198,2.787,199,2.787,200,2.626,201,1.251,202,1.922,203,1.814,204,1.475,205,1.475,206,0.84,207,1.251,208,1.251,209,2.028,210,1.475,211,1.475,212,1.475,213,1.475,214,1.475,215,1.475,216,1.475,217,1.475,218,1.475,219,1.475,220,1.814,221,1.084,222,1.814,223,1.814,224,1.814,225,1.814,226,1.814,227,1.814,228,1.461,229,0.622,230,2.626,231,1.251,232,0.745,233,1.251,234,1.251,235,0.745,236,1.251,237,0.662,238,0.745,239,1.016,240,0.662,241,1.084,242,1.251,243,0.588,244,1.251,245,0.662,246,1.084,247,1.251]],["title/directives/NguiInviewDirective.html",[229,0.631,240,1.031]],["body/directives/NguiInviewDirective.html",[0,1.06,2,0.331,3,0.331,4,0.229,5,0.524,6,0.524,9,1.06,16,0.512,17,0.953,20,1.209,23,1.361,25,0.047,26,1.312,28,0.953,29,0.953,30,1.401,34,1.421,49,0.952,59,0.057,60,0.647,61,0.447,62,0.229,80,0.027,81,0.027,84,1.074,96,1.074,109,0.94,118,1.535,121,1.804,128,3.61,130,2.148,132,3.088,134,2.708,137,1.714,139,2.33,140,2.688,141,1.535,147,3.474,150,2.696,151,2.947,152,2.554,153,2.239,154,2.71,155,1.2,156,2.188,157,2.478,158,2.478,159,3.169,161,3.041,162,0.835,163,0.94,172,2.914,185,1.862,186,2.696,189,2.188,191,2.696,193,1.982,204,1.862,205,1.862,206,1.06,209,1.369,210,1.862,211,2.696,212,2.696,213,1.862,214,1.862,215,1.862,216,1.862,217,1.862,218,1.862,219,1.862,229,0.871,240,1.209,241,3.041,248,1.862,249,4.137,250,3.261,251,3.316,252,2.291,253,2.291,254,2.291,255,2.291,256,2.291,257,2.291,258,2.291,259,2.291,260,1.369,261,1.369,262,2.291,263,2.291]],["title/modules/NguiInviewModule.html",[82,0.631,91,1.16]],["body/modules/NguiInviewModule.html",[2,0.51,3,0.51,4,0.353,5,0.353,6,0.353,10,1.014,25,0.046,59,0.087,60,1.028,61,0.689,62,0.538,80,0.036,81,0.036,82,0.993,84,1.143,85,1.287,86,2.253,87,1.633,91,2.304,94,2.33,95,1.849,96,1.143,98,2.33,99,2.434,125,2.339,206,1.633,240,2.078,264,2.868,265,2.868,266,2.868,267,3.529,268,3.066,269,3.524,270,4.446,271,4.446]],["title/components/NguiInviewPageComponent.html",[14,0.812,235,1.16]],["body/components/NguiInviewPageComponent.html",[2,0.23,3,0.23,4,0.159,5,0.502,6,0.502,9,0.736,14,1.318,16,0.355,17,0.722,20,0.917,23,1.032,25,0.047,26,1.256,28,0.722,29,1.109,30,1.28,34,1.408,39,1.734,41,1.292,45,1.502,46,1.634,49,0.87,56,1.318,59,0.039,60,0.31,61,0.31,62,0.159,66,0.833,70,1.444,80,0.02,81,0.02,85,0.58,96,1.444,109,0.653,118,1.164,125,0.653,126,1.096,127,1.096,130,2.101,131,1.734,132,2.664,135,2.426,137,0.814,138,1.318,139,1.864,140,2.151,141,2.124,142,1.502,143,1.734,144,2.444,145,3.165,151,2.444,152,2.118,153,1.858,155,0.833,156,1.641,157,2.405,158,1.858,161,1.502,162,0.917,163,1.032,183,1.734,189,2.176,194,1.864,196,1.734,200,2.663,201,1.096,202,1.734,207,1.096,208,1.096,209,1.864,221,1.502,228,1.318,229,0.562,230,2.444,231,1.096,232,0.653,233,1.096,234,1.096,235,1.455,236,1.096,237,0.58,238,0.653,239,1.292,240,0.58,241,0.95,242,1.096,243,0.515,244,1.096,245,0.58,246,3.202,247,1.096,272,2.626,273,1.292,274,4.105,275,3.495,276,3.495,277,2.881,278,2.514,279,2.881,280,2.044,281,2.044,282,2.044,283,2.444,284,3.118,285,3.118,286,3.337,287,2.831,288,2.514,289,3.544,290,3.544,291,3.544,292,3.544,293,3.544,294,2.514,295,3.118,296,2.881,297,2.514,298,2.664,299,1.59,300,1.59,301,1.59,302,1.59,303,1.59,304,2.514,305,1.59,306,2.535,307,1.59,308,2.044,309,4.105,310,2.514,311,2.044,312,2.514,313,2.151,314,1.59,315,2.044,316,1.59,317,1.59,318,1.59,319,2.514,320,1.59,321,3.544,322,3.544,323,1.59,324,2.514,325,2.535,326,2.514,327,3.118,328,2.514,329,1.59,330,1.59,331,1.59,332,1.734,333,3.118,334,1.59,335,1.59,336,1.59,337,1.59]],["title/directives/NguiListDirective.html",[229,0.631,243,0.915]],["body/directives/NguiListDirective.html",[2,0.481,3,0.481,4,0.333,5,0.518,6,0.518,16,0.743,17,1.229,23,1.365,25,0.046,26,1.269,28,0.955,29,0.955,30,0.955,49,0.976,59,0.082,60,0.649,61,0.649,62,0.333,70,1.386,80,0.034,81,0.034,109,1.365,121,1.981,130,2.123,134,2.62,137,1.386,141,1.981,154,3.091,155,1.742,156,2.451,172,3.218,229,1.057,239,1.561,243,1.386,250,2.952,260,1.987,261,1.987,272,2.71,338,2.703,339,3.265,340,3.091,341,4.28,342,2.952,343,2.952,344,3.479,345,3.479,346,3.325,347,3.325,348,3.325]],["title/directives/NguiListItemDirective.html",[229,0.631,245,1.031]],["body/directives/NguiListItemDirective.html",[2,0.273,3,0.273,4,0.189,5,0.509,6,0.509,16,0.422,17,0.826,20,1.048,23,1.18,25,0.047,26,1.273,28,0.543,29,0.543,30,1.202,32,2.681,34,0.689,49,0.816,59,0.047,60,0.86,61,0.369,62,0.189,66,2.4,70,1.529,80,0.023,81,0.028,109,0.776,118,1.331,137,1.597,139,2.079,141,1.331,142,2.324,152,2.324,153,1.823,155,0.99,156,1.8,157,1.823,158,2.038,162,1.048,165,2.079,179,3.161,189,2.12,194,1.129,209,2.633,221,1.129,229,0.777,232,1.88,237,1.67,238,1.18,239,1.953,243,1.484,245,1.048,246,2.633,260,1.718,261,1.718,272,2.664,287,1.303,298,1.129,306,3.582,339,1.303,340,1.129,342,1.303,349,1.536,350,3.888,351,3.888,352,3.888,353,3.479,354,3.888,355,3.479,356,3.479,357,2.875,358,3.479,359,3.479,360,3.479,361,3.479,362,2.875,363,2.337,364,1.889,365,3.401,366,1.889,367,1.889,368,1.889,369,2.875,370,1.889,371,2.875,372,1.889,373,1.889,374,1.889,375,1.889,376,1.536,377,1.536,378,1.536,379,1.718,380,1.536,381,1.718,382,1.536,383,2.875,384,1.889,385,1.889,386,1.536,387,1.889,388,1.536,389,2.875,390,1.889,391,1.889,392,1.889,393,1.889,394,1.889,395,1.889,396,1.536,397,2.875,398,2.875,399,1.889,400,1.889,401,1.889,402,2.337,403,2.875,404,2.337,405,2.337,406,2.875,407,2.337,408,1.889,409,1.889,410,1.889,411,2.875,412,1.889,413,1.889,414,1.889,415,1.889,416,1.889,417,1.889,418,1.889,419,1.889,420,1.889,421,2.875,422,1.889,423,1.889,424,1.889,425,2.875,426,4.406,427,1.889,428,1.889,429,3.888,430,1.889,431,4.406,432,1.889,433,1.536,434,1.889,435,1.889,436,1.889,437,1.889,438,1.889,439,1.889,440,2.875,441,1.889,442,1.889,443,1.889,444,1.889,445,1.889,446,2.875,447,2.875,448,1.889]],["title/modules/NguiListModule.html",[82,0.631,92,1.308]],["body/modules/NguiListModule.html",[2,0.418,3,0.418,4,0.289,5,0.289,6,0.289,10,0.831,25,0.046,59,0.071,60,1.058,61,0.564,62,0.537,70,0.937,80,0.031,81,0.031,82,0.872,84,0.937,85,1.054,86,2.046,87,1.339,91,2.09,92,2.644,94,2.046,95,1.515,96,0.937,98,2.046,99,1.994,100,2.351,101,2.351,135,1.807,206,1.339,232,2.277,235,2.3,237,2.022,238,1.602,239,1.423,243,1.796,245,2.022,268,2.692,269,3.739,376,3.173,377,3.173,378,3.173,449,2.351,450,2.351,451,2.892,452,2.351,453,2.892,454,3.904,455,3.904,456,3.173]],["title/modules/NguiUtilsModule.html",[82,0.631,93,1.308]],["body/modules/NguiUtilsModule.html",[1,2.234,2,0.503,3,0.503,4,0.349,5,0.349,6,0.349,10,1.389,25,0.046,59,0.086,60,1.024,61,0.679,62,0.551,80,0.035,81,0.035,82,0.984,84,1.128,85,1.269,86,2.239,87,1.611,93,2.573,94,2.31,95,1.824,96,1.128,98,2.31,103,2.83,106,2.981,137,1.128,206,1.611,268,3.04,269,3.04,457,2.83,458,2.83,459,2.83,460,2.83,461,3.481,462,4.408,463,4.408,464,3.583,465,2.08,466,3.481,467,2.08,468,3.481]],["title/components/NguiVirtualListComponent.html",[14,0.812,237,1.031]],["body/components/NguiVirtualListComponent.html",[1,1.906,2,0.192,3,0.192,4,0.133,5,0.503,6,0.503,7,0.916,9,0.615,10,0.625,14,1.012,16,0.297,17,0.625,20,0.793,23,0.893,25,0.047,26,1.286,28,0.625,29,1.012,30,0.625,32,2.43,34,1.007,39,1.5,42,3.841,45,1.299,46,0.696,49,0.936,51,2.596,57,1.768,59,0.033,60,0.539,61,0.259,62,0.133,70,1.438,80,0.018,81,0.018,85,0.484,96,1.225,109,0.545,118,1.007,121,1.278,125,0.545,126,0.916,127,0.916,130,1.711,131,1.5,132,2.261,134,2.262,135,1.478,137,1.504,138,1.673,141,1.998,142,1.299,143,1.5,144,1.5,145,3.259,153,1.14,154,2.492,156,1.751,157,1.846,158,1.983,162,0.793,163,0.893,172,2.654,178,1.768,181,1.768,183,2.755,189,1.751,194,1.65,196,1.5,200,2.202,201,1.5,202,1.5,207,1.5,208,0.916,221,0.793,228,1.14,229,0.486,230,2.202,231,0.916,232,0.545,233,0.916,234,0.916,235,1.64,236,0.916,237,1.164,238,2.161,239,1.619,240,0.484,241,1.65,242,0.916,243,0.43,244,0.916,245,0.484,246,2.387,247,0.916,249,1.768,250,3.202,272,2.632,275,1.768,276,3.076,277,2.596,279,1.768,280,2.245,281,2.596,282,2.864,283,3.259,287,0.916,296,3.076,298,2.492,308,1.768,313,1.905,332,2.43,339,1.905,340,2.105,342,1.5,343,1.5,344,1.768,345,1.768,404,1.768,405,2.596,456,1.079,464,1.079,469,1.079,470,2.175,471,2.175,472,2.175,473,2.175,474,2.175,475,3.784,476,2.175,477,3.193,478,3.193,479,2.175,480,3.698,481,2.762,482,3.193,483,3.784,484,4.169,485,3.193,486,3.193,487,3.193,488,2.175,489,3.193,490,3.784,491,1.328,492,2.175,493,2.175,494,3.193,495,2.175,496,1.328,497,1.328,498,1.328,499,1.328,500,1.328,501,1.328,502,1.328,503,1.328,504,1.328,505,1.14,506,2.175,507,1.768,508,2.175,509,1.328,510,1.328,511,2.175,512,2.175,513,1.328,514,1.328,515,1.328,516,1.328,517,1.328,518,2.175,519,2.762,520,1.328,521,2.175,522,2.175,523,1.328,524,2.175,525,3.193,526,1.328,527,1.328,528,1.328,529,1.328,530,2.175,531,1.328,532,1.079,533,2.762,534,1.328,535,1.328,536,1.328,537,1.328,538,1.328,539,1.328,540,1.328,541,1.328,542,1.328,543,1.328,544,1.079,545,1.328,546,1.328]],["title/classes/NoMatchFound.html",[59,0.07,381,1.689]],["body/classes/NoMatchFound.html",[2,0.588,3,0.588,4,0.407,5,0.485,6,0.485,16,0.908,17,1.392,25,0.045,26,1.032,49,0.793,59,0.12,62,0.407,80,0.039,81,0.045,113,2.897,162,1.482,163,1.668,228,2.812,381,2.897,382,3.941,547,3.941,548,3.304,549,4.064]],["title/classes/NoneSelect.html",[59,0.07,379,1.689]],["body/classes/NoneSelect.html",[2,0.594,3,0.594,4,0.411,5,0.488,6,0.488,16,0.917,17,1.401,25,0.045,26,1.043,49,0.802,59,0.121,62,0.411,80,0.039,81,0.039,113,2.915,162,1.498,163,1.686,228,2.822,340,2.915,379,2.915,550,3.966,551,3.339,552,4.107]],["title/coverage.html",[553,2.651]],["body/coverage.html",[0,1.526,1,1.353,4,0.33,5,0.565,6,0.565,7,2.273,8,2.68,14,1.431,25,0.046,49,0.643,59,0.116,80,0.034,81,0.038,105,1.728,106,1.728,107,2.68,108,2.68,121,1.526,125,1.353,128,2.936,129,2.68,135,1.526,229,1.053,232,1.353,235,1.353,237,1.202,238,1.353,239,1.202,240,1.202,243,1.068,245,1.202,248,2.68,272,2.703,273,2.68,338,2.68,349,2.68,379,1.97,381,1.97,388,4.05,433,2.68,465,1.97,467,1.97,469,2.68,505,1.728,547,2.68,548,2.68,550,2.68,551,2.68,553,2.273,554,2.68,555,3.297,556,3.297,557,3.297,558,3.297,559,3.297,560,3.297,561,3.297,562,3.297,563,3.297,564,3.297,565,3.297,566,3.297,567,3.297,568,3.297,569,3.297,570,4.257,571,3.297,572,3.297,573,2.68,574,2.68,575,4.257,576,3.297,577,2.68,578,3.297,579,3.297,580,3.297,581,3.297]],["title/dependencies.html",[84,1.1,582,2.367]],["body/dependencies.html",[15,3.295,25,0.047,61,0.791,80,0.039,81,0.039,84,1.313,206,1.876,583,4.054,584,5.701,585,4.054,586,4.054,587,4.054,588,4.84,589,3.338,590,4.054,591,4.054,592,4.054,593,4.054,594,4.054,595,4.054,596,4.054,597,4.054]],["title/miscellaneous/functions.html",[505,1.78,598,1.924]],["body/miscellaneous/functions.html",[5,0.41,6,0.41,16,0.915,25,0.043,28,1.177,29,1.177,30,1.545,49,1.015,80,0.039,81,0.039,130,1.681,134,2.147,137,1.327,138,2.147,325,3.959,343,2.825,363,3.33,467,2.911,505,2.147,507,3.33,573,3.33,574,3.959,598,3.33,599,4.096,600,5.198,601,4.096,602,4.096,603,4.096]],["title/index.html",[16,0.529,193,1.414,604,1.924]],["body/index.html",[1,1.416,10,0.991,11,2.805,12,2.805,14,1.536,25,0.045,56,1.808,59,0.085,60,0.94,62,0.345,70,1.731,75,2.38,80,0.035,81,0.035,82,0.979,83,1.808,86,1.597,87,1.597,91,1.977,92,2.23,93,2.23,98,1.808,105,1.808,130,1.416,135,2.23,161,2.062,229,0.979,238,1.416,239,1.756,283,2.38,396,2.805,402,3.563,467,2.062,480,2.805,505,2.524,553,2.38,605,5.068,606,4.383,607,3.45,608,3.45,609,3.45,610,3.45,611,3.45,612,3.45,613,3.45,614,3.45,615,4.817,616,3.45,617,3.45,618,4.383,619,3.45,620,3.45,621,4.383,622,3.45,623,3.45,624,3.45,625,4.383,626,3.45,627,3.45,628,3.45,629,3.45,630,3.45,631,3.45,632,3.45,633,3.45,634,3.45,635,3.45,636,3.45]],["title/classes/konsole.html",[59,0.07,465,1.689]],["body/classes/konsole.html",[2,0.712,3,0.254,4,0.176,5,0.484,6,0.484,9,0.814,16,0.393,17,0.782,20,0.992,25,0.047,26,1.202,28,1.283,29,1.283,30,1.283,34,1.796,46,1.963,49,0.9,59,0.067,62,0.176,66,1.744,80,0.022,81,0.022,113,2.42,138,0.922,162,1.366,163,1.117,165,1.051,166,4.164,189,2.239,260,1.051,261,1.051,286,3.481,298,3.091,311,3.933,313,1.877,332,1.877,365,3.292,380,2.212,386,2.212,465,1.626,532,2.212,544,2.212,577,1.43,589,1.213,637,1.759,638,1.759,639,2.721,640,1.759,641,5.513,642,3.745,643,4.925,644,4.283,645,5.435,646,3.745,647,2.721,648,4.283,649,2.721,650,2.721,651,2.721,652,2.721,653,2.721,654,2.721,655,2.721,656,1.759,657,5.219,658,1.759,659,5.123,660,2.721,661,1.759,662,2.721,663,4.838,664,4.05,665,2.721,666,1.759,667,2.721,668,1.759,669,2.721,670,2.721,671,1.759,672,2.721,673,1.759,674,2.721,675,1.759,676,2.721,677,1.759,678,2.721,679,1.759,680,2.721,681,1.759,682,2.721,683,1.759,684,2.721,685,1.759,686,1.759,687,1.759,688,1.759,689,1.759,690,1.759,691,1.759,692,1.759,693,1.759,694,1.759,695,1.759,696,1.759,697,1.759,698,1.759,699,1.759,700,1.759,701,1.759,702,1.759,703,1.759,704,1.759,705,1.759,706,1.759,707,1.759,708,1.759,709,1.759,710,2.721,711,3.328,712,3.745,713,1.759,714,3.745,715,3.745,716,3.328,717,2.721,718,1.759,719,1.759,720,1.759]],["title/license.html",[193,1.414,604,1.924,721,1.924]],["body/license.html",[4,0.357,10,1.025,25,0.036,40,2.901,56,2.347,80,0.036,81,0.036,96,1.156,137,1.156,315,4.17,407,2.901,554,2.901,721,2.901,722,3.569,723,4.893,724,3.569,725,3.569,726,3.569,727,3.569,728,4.478,729,3.569,730,3.569,731,3.569,732,3.569,733,4.478,734,3.569,735,5.583,736,3.569,737,4.478,738,4.893,739,3.569,740,4.893,741,4.478,742,3.569,743,3.569,744,3.569,745,3.569,746,3.569,747,3.569,748,3.569,749,3.569,750,3.569,751,3.569,752,3.569,753,3.569,754,3.569,755,4.478,756,4.478,757,3.569,758,3.569,759,4.478,760,3.569,761,3.569,762,3.569,763,3.569,764,3.569,765,3.569,766,3.569,767,3.569,768,3.569,769,3.569,770,3.569,771,3.569,772,3.569,773,3.569,774,3.569,775,3.569,776,3.569,777,3.569,778,3.569,779,3.569]],["title/modules.html",[82,0.859]],["body/modules.html",[25,0.04,80,0.04,81,0.04,82,0.955,83,2.241,91,1.755,92,1.98,93,1.98,589,3.762,780,5.455,781,5.455,782,5.455]],["title/overview.html",[783,3.125]],["body/overview.html",[0,1.374,1,1.838,10,0.853,14,0.853,25,0.047,59,0.073,62,0.297,80,0.032,81,0.032,82,0.888,83,2.88,84,0.962,85,1.083,86,1.374,87,1.374,88,2.414,89,2.414,90,2.414,91,2.297,92,2.666,93,2.562,94,2.083,95,1.556,96,0.962,105,1.556,106,2.746,125,2.151,165,2.375,167,3.23,168,3.23,229,0.663,232,2.151,235,2.151,237,1.911,240,1.911,243,1.697,245,1.911,264,2.414,265,2.414,266,2.414,449,2.414,450,2.414,452,2.414,457,2.414,458,2.414,459,2.414,460,2.414,783,2.414]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":388,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["0.8.26",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":165,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{},"overview.html":{}}}],["1/1",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":73,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["10/10",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["12/43",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":166,"title":{},"body":{"components/NguiInviewComponent.html":{},"classes/konsole.html":{}}}],["2.5.4",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":725,"title":{},"body":{"license.html":{}}}],["27",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":167,"title":{},"body":{"components/NguiInviewComponent.html":{},"overview.html":{}}}],["37",{"_index":427,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["38",{"_index":428,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39",{"_index":432,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39;click&#39",{"_index":601,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;enter&#39",{"_index":603,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;keypress&#39",{"_index":602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["4",{"_index":168,"title":{},"body":{"components/NguiInviewComponent.html":{},"overview.html":{}}}],["40",{"_index":433,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["5",{"_index":169,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["5/6",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":75,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"index.html":{}}}],["6.0.0",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":74,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["7/11",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":170,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["80",{"_index":198,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["83",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["9/13",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["_focus",{"_index":482,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["abov",{"_index":754,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":681,"title":{},"body":{"classes/konsole.html":{}}}],["action",{"_index":40,"title":{},"body":{"injectables/DynamicComponentService.html":{},"license.html":{}}}],["actual_compon",{"_index":247,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ad",{"_index":543,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["add",{"_index":12,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["addaninviewpagetopag",{"_index":487,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist",{"_index":488,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist(item",{"_index":508,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["afterviewinit",{"_index":481,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["again",{"_index":477,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["allen",{"_index":726,"title":{},"body":{"license.html":{}}}],["allow",{"_index":39,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["altern",{"_index":638,"title":{},"body":{"classes/konsole.html":{}}}],["and/or",{"_index":747,"title":{},"body":{"license.html":{}}}],["angular",{"_index":606,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":206,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["anoth",{"_index":476,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["appcompon",{"_index":621,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":618,"title":{},"body":{"index.html":{}}}],["arg",{"_index":664,"title":{},"body":{"classes/konsole.html":{}}}],["argument",{"_index":365,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["aris",{"_index":778,"title":{},"body":{"license.html":{}}}],["array",{"_index":298,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["array.from(parentlistel.queryselectorall('ngui",{"_index":417,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["array.from(this.item",{"_index":336,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["array.from(this.itemsbackup",{"_index":323,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["arrow",{"_index":429,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["associ",{"_index":736,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":47,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["author",{"_index":768,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":396,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["autocomplete'},{'nam",{"_index":233,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["autocomplete.compon",{"_index":378,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["autocomplete.component.t",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["autocompletecompon",{"_index":361,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["back",{"_index":479,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["backup",{"_index":278,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["basic",{"_index":632,"title":{},"body":{"index.html":{}}}],["be",{"_index":519,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["befor",{"_index":41,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{}}}],["block",{"_index":144,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["blur",{"_index":179,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["boolean",{"_index":313,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":475,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["bottominview",{"_index":490,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["break",{"_index":431,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["brows",{"_index":782,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":589,"title":{},"body":{"dependencies.html":{},"classes/konsole.html":{},"modules.html":{}}}],["browsermodul",{"_index":619,"title":{},"body":{"index.html":{}}}],["c",{"_index":724,"title":{},"body":{"license.html":{}}}],["call",{"_index":332,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["callback",{"_index":199,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["case",{"_index":426,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cdr",{"_index":483,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["cdref",{"_index":295,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["chang",{"_index":319,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["changedetectorref",{"_index":296,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["charg",{"_index":732,"title":{},"body":{"license.html":{}}}],["check",{"_index":511,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["child",{"_index":345,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["claim",{"_index":771,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["click",{"_index":354,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cluster_nguicommonmodul",{"_index":88,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_export",{"_index":90,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_import",{"_index":89,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodul",{"_index":264,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_declar",{"_index":265,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_export",{"_index":266,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguilistmodul",{"_index":449,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_declar",{"_index":450,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_export",{"_index":452,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_import",{"_index":451,"title":{},"body":{"modules/NguiListModule.html":{}}}],["cluster_nguiutilsmodul",{"_index":457,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_declar",{"_index":458,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_export",{"_index":459,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_provid",{"_index":460,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["code",{"_index":623,"title":{},"body":{"index.html":{}}}],["collect",{"_index":631,"title":{},"body":{"index.html":{}}}],["common",{"_index":608,"title":{},"body":{"index.html":{}}}],["common.module.t",{"_index":97,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["common/src/lib/ngui",{"_index":6,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["commonmodul",{"_index":268,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["compid",{"_index":69,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compon",{"_index":14,"title":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.servic",{"_index":464,"title":{},"body":{"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["component.service.t",{"_index":8,"title":{},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{}}}],["component.service.ts:41",{"_index":55,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:43",{"_index":27,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:55",{"_index":33,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:65",{"_index":53,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component_templ",{"_index":231,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentfactoryresolv",{"_index":54,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref",{"_index":51,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentref.inst",{"_index":79,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.instance.id",{"_index":77,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.location.nativeelement.setattribute('id",{"_index":76,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["condit",{"_index":753,"title":{},"body":{"license.html":{}}}],["connect",{"_index":779,"title":{},"body":{"license.html":{}}}],["console.debug",{"_index":662,"title":{},"body":{"classes/konsole.html":{}}}],["console.debug.apply(consol",{"_index":698,"title":{},"body":{"classes/konsole.html":{}}}],["console.error",{"_index":532,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.error(`error",{"_index":694,"title":{},"body":{"classes/konsole.html":{}}}],["console.error.apply(consol",{"_index":706,"title":{},"body":{"classes/konsole.html":{}}}],["console.info",{"_index":669,"title":{},"body":{"classes/konsole.html":{}}}],["console.info.apply(consol",{"_index":702,"title":{},"body":{"classes/konsole.html":{}}}],["console.log",{"_index":544,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.log('alreadi",{"_index":541,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["console.log('nguiinviewpagecomponent.ngondestroy",{"_index":331,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log('nguiinviewpagecomponent.setitem",{"_index":337,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log.apply(consol",{"_index":700,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn",{"_index":680,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn.apply(consol",{"_index":704,"title":{},"body":{"classes/konsole.html":{}}}],["const",{"_index":66,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["constructor(@inject(componentfactoryresolv",{"_index":63,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(el",{"_index":155,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}}}],["constructor(factoryresolv",{"_index":24,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(publ",{"_index":348,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["constructor(render",{"_index":491,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["contain",{"_index":524,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["content",{"_index":276,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild",{"_index":202,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild(templateref",{"_index":208,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentsel",{"_index":289,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["contract",{"_index":775,"title":{},"body":{"license.html":{}}}],["copi",{"_index":315,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"license.html":{}}}],["copyright",{"_index":723,"title":{},"body":{"license.html":{}}}],["core",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":553,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":57,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["createcompn",{"_index":38,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcompon",{"_index":21,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent(compon",{"_index":31,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["current",{"_index":659,"title":{},"body":{"classes/konsole.html":{}}}],["damag",{"_index":772,"title":{},"body":{"license.html":{}}}],["deal",{"_index":737,"title":{},"body":{"license.html":{}}}],["debug",{"_index":644,"title":{},"body":{"classes/konsole.html":{}}}],["debug(...arg",{"_index":660,"title":{},"body":{"classes/konsole.html":{}}}],["declar",{"_index":86,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":201,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["default",{"_index":162,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defaultinviewhandl",{"_index":149,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defaultinviewhandler(entri",{"_index":175,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defin",{"_index":26,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["demoobject",{"_index":609,"title":{},"body":{"index.html":{}}}],["depend",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["destroy",{"_index":290,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["direct",{"_index":229,"title":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["display",{"_index":143,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["distribut",{"_index":745,"title":{},"body":{"license.html":{}}}],["document",{"_index":554,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentationcod",{"_index":610,"title":{},"body":{"index.html":{}}}],["dom",{"_index":126,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["down",{"_index":405,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["dyn",{"_index":71,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynam",{"_index":15,"title":{},"body":{"injectables/DynamicComponentService.html":{},"dependencies.html":{}}}],["dynamical",{"_index":506,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["dynamiccomponentservic",{"_index":1,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["e.g",{"_index":44,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["el",{"_index":363,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["elementref",{"_index":156,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["empti",{"_index":275,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["emptyitem",{"_index":292,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["enter",{"_index":439,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["enter(13",{"_index":435,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["entri",{"_index":185,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entries.foreach((entri",{"_index":217,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entry.intersectionratio",{"_index":227,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry['isintersect",{"_index":219,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entrycompon",{"_index":454,"title":{},"body":{"modules/NguiListModule.html":{}}}],["env",{"_index":691,"title":{},"body":{"classes/konsole.html":{}}}],["error",{"_index":286,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["error('ngui",{"_index":394,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["error(...arg",{"_index":665,"title":{},"body":{"classes/konsole.html":{}}}],["esc",{"_index":342,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["esc(27",{"_index":436,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escap",{"_index":339,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["etc",{"_index":48,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["even",{"_index":312,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["event",{"_index":137,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.additems(item",{"_index":493,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["event.key",{"_index":438,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.keycod",{"_index":413,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.t",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["event.which",{"_index":412,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["eventemitt",{"_index":172,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["exampl",{"_index":138,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["express",{"_index":761,"title":{},"body":{"license.html":{}}}],["factori",{"_index":58,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factory.create(this.rootviewcontainer.parentinjector",{"_index":68,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factoryresolv",{"_index":18,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["fals",{"_index":194,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"classes/konsole.html":{},"license.html":{}}}],["fill",{"_index":494,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["fire",{"_index":134,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["fireev",{"_index":467,"title":{},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fireevent(el",{"_index":600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":308,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["fit",{"_index":764,"title":{},"body":{"license.html":{}}}],["focu",{"_index":355,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["focus",{"_index":445,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["follow",{"_index":752,"title":{},"body":{"license.html":{}}}],["formsmodul",{"_index":620,"title":{},"body":{"index.html":{}}}],["found",{"_index":382,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{}}}],["found.t",{"_index":548,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["found.ts:2",{"_index":549,"title":{},"body":{"classes/NoMatchFound.html":{}}}],["free",{"_index":731,"title":{},"body":{"license.html":{}}}],["function",{"_index":505,"title":{"miscellaneous/functions.html":{}},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":750,"title":{},"body":{"license.html":{}}}],["get",{"_index":604,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":507,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["grant",{"_index":730,"title":{},"body":{"license.html":{}}}],["greater",{"_index":663,"title":{},"body":{"classes/konsole.html":{}}}],["handl",{"_index":402,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["handleintersect",{"_index":150,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handleintersect(entri",{"_index":186,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handler",{"_index":178,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["height",{"_index":309,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["height}px",{"_index":335,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["herebi",{"_index":729,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":285,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["highlight",{"_index":634,"title":{},"body":{"index.html":{}}}],["highlight.pip",{"_index":462,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["highlight.pipe.t",{"_index":108,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["highlight.pipe.ts:5",{"_index":115,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["holder",{"_index":769,"title":{},"body":{"license.html":{}}}],["host",{"_index":142,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["hostlisten",{"_index":353,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('blur",{"_index":448,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('click",{"_index":442,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('focu",{"_index":444,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keydown",{"_index":408,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keyup",{"_index":437,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostview",{"_index":43,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["html",{"_index":228,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{}}}],["html5",{"_index":626,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":306,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["http_provid",{"_index":622,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["ie11",{"_index":627,"title":{},"body":{"index.html":{}}}],["ig",{"_index":123,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["implement",{"_index":118,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["impli",{"_index":762,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["includ",{"_index":740,"title":{},"body":{"license.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["indic",{"_index":196,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["info(...arg",{"_index":667,"title":{},"body":{"classes/konsole.html":{}}}],["inject",{"_index":0,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{},"overview.html":{}}}],["inject(platform_id",{"_index":210,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["input",{"_index":153,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["input('item",{"_index":385,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["input('templ",{"_index":320,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["insert",{"_index":42,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["insertcompon",{"_index":22,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent(componentref",{"_index":52,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["instal",{"_index":615,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":398,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["interact",{"_index":636,"title":{},"body":{"index.html":{}}}],["intersect",{"_index":177,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["intersectionobserv",{"_index":161,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["intersectionobserver(this.handleintersect.bind(thi",{"_index":213,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverentri",{"_index":218,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["invalid",{"_index":695,"title":{},"body":{"classes/konsole.html":{}}}],["inview",{"_index":135,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["inview'},{'nam",{"_index":234,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inview)=\"someth",{"_index":184,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.compon",{"_index":270,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.component.t",{"_index":129,"title":{},"body":{"components/NguiInviewComponent.html":{},"coverage.html":{}}}],["inview.component.ts:37",{"_index":203,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:39",{"_index":171,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:40",{"_index":173,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:41",{"_index":174,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:43",{"_index":197,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:45",{"_index":195,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:47",{"_index":160,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:56",{"_index":192,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:64",{"_index":190,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:69",{"_index":187,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:85",{"_index":176,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.direct",{"_index":271,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.directive.t",{"_index":248,"title":{},"body":{"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inview.directive.ts:22",{"_index":258,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:25",{"_index":252,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:28",{"_index":253,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:30",{"_index":251,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:33",{"_index":257,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:34",{"_index":259,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:39",{"_index":256,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:47",{"_index":255,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:57",{"_index":254,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.modul",{"_index":100,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["inview.module.t",{"_index":267,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview/ngui",{"_index":99,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{}}}],["inview/src/ngui",{"_index":128,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inviewpag",{"_index":484,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["invok",{"_index":182,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["isinview",{"_index":146,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["islistload",{"_index":485,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["isplatformbrows",{"_index":205,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":211,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["it'",{"_index":470,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["item",{"_index":246,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["item.direct",{"_index":455,"title":{},"body":{"modules/NguiListModule.html":{}}}],["item.directive.t",{"_index":349,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:24",{"_index":364,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:26",{"_index":374,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:27",{"_index":375,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:28",{"_index":362,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:39",{"_index":373,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:52",{"_index":370,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:75",{"_index":372,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:88",{"_index":367,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:92",{"_index":368,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:98",{"_index":366,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["itemsbackup",{"_index":291,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["itemsbackup.length",{"_index":284,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["js",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":343,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["keyboard",{"_index":403,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyboard/mous",{"_index":635,"title":{},"body":{"index.html":{}}}],["keycod",{"_index":411,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown",{"_index":356,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown(ev",{"_index":369,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup",{"_index":357,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ent",{"_index":384,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ev",{"_index":371,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["kim",{"_index":727,"title":{},"body":{"license.html":{}}}],["kind",{"_index":760,"title":{},"body":{"license.html":{}}}],["konsol",{"_index":465,"title":{"classes/konsole.html":{}},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["konsole.debug('no",{"_index":714,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.debug('y",{"_index":708,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('no",{"_index":718,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('y",{"_index":712,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('no",{"_index":716,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('y",{"_index":710,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('no",{"_index":715,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('y",{"_index":709,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('al",{"_index":707,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('error",{"_index":639,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('info",{"_index":719,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('non",{"_index":713,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('warn",{"_index":720,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('no",{"_index":717,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('y",{"_index":711,"title":{},"body":{"classes/konsole.html":{}}}],["konwole.log(1,2,3,4,5",{"_index":640,"title":{},"body":{"classes/konsole.html":{}}}],["last",{"_index":518,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["lazi",{"_index":624,"title":{},"body":{"index.html":{}}}],["left",{"_index":406,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"overview.html":{}}}],["level",{"_index":657,"title":{},"body":{"classes/konsole.html":{}}}],["liabil",{"_index":773,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":770,"title":{},"body":{"license.html":{}}}],["licens",{"_index":721,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":741,"title":{},"body":{"license.html":{}}}],["line",{"_index":261,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["list",{"_index":239,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'nam",{"_index":244,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["list.compon",{"_index":377,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.component.t",{"_index":469,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":510,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:114",{"_index":504,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:132",{"_index":509,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:61",{"_index":523,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:63",{"_index":527,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:65",{"_index":503,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:67",{"_index":502,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:86",{"_index":501,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:89",{"_index":517,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:90",{"_index":513,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:92",{"_index":520,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:93",{"_index":492,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:96",{"_index":526,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:97",{"_index":516,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:98",{"_index":515,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:99",{"_index":514,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.direct",{"_index":376,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.directive.t",{"_index":338,"title":{},"body":{"directives/NguiListDirective.html":{},"coverage.html":{}}}],["list.directive.ts:13",{"_index":346,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:15",{"_index":341,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:17",{"_index":347,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.modul",{"_index":102,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["list.module.t",{"_index":453,"title":{},"body":{"modules/NguiListModule.html":{}}}],["list/ngui",{"_index":101,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["list/src/ngui",{"_index":272,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list/src/no",{"_index":547,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["list/src/non",{"_index":550,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["listdirect",{"_index":359,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listen",{"_index":131,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["listitem",{"_index":416,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitemndx",{"_index":418,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems.indexof(thislistitem",{"_index":419,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[0",{"_index":422,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitemndx",{"_index":421,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitems.length",{"_index":424,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["load",{"_index":480,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["log",{"_index":645,"title":{},"body":{"classes/konsole.html":{}}}],["log(...arg",{"_index":670,"title":{},"body":{"classes/konsole.html":{}}}],["log_level",{"_index":642,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel",{"_index":643,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel.touppercas",{"_index":686,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels.indexof(loglevel",{"_index":688,"title":{},"body":{"classes/konsole.html":{}}}],["lt;ng",{"_index":288,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["make",{"_index":472,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["match",{"_index":81,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":72,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["merchant",{"_index":763,"title":{},"body":{"license.html":{}}}],["merg",{"_index":743,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["method",{"_index":20,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["miscellan",{"_index":598,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":722,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":742,"title":{},"body":{"license.html":{}}}],["modul",{"_index":82,"title":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"modules.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":443,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["name",{"_index":29,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["necessari",{"_index":512,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["new",{"_index":121,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["nextlistitem",{"_index":420,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextlistitem.focu",{"_index":434,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextsibl",{"_index":350,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ngafterviewinit",{"_index":489,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngfor=\"let",{"_index":498,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngif=\"item",{"_index":496,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":151,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["ngoninit",{"_index":152,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["ngui",{"_index":70,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["ngui/common",{"_index":605,"title":{},"body":{"index.html":{}}}],["nguiautocompletecompon",{"_index":232,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguicommonmodul",{"_index":83,"title":{"modules/NguiCommonModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguihighlight",{"_index":110,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["nguihighlightpip",{"_index":106,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"overview.html":{}}}],["nguihilight",{"_index":633,"title":{},"body":{"index.html":{}}}],["nguiinview",{"_index":241,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewcompon",{"_index":125,"title":{"components/NguiInviewComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewdirect",{"_index":240,"title":{"directives/NguiInviewDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewmodul",{"_index":91,"title":{"modules/NguiInviewModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiinviewpag",{"_index":525,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nguiinviewpagecompon",{"_index":235,"title":{"components/NguiInviewPageComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistdirect",{"_index":243,"title":{"directives/NguiListDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistitemdirect",{"_index":245,"title":{"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistmodul",{"_index":92,"title":{"modules/NguiListModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguioutview",{"_index":249,"title":{},"body":{"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguioutview]'},{'nam",{"_index":242,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiutilsmodul",{"_index":93,"title":{"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguivirtuallistcompon",{"_index":237,"title":{"components/NguiVirtualListComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguivirtuallistcomponent.addlist",{"_index":545,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["noitem",{"_index":497,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nomatchfound",{"_index":381,"title":{"classes/NoMatchFound.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["none",{"_index":380,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["noneselect",{"_index":379,"title":{"classes/NoneSelect.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{},"coverage.html":{}}}],["noninfring",{"_index":767,"title":{},"body":{"license.html":{}}}],["notic",{"_index":755,"title":{},"body":{"license.html":{}}}],["notinview",{"_index":136,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["npm",{"_index":616,"title":{},"body":{"index.html":{}}}],["num",{"_index":282,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["num\">row",{"_index":500,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["number",{"_index":281,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["object",{"_index":386,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["object.keys(this.log_level",{"_index":687,"title":{},"body":{"classes/konsole.html":{}}}],["observ",{"_index":147,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["obtain",{"_index":734,"title":{},"body":{"license.html":{}}}],["on",{"_index":696,"title":{},"body":{"classes/konsole.html":{}}}],["once80pctvis",{"_index":148,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["ondestroy",{"_index":140,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["oninit",{"_index":139,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["option",{"_index":30,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["otherwis",{"_index":777,"title":{},"body":{"license.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/NguiCommonModule.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":154,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outview",{"_index":274,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["overview",{"_index":783,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":582,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":283,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["page'},{'nam",{"_index":236,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.compon",{"_index":456,"title":{},"body":{"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component.t",{"_index":273,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":300,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:122",{"_index":305,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:56",{"_index":318,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:60",{"_index":299,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:63",{"_index":316,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:65",{"_index":317,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:67",{"_index":314,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:72",{"_index":307,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:73",{"_index":297,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:84",{"_index":303,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:94",{"_index":302,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:99",{"_index":301,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.cont",{"_index":330,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["pagesref",{"_index":486,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["param",{"_index":677,"title":{},"body":{"classes/konsole.html":{}}}],["paramet",{"_index":28,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["parent",{"_index":395,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistcomp",{"_index":351,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistel",{"_index":414,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parseint('00000",{"_index":649,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00001",{"_index":650,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00010",{"_index":651,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00100",{"_index":652,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('01000",{"_index":653,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('10000",{"_index":654,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('11111",{"_index":655,"title":{},"body":{"classes/konsole.html":{}}}],["particular",{"_index":765,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":728,"title":{},"body":{"license.html":{}}}],["permit",{"_index":749,"title":{},"body":{"license.html":{}}}],["person",{"_index":733,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":105,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":117,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["platform_id",{"_index":204,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["platformid",{"_index":159,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["pleas",{"_index":629,"title":{},"body":{"index.html":{}}}],["polyfil",{"_index":630,"title":{},"body":{"index.html":{}}}],["port",{"_index":478,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["portion",{"_index":758,"title":{},"body":{"license.html":{}}}],["posit",{"_index":133,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["press",{"_index":344,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["prevlistitem",{"_index":423,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevlistitem.focu",{"_index":430,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevsibl",{"_index":352,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["privat",{"_index":209,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["projects/.../fir",{"_index":599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngui",{"_index":5,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["properti",{"_index":17,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["provid",{"_index":10,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":250,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["publish",{"_index":744,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":766,"title":{},"body":{"license.html":{}}}],["push",{"_index":471,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ratio",{"_index":180,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["re",{"_index":120,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["read",{"_index":529,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["reason",{"_index":36,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["refer",{"_index":35,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["regexp(search",{"_index":122,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["remain",{"_index":310,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["remov",{"_index":13,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["render",{"_index":157,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["renderer2",{"_index":158,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["report",{"_index":614,"title":{},"body":{"index.html":{}}}],["reportaccept",{"_index":613,"title":{},"body":{"index.html":{}}}],["reportunit",{"_index":611,"title":{},"body":{"index.html":{}}}],["requir",{"_index":287,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["requirednum",{"_index":684,"title":{},"body":{"classes/konsole.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["rest",{"_index":495,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["restor",{"_index":279,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restoreitem",{"_index":293,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restrict",{"_index":739,"title":{},"body":{"license.html":{}}}],["restrictionnum",{"_index":682,"title":{},"body":{"classes/konsole.html":{}}}],["result",{"_index":80,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":119,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["return",{"_index":34,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["right",{"_index":407,"title":{},"body":{"directives/NguiListItemDirective.html":{},"license.html":{}}}],["rootviewcontain",{"_index":19,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["row",{"_index":280,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["rxj",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["safari",{"_index":628,"title":{},"body":{"index.html":{}}}],["same",{"_index":311,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["save",{"_index":617,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":473,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["search",{"_index":114,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["see",{"_index":474,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["select",{"_index":340,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoneSelect.html":{}}}],["select.t",{"_index":551,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["select.ts:2",{"_index":552,"title":{},"body":{"classes/NoneSelect.html":{}}}],["selector",{"_index":141,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["sell",{"_index":748,"title":{},"body":{"license.html":{}}}],["seper",{"_index":37,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["servic",{"_index":11,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["set",{"_index":46,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["setitem",{"_index":294,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setitems(item",{"_index":304,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setloglevel",{"_index":646,"title":{},"body":{"classes/konsole.html":{}}}],["setloglevel(loglevel",{"_index":672,"title":{},"body":{"classes/konsole.html":{}}}],["shall",{"_index":756,"title":{},"body":{"license.html":{}}}],["skip",{"_index":542,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["softwar",{"_index":735,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["src/dynam",{"_index":463,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/fire",{"_index":468,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/konsol",{"_index":466,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/ngui",{"_index":269,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["start",{"_index":193,"title":{"index.html":{},"license.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["statement",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":641,"title":{},"body":{"classes/konsole.html":{}}}],["still",{"_index":521,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["stop",{"_index":191,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["string",{"_index":113,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["style",{"_index":45,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["subject",{"_index":751,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":746,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":757,"title":{},"body":{"license.html":{}}}],["support",{"_index":780,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":781,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":425,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabindex",{"_index":383,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabl",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":145,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["templateref",{"_index":200,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["test",{"_index":612,"title":{},"body":{"index.html":{}}}],["text",{"_index":116,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["text.replace(r",{"_index":124,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["this.autocompletecompon",{"_index":392,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.bottominview.emit(thi",{"_index":540,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.bottominview.observers.length",{"_index":531,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.cdref.detectchang",{"_index":327,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.contentsel",{"_index":328,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.defaultinviewhandler(entri",{"_index":222,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.destroy",{"_index":333,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dynamiccomponentservice.createcomponent(nguiinviewpagecompon",{"_index":535,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.dynamiccomponentservice.insertcomponent(this.inviewpag",{"_index":537,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.el.nativeel",{"_index":410,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":400,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.element.nativeelement.getboundingclientrect().height",{"_index":334,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('.inview",{"_index":329,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.factoryresolv",{"_index":64,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.factoryresolver.resolvecomponentfactory(compon",{"_index":67,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.inview.emit(entri",{"_index":223,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inview.observers.length",{"_index":226,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inviewpag",{"_index":534,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.setitems(item",{"_index":546,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.templ",{"_index":538,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpages.push(this.inviewpag",{"_index":539,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.isinview",{"_index":220,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.islistload",{"_index":533,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.item",{"_index":322,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.itemsbackup",{"_index":324,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.listdirect",{"_index":390,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.log_levels[param",{"_index":685,"title":{},"body":{"classes/konsole.html":{}}}],["this.log_levels[this.loglevel",{"_index":683,"title":{},"body":{"classes/konsole.html":{}}}],["this.loglevel",{"_index":693,"title":{},"body":{"classes/konsole.html":{}}}],["this.nguiinview.emit(entri",{"_index":262,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nguioutview.emit(entri",{"_index":263,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.notinview.emit(entri",{"_index":224,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.object",{"_index":397,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.object.html",{"_index":401,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.observ",{"_index":212,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.disconnect",{"_index":216,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.observe(this.element.nativeel",{"_index":215,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.once80pctvis",{"_index":225,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.opt",{"_index":214,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.outview",{"_index":321,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.pagesref",{"_index":536,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.parentlistcomp",{"_index":389,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.element.nativeel",{"_index":415,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.escaped.emit",{"_index":441,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.selected.emit(this.object",{"_index":440,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocus",{"_index":446,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused']('listitem",{"_index":447,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeel",{"_index":387,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setstyle(this.contentsel",{"_index":326,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.rootviewcontain",{"_index":65,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.rootviewcontainer.insert(componentref.hostview",{"_index":78,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.templ",{"_index":530,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.tolog('debug",{"_index":697,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('error",{"_index":705,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('info",{"_index":701,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('log",{"_index":699,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('warn",{"_index":703,"title":{},"body":{"classes/konsole.html":{}}}],["this.viewcontainer.clear",{"_index":399,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.virtuallistcompon",{"_index":391,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["thislistitem",{"_index":409,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["threshold",{"_index":164,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["throw",{"_index":393,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tolog",{"_index":647,"title":{},"body":{"classes/konsole.html":{}}}],["tolog(param",{"_index":674,"title":{},"body":{"classes/konsole.html":{}}}],["tort",{"_index":776,"title":{},"body":{"license.html":{}}}],["trackbi",{"_index":499,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["transform",{"_index":111,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["transform(text",{"_index":112,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["tree",{"_index":127,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["true",{"_index":221,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["ts",{"_index":207,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["tslint:dis",{"_index":260,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["type",{"_index":49,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["ui",{"_index":607,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":325,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":404,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["us",{"_index":56,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":183,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["util",{"_index":625,"title":{},"body":{"index.html":{}}}],["utils.modul",{"_index":104,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["utils.module.t",{"_index":461,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["utils/ngui",{"_index":103,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{}}}],["utils/src/dynam",{"_index":7,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["utils/src/fir",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/src/konsole.t",{"_index":577,"title":{},"body":{"coverage.html":{},"classes/konsole.html":{}}}],["utils/src/konsole.ts:11",{"_index":656,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:22",{"_index":658,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:25",{"_index":675,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:33",{"_index":673,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:47",{"_index":661,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:54",{"_index":671,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:61",{"_index":668,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:68",{"_index":679,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:75",{"_index":666,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/ngui",{"_index":107,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["valu",{"_index":163,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["var",{"_index":230,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["view",{"_index":277,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewchild",{"_index":522,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewchild('pag",{"_index":528,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewcontain",{"_index":358,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["viewcontainerref",{"_index":32,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewport",{"_index":132,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["virtual",{"_index":238,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["virtuallistcompon",{"_index":360,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["visibl",{"_index":188,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["void",{"_index":189,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["warn",{"_index":648,"title":{},"body":{"classes/konsole.html":{}}}],["warn(...arg",{"_index":678,"title":{},"body":{"classes/konsole.html":{}}}],["warranti",{"_index":759,"title":{},"body":{"license.html":{}}}],["whether",{"_index":774,"title":{},"body":{"license.html":{}}}],["window",{"_index":689,"title":{},"body":{"classes/konsole.html":{}}}],["window.consol",{"_index":676,"title":{},"body":{"classes/konsole.html":{}}}],["window.konsol",{"_index":637,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorag",{"_index":690,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage.setitem('konsole.log_level",{"_index":692,"title":{},"body":{"classes/konsole.html":{}}}],["without",{"_index":738,"title":{},"body":{"license.html":{}}}],["won't",{"_index":181,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ye",{"_index":50,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["zone.j",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DynamicComponentService.html":{"url":"injectables/DynamicComponentService.html","title":"injectable - DynamicComponentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n        \n\n            \n                Description\n            \n            \n                Provide service to add or remove component dynamically\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                factoryResolver\n                            \n                            \n                                rootViewContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                insertComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryResolver: )\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryResolver\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateComponent(component: any, into?: ViewContainerRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            returns component reference\nThe reason to seperate createCompnent and insertComponent is\nto allow some actions before we insert into a hostView.\ne.g styling, setting attributes, etc\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        into\n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ninsertComponent(componentRef: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            insert component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentRef\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Component\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            factoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        factoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                        used to create a factory from a component class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootViewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootViewContainer:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                        defines where a dynamic components insert into \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Provide service to add or remove component dynamically\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiCommonModule.html":{"url":"modules/NguiCommonModule.html","title":"module - NguiCommonModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiCommonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-common.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n    imports: [\n        NguiInviewModule,\n        NguiListModule,\n        NguiUtilsModule\n    ],\n    exports: [\n        NguiInviewModule,\n        NguiListModule,\n        NguiUtilsModule\n    ]\n})\nexport class NguiCommonModule {\n}\n\nexport * from './ngui-inview/ngui-inview.module';\nexport * from './ngui-list/ngui-list.module';\nexport * from './ngui-utils/ngui-utils.module';\nexport * from './ngui-utils/ngui-utils.module';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NguiHighlightPipe.html":{"url":"pipes/NguiHighlightPipe.html","title":"pipe - NguiHighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  NguiHighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        nguiHighlight\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(text: string, search: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        search\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `${match}`);\n    }\n\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewComponent.html":{"url":"components/NguiInviewComponent.html","title":"component - NguiInviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n\n\n    \n        Description\n    \n    \n        An element that listens to viewport positioning and fires inView and notInview events\nexample\n\n   \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview\n            \n\n\n            \n                styles\n                :host {display: block;}\n            \n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isInview\n                            \n                            \n                                observer\n                            \n                            \n                                once80PctVisible\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultInviewHandler\n                            \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                inview\n                            \n                            \n                                notInview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        inview\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notInview\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultInviewHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultInviewHandler(entry: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            default intersection handler, which sets blur dependes on intersection ratio\nthis won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            fires (inview) and (notInview) events when this component is visible or not visible  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            stop IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInview:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:45\n                            \n                        \n\n                \n                    \n                        indicates that this element is in viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            once80PctVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        once80PctVisible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:47\n                            \n                        \n\n                \n                    \n                        indicates that this element is 80% in viewport. Used by the default callback \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:37\n                            \n                        \n\n                \n                    \n                         reference \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    Renderer2,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * An element that listens to viewport positioning and fires inView and notInview events\n * ### example\n * ```ts\n * \n *   \n * \n * ```\n */\n@Component({\n    selector: 'ngui-inview',\n    template: `\n        \n        \n    `,\n    styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /**  reference */\n    @ContentChild(TemplateRef) template: TemplateRef;\n    /** IntersectionObserver options */\n    @Input() options: any = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    @Output() inview: EventEmitter = new EventEmitter();\n    @Output() notInview: EventEmitter = new EventEmitter();\n\n    observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n    isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n    once80PctVisible = false;\n\n    constructor(\n        private element: ElementRef,\n        private renderer: Renderer2,\n        @Inject(PLATFORM_ID) private platformId: any) {\n    }\n\n    /** Starts IntersectionObserver */\n    ngOnInit(): void {\n        if (isPlatformBrowser(this.platformId)) {\n            this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.options);\n            this.observer.observe(this.element.nativeElement);\n        }\n    }\n\n    /** stop IntersectionObserver */\n    ngOnDestroy(): void {\n        this.observer.disconnect();\n    }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n    handleIntersect(entries): void {\n        entries.forEach((entry: IntersectionObserverEntry) => {\n            if (entry['isIntersecting']) {\n                this.isInview = true;\n                this.defaultInviewHandler(entry);\n                this.inview.emit(entry);\n            } else {\n                this.notInview.emit(entry);\n            }\n        });\n    }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n    defaultInviewHandler(entry): any {\n        if (this.once80PctVisible || this.inview.observers.length) {\n            return;\n        }\n\n        if (entry.intersectionRatio \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiInviewDirective.html":{"url":"directives/NguiInviewDirective.html","title":"directive - NguiInviewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiInviewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n        \n\n            \n                Description\n            \n            \n                Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [nguiInview], [nguiOutview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                observer\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nguiInview\n                            \n                            \n                                nguiOutview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:25\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nguiInview\n                    \n                    \n                        Event that will be fired when in viewport \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nguiOutview\n                    \n                    \n                        Event that will be fired when out of  viewport \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:30\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:57\n                            \n                        \n\n\n                \n                    \n                            Fires (nguiInview) event when this element is in viewport\n  and fires (nguiOutview) event when this element is not in viewport\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Stops IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    Renderer2\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n    observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n    @Input() options: any = {};\n\n    /** Event that will be fired when in viewport */\n    @Output() nguiInview: EventEmitter = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n    @Output() nguiOutview: EventEmitter = new EventEmitter();\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        @Inject(PLATFORM_ID) private platformId: any) {\n    }\n\n    /** Starts IntersectionObserver */\n    ngOnInit(): void {\n        if (isPlatformBrowser(this.platformId)) {\n            this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.options);\n            this.observer.observe(this.element.nativeElement);\n        }\n    }\n\n    /** Stops IntersectionObserver */\n    ngOnDestroy(): void {\n        if (isPlatformBrowser(this.platformId) && this.observer) {\n            this.observer.disconnect();\n        }\n    }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n    handleIntersect(entries): void {\n        entries.forEach((entry: IntersectionObserverEntry) => {\n            if (entry['isIntersecting']) {\n                this.nguiInview.emit(entry);\n            } else {\n                this.nguiOutview.emit(entry);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiInviewModule.html":{"url":"modules/NguiInviewModule.html","title":"module - NguiInviewModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiInviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiInviewComponent\n                            \n                            \n                                NguiInviewDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewComponent\n                            \n                            \n                                    NguiInviewDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NguiInviewComponent,\n        NguiInviewDirective\n    ],\n    exports: [\n        NguiInviewComponent,\n        NguiInviewDirective\n    ]\n})\nexport class NguiInviewModule {\n}\n\nexport {NguiInviewComponent} from './src/ngui-inview.component';\nexport {NguiInviewDirective} from './src/ngui-inview.directive';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewPageComponent.html":{"url":"components/NguiInviewPageComponent.html","title":"component - NguiInviewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n\n\n    \n        Description\n    \n    \n        A block of component that listens to inView and outView events,\nso that it empties contents when out of view after backup items\nand restores the contents when in view\nexample\n\n   \n     \n       row number: {{ num }}\n     \n   \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview-page\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n  \n  \n  \n  \n  {{ itemsBackup.length }} items hidden\n\n\n\n   Error: requires [items] \n   Error: requires &lt;ng-template>\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsEl\n                            \n                            \n                                destroyed\n                            \n                            \n                                itemsBackup\n                            \n                            \n                                options\n                            \n                            \n                                outView\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emptyItems\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restoreItems\n                            \n                            \n                                setItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        List of elements that are used to render this element \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Empty items when not in viewport, so that elements are not rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restoreItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestoreItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Restore items when in viewport, so that elements are rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetItems(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsEl:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:72\n                            \n                        \n\n                \n                    \n                        The first element of this component.\nThe height of it remains the same even when items get empty out.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destroyed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsBackup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsBackup:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:67\n                            \n                        \n\n                \n                    \n                        The copy of items. This is set when this element is out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:63\n                            \n                        \n\n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outView:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        Indicates that the page of out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:56\n                            \n                        \n\n                \n                    \n                        Allow users to change the contents \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n *\n * ### example\n * ```ts\n * \n *   \n *     \n *       row number: {{ num }}\n *     \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    \n      \n      \n      \n      \n      {{ itemsBackup.length }} items hidden\n    \n\n    \n       Error: requires [items] \n       Error: requires &lt;ng-template>\n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  // @Input('template') template: TemplateRef;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array;\n\n  /** IntersectionObserver options */\n  options: any;\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array): void {\n    if (!this.destroyed) {\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ itemsBackup.length }} items hidden   Error: requires [items]    Error: requires '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListDirective.html":{"url":"directives/NguiListDirective.html","title":"directive - NguiListDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiListDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngui-list\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListItemDirective.html":{"url":"directives/NguiListItemDirective.html","title":"directive - NguiListItemDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NguiListItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngui-list-item\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nextSibling\n                            \n                            \n                                parentListComp\n                            \n                            \n                                prevSibling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                click\n                            \n                            \n                                focus\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, viewContainer: ViewContainerRef, listDirective: NguiListDirective, virtualListComponent: NguiVirtualListComponent, autocompleteComponent: NguiAutocompleteComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        listDirective\n                                                  \n                                                        \n                                                                    NguiListDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualListComponent\n                                                  \n                                                        \n                                                                    NguiVirtualListComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        autocompleteComponent\n                                                  \n                                                        \n                                                                    NguiAutocompleteComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keydown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeydown(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeyup(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentListComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentListComp:     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                    \n                \n                    \n                        \n                            Type :     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prevSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n      case 37: case 38: // up arrow, left arrow\n        prevListItem.focus();\n        break;\n      case 39: case 40: // down arrow, right arrow\n        nextListItem.focus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n      case 'Enter':\n        this.parentListComp.selected.emit(this.object);\n        break;\n      case 'Escape':\n        this.parentListComp.escaped.emit();\n        break;\n      default:\n        break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiListModule.html":{"url":"modules/NguiListModule.html","title":"module - NguiListModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_imports\n\n\n\ncluster_NguiListModule_exports\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiAutocompleteComponent\n                            \n                            \n                                NguiInviewPageComponent\n                            \n                            \n                                NguiListDirective\n                            \n                            \n                                NguiListItemDirective\n                            \n                            \n                                NguiVirtualListComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                NguiInviewPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiAutocompleteComponent\n                            \n                            \n                                    NguiInviewPageComponent\n                            \n                            \n                                    NguiListDirective\n                            \n                            \n                                    NguiListItemDirective\n                            \n                            \n                                    NguiVirtualListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NguiInviewModule\n    ],\n    declarations: [\n        NguiAutocompleteComponent,\n        NguiInviewPageComponent,\n        NguiListDirective,\n        NguiListItemDirective,\n        NguiVirtualListComponent\n    ],\n    exports: [\n        NguiAutocompleteComponent,\n        NguiInviewPageComponent,\n        NguiListDirective,\n        NguiListItemDirective,\n        NguiVirtualListComponent\n    ],\n    entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n\nexport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nexport {NguiListItemDirective} from './src/ngui-list-item.directive';\nexport {NguiListDirective} from './src/ngui-list.directive';\nexport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nexport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiUtilsModule.html":{"url":"modules/NguiUtilsModule.html","title":"module - NguiUtilsModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiUtilsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiHighlightPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiHighlightPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n    declarations: [NguiHighlightPipe],\n    exports: [NguiHighlightPipe],\n    providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\nexport { konsole } from './src/konsole';\nexport { fireEvent } from './src/fire-event';\nexport {DynamicComponentService} from './src/dynamic-component.service';\nexport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiVirtualListComponent.html":{"url":"components/NguiVirtualListComponent.html","title":"component - NguiVirtualListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiVirtualListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n\n\n    \n        Description\n    \n    \n        Virtual List\nThe  inserts  into\n when it is in viewport\nWhen it's inserted, it will be pushed down, which makes it out of viewport.\nUser scrolls down to see the bottom of the list,\nthen it will insert another  again.\n listens to (nguiInview) and (nguiOutview) events,\nwhen  is out of view port, it empties out the contents.\nand it restores back the contents when it is in viewport again.\nexample\n\n   \n     Loading\n     row number: {{ num }}\n   \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-virtual-list\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n   -->\n  \n   into #pages -->\n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _focused\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                addList\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, element: ElementRef, dynamicComponentService: DynamicComponentService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dynamicComponentService\n                                                  \n                                                        \n                                                                    DynamicComponentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nexample\n\n   \n     ngIf=\"items else noItems\">\n        ngFor=\"let num of items; trackBy: num\">row number: {{ num }}\n     \n     Loading\n   \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnInviewPageToPages\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnInviewPageToPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addList\n                            \n                            \n                        \n                    \n                \n                \n                    \naddList(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Check if necessary input and output is provided \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _focused\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _focused:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dynamicComponentService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dynamicComponentService:     DynamicComponentService\n\n                    \n                \n                    \n                        \n                            Type :     DynamicComponentService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPage:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:89\n                            \n                        \n\n                \n                    \n                        The last NguiInviewPageComponent being inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPages:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isListLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:92\n                            \n                        \n\n                \n                    \n                        Indicates if a page is still loading \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagesRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pagesRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:61\n                            \n                        \n\n                \n                    \n                        the container NguiInviewPage will be inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        Template of NguiInviewPage. Allow users to define their own template  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `` inserts  into\n * `` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `` again.\n *\n *  listens to (nguiInview) and (nguiOutview) events,\n * when  is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n *\n * ### example\n * ```ts\n * \n *   \n *     Loading\n *     row number: {{ num }}\n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    \n       -->\n      \n       into #pages -->\n      \n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n   *\n   * ### example\n   * ```ts\n   * \n   *   \n   *     \n   *        row number: {{ num }}\n   *     \n   *     Loading\n   *   \n   * \n   * ```\n   */\n  @Output() bottomInview: EventEmitter = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error(' requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    } else {\n      console.log('Already a page being inserted, skipping adding a page');\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->     into #pages -->  '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiVirtualListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoMatchFound.html":{"url":"classes/NoMatchFound.html","title":"class - NoMatchFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoMatchFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'No Match Found'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoMatchFound {\n  html = 'No Match Found';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoneSelect.html":{"url":"classes/NoneSelect.html","title":"class - NoneSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoneSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Select'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/none-select.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoneSelect {\n  html = 'Select';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewComponent\n            \n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n            \n            \n                directive\n            \n            \n                NguiInviewDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n            \n            \n                component\n            \n            \n                NguiAutocompleteComponent\n            \n            \n                27 %\n                (12/43)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewPageComponent\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListItemDirective\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListDirective\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n            \n            \n                component\n            \n            \n                NguiVirtualListComponent\n            \n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n            \n            \n                class\n            \n            \n                NoMatchFound\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n            \n            \n                class\n            \n            \n                NoneSelect\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n            \n            \n                function\n            \n            \n                fireEvent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n            \n            \n                class\n            \n            \n                konsole\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n            \n            \n                pipe\n            \n            \n                NguiHighlightPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fireEvent   (projects/.../fire-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfireEvent(el: undefined, type: undefined, options: any)\n                    \n                \n\n\n\n\n                \n                    \n                            fire the given event with options on the element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            fireEvent(el, &#39;click&#39;);\nfireEvent(el, &#39;keypress&#39;, {key: &#39;Enter&#39;});\n                                        \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngui/common\nAngular 6+ UI common directives, functions, services\n\n \n\n\nDemoObject DocumentationCode Coverage ReportUnit Test ReportAcceptance Report  \nInstall\n\ninstall @ngui/common\n\n$ npm install @ngui/common --save\nimport NguiCommonModule to your AppModule  \n\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '@ngui/common';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, NguiListModule, NguiInviewModule, NguiUtilsModule],\n  declarations: [AppComponent],\n  providers: [HTTP_PROVIDERS],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }Use it in your code\n \n  \nModules\nNguiInViewModule\nHandles lazy loading of Angular components, which utilizes HTML5 IntersectionObserver \nFor IE11 and Safari, please add polyfill for this module \n\nngui-inview component\nngui-inview directive\n\nNguiUtilsModules\nCollection of basic utility function\n\nDynamicComponentService\nnguiHilight pipe\nfireEvent function\n\nNguiListModule\nHandles list elements with highlight and keyboard/mouse interaction\n\nngui-inview-page component\nngui-list component\nngui-virtual-list component\nngui-autocomplete component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/konsole.html":{"url":"classes/konsole.html","title":"class - konsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  konsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n        \n\n            \n                Description\n            \n            \n                window.konsole alternative\nexample\nkonsole.setLogLevel('error');\nkonwole.log(1,2,3,4,5);\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOG_LEVELS\n                            \n                            \n                                    Static\n                                logLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                setLogLevel\n                            \n                            \n                                    Static\n                                toLog\n                            \n                            \n                                    Static\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOG_LEVELS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOG_LEVELS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:11\n                            \n                        \n\n                \n                    \n                        all log levels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            logLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logLevel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'INFO'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:22\n                            \n                        \n\n                \n                    \n                        current log level set by setLogLevel, default 'INFO' \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:47\n                            \n                        \n\n\n                \n                    \n                            The same as console.debug() if the current log level is greater than debug \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:75\n                            \n                        \n\n\n                \n                    \n                            The same as console.error() if the current log level is greater than error \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:61\n                            \n                        \n\n\n                \n                    \n                            The same as console.info() if the current log level is greater than info \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:54\n                            \n                        \n\n\n                \n                    \n                            The same as console.log() if the current log level is greater than log \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLogLevel(logLevel: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:33\n                            \n                        \n\n\n                \n                    \n                            sets the current log level \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toLog(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns if it should call window.console or not \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warn(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:68\n                            \n                        \n\n\n                \n                    \n                            The same as console.warn() if the current log level is greater than warn \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array): void {\n    if (this.toLog('DEBUG')) {\n        console.debug.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array): void {\n    if (this.toLog('LOG')) {\n        console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array): void {\n    if (this.toLog('INFO')) {\n        console.info.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array): void {\n    if (this.toLog('WARN')) {\n        console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array): void {\n    if (this.toLog('ERROR')) {\n        console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Allen Kim\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NguiCommonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiInviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiUtilsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
