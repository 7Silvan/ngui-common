{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/main.ts","webpack:///./app/src/app.component.css","webpack:///./app/src/app.component.html","webpack:///./app/src/app.component.ts","webpack:///./app/src/app.module.ts","webpack:///./app/src/inview-module-test/index.ts","webpack:///./app/src/inview-module-test/inview-component.ts","webpack:///./app/src/inview-module-test/inview-directive.ts","webpack:///./app/src/list-module-test/autocomplete-component.ts","webpack:///./app/src/list-module-test/index.ts","webpack:///./app/src/list-module-test/inview-page-component.ts","webpack:///./app/src/list-module-test/list-component.ts","webpack:///./app/src/list-module-test/virtual-list-component.ts","webpack:///./app/src/utils-module-test/dynamic-component-service.ts","webpack:///./app/src/utils-module-test/fire-event.ts","webpack:///./app/src/utils-module-test/index.ts","webpack:///./app/src/utils-module-test/ngui-highlight.ts","webpack:///./modules/index.ts","webpack:///./modules/inview/index.ts","webpack:///./modules/inview/src/ngui-inview.component.ts","webpack:///./modules/inview/src/ngui-inview.directive.ts","webpack:///./modules/inview/src/ngui-inview.module.ts","webpack:///./modules/list/index.ts","webpack:///./modules/list/src/ngui-autocomplete.component.ts","webpack:///./modules/list/src/ngui-inview-page.component.ts","webpack:///./modules/list/src/ngui-list-item.directive.ts","webpack:///./modules/list/src/ngui-list.directive.ts","webpack:///./modules/list/src/ngui-list.module.ts","webpack:///./modules/list/src/ngui-virtual-list.component.ts","webpack:///./modules/list/src/no-match-found.ts","webpack:///./modules/list/src/none-select.ts","webpack:///./modules/utils/index.ts","webpack:///./modules/utils/src/dynamic-component.service.ts","webpack:///./modules/utils/src/fire-event.ts","webpack:///./modules/utils/src/konsole.ts","webpack:///./modules/utils/src/ngui-highlight.pipe.ts","webpack:///./modules/utils/src/ngui-utils.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './src/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","module.exports = \".links, .test {\\n  display: inline-block;\\n  padding: 12px;\\n}\\n.links {\\n  background: #eee;\\n}\\n.test {\\n  border: 1px solid #ccc;\\n  vertical-align: top;\\n  min-width: 50%;\\n}\"","module.exports = \"<h1>@ngui/common Test Page</h1>\\n\\n<nav class=\\\"links\\\">\\n  <h2>Modules</h2>\\n\\n  <h3>inview module</h3>\\n  <ul>\\n    <li><a routerLink=\\\"/inview/ngui-inview\\\">ngui-inview component</a></li>\\n    <li><a routerLink=\\\"/inview/nguiInview\\\">ngui-inview directive</a></li>\\n  </ul>\\n\\n  <h3>list module</h3>\\n  <ul>\\n    <li><a routerLink=\\\"/list/ngui-inview-page\\\">ngui-inview-page component</a></li>\\n    <li><a routerLink=\\\"/list/ngui-list\\\">ngui-list component</a></li>\\n    <li><a routerLink=\\\"/list/ngui-virtual-list\\\">ngui-virtual-list component</a></li>\\n    <li><a routerLink=\\\"/list/ngui-autocomplete\\\">ngui-autocomplete component</a></li>\\n  </ul>\\n\\n  <h3>utils module</h3>\\n  <ul>\\n    <li><a routerLink=\\\"/utils/dynamic-component-service\\\">DynamicComponentService</a></li>\\n    <li><a routerLink=\\\"/utils/ngui-highlight\\\">nguiHilight pipe</a></li>\\n    <li><a routerLink=\\\"/utils/fire-event\\\">fireEvent function</a></li>\\n  </ul>\\n</nav>\\n\\n<div class=\\\"test\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '../../modules';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { InviewComponent, InviewDirectiveTestComponent } from './inview-module-test';\r\nimport { AutocompleteComponent, InviewPageComponent, ListComponent, VirtualListComponent } from './list-module-test';\r\n\r\nimport {\r\n  DynamicComponentServiceTestComponent,\r\n  FireEventTestComponent,\r\n  MyDynamicComponent,\r\n  NguiHighlightPipeTestComponent\r\n} from './utils-module-test';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    NguiListModule,\r\n    NguiInviewModule,\r\n    NguiUtilsModule,\r\n    RouterModule.forRoot(\r\n      [\r\n        { path: 'inview/ngui-inview', component: InviewComponent },\r\n        { path: 'inview/nguiInview', component: InviewDirectiveTestComponent },\r\n        { path: 'list/ngui-inview-page', component: InviewPageComponent },\r\n        { path: 'list/ngui-list', component: ListComponent },\r\n        { path: 'list/ngui-virtual-list', component: VirtualListComponent },\r\n        { path: 'list/ngui-autocomplete', component: AutocompleteComponent },\r\n        { path: 'utils/dynamic-component-service', component: DynamicComponentServiceTestComponent },\r\n        { path: 'utils/ngui-highlight', component: NguiHighlightPipeTestComponent },\r\n        { path: 'utils/fire-event', component: FireEventTestComponent },\r\n        { path: '', redirectTo: '/inview/ngui-inview', pathMatch: 'full'}\r\n      ] // , { enableTracing: true } // debugging purposes only\r\n    )\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    InviewComponent,\r\n    InviewDirectiveTestComponent,\r\n    InviewPageComponent,\r\n    ListComponent,\r\n    VirtualListComponent,\r\n    AutocompleteComponent,\r\n    MyDynamicComponent,\r\n    DynamicComponentServiceTestComponent,\r\n    NguiHighlightPipeTestComponent,\r\n    FireEventTestComponent\r\n  ],\r\n  providers: [],\r\n  entryComponents: [MyDynamicComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","export {InviewComponent} from './inview-component';\nexport {InviewDirectiveTestComponent} from './inview-directive';\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  template: `\n    <h2>ngui-inview component test</h2>\n    <hr/>\n    List Of Images\n    <hr/>\n\n    <div *ngFor=\"let i of numArr\">\n      <ngui-inview> <!-- only displays when this is in viewport -->\n        <img *ngIf src=\"https://picsum.photos/800/300?image={{i}}\" height=\"33%\">\n      </ngui-inview>\n    </div>\n\n    <div class=\"num-images\">\n      Number of &lt;img> tag on document: {{ numImages }}\n    </div>\n  `,\n  styles: [`\n    ngui-inview {\n      min-height: 300px;\n    }\n    .num-images {\n      position: fixed; padding: 5px;\n      bottom: 0; right: 0; background: #333;color: #fff;\n    }\n  `]\n})\nexport class InviewComponent {\n  get numImages(): number {\n    return this.element.nativeElement.querySelectorAll('img').length;\n  }\n\n  numArr = Array.from(Array(100), (_, x) => x);\n  trackBy = (index, item) => item;\n\n  constructor(public element: ElementRef) {}\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <h2>(nguiInview) (nguiOutview) directive test</h2>\r\n\r\n    <div style=\"height: 800px; border: 1px solid #ccc\">\r\n    This is filler element to push down the greyed element. <br/>\r\n    Scroll down to see how message reacts to when the greyed\r\n    element is in viewport and out of viewport.\r\n    <div style=\"text-align: center; font-size: 200px\">&#8595;</div>\r\n    <div style=\"text-align: center; font-size: 200px\">&#8595;</div>\r\n    <div style=\"text-align: center; font-size: 200px\">&#8595;</div>\r\n    </div>\r\n\r\n    <div style=\"background: #ccc\"\r\n      (nguiInview)=\"message='nguiInview'\"\r\n      (nguiOutview)=\"message='nguiOutview'\">\r\n      If this is in viewport, message is 'nguiInview'. <br/>\r\n      If this is out ot viewport, message is 'nguiOutview'. <br/>\r\n    </div>\r\n\r\n    <div class=\"message\"> {{ message }} </div>\r\n  `,\r\n  styles: [`\r\n    div {padding: 12px}\r\n    .message { position: fixed; padding: 5px; bottom: 0; left: 50%; background: #333;color: #fff; }\r\n  `]\r\n})\r\nexport class InviewDirectiveTestComponent {\r\n  message: string;\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { NguiAutocompleteComponent } from '../../../modules/list';\r\nimport { of } from 'rxjs/internal/observable/of';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <h2>ngui-autocomplete component test</h2>\r\n\r\n    <input id=\"search\" [formControl]=\"search\" />\r\n\r\n    <ngui-autocomplete for=\"search\" #autocomplete\r\n      (bottomInview)=\"loadList()\"\r\n      (selected)=\"selected($event)\"\r\n      (escaped)=\"escaped()\">\r\n      <ng-template #items let-items=\"items\" let-keyword=\"keyword\">\r\n        <div *ngIf=\"!items\">Loading</div> <!-- loading text -->\r\n        <ngui-list-item [item]=\"item\" *ngFor=\"let item of items; trackBy: id\">\r\n          <span [innerHTML]=\"item.value\"></span>\r\n        </ngui-list-item>\r\n      </ng-template>\r\n    </ngui-autocomplete>\r\n  `,\r\n  styles: [`\r\n    ngui-list-item {display: block}\r\n  `]\r\n})\r\nexport class AutocompleteComponent {\r\n\r\n  @ViewChild('autocomplete') autocomplete: NguiAutocompleteComponent;\r\n\r\n  numPage = 0;\r\n  search = new FormControl();\r\n\r\n  selected(obj): any {\r\n    console.log('selected() is called', obj);\r\n  }\r\n\r\n  escaped(): any {\r\n    console.log('escaped() is called');\r\n  }\r\n\r\n  loadList(): void {\r\n    console.log('AutoCompleteComponent.loadList is called();');\r\n    const keyword = this.autocomplete.inputEl.value;\r\n    const items = Array(50).fill(0).map(() => {\r\n        return {id: 1, value: `foo${keyword}bar`};\r\n    });\r\n    of(items).pipe(\r\n        delay(500)\r\n    ).subscribe(result => {\r\n      this.autocomplete.addList(result);\r\n      // this.autocomplete.addList([]);\r\n      this.numPage++;\r\n    });\r\n  }\r\n}\r\n","export {InviewPageComponent} from './inview-page-component';\nexport {ListComponent} from './list-component';\nexport {VirtualListComponent} from './virtual-list-component';\nexport {AutocompleteComponent} from './autocomplete-component';\n","import { ChangeDetectionStrategy, Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <h2>ngui-inview-page component test</h2>\r\n\r\n    <h3>[items] and [template] not given</h3>\r\n    <ngui-inview-page id=\"item-template-missing\"></ngui-inview-page>\r\n\r\n    <h3>[items] not given</h3>\r\n    <ngui-inview-page id=\"items-missing\">\r\n      <ng-template let-items=\"items\">template without [items]</ng-template>\r\n    </ngui-inview-page>\r\n\r\n    <h3>[template] not given</h3>\r\n    <ngui-inview-page id=\"templaxte-missing\" [items]=\"items\"></ngui-inview-page>\r\n\r\n    <h3>[item] and [template] given</h3>\r\n    <ngui-inview-page id=\"item-template-given\" style=\"border:1px solid #ccc\" [items]=\"items\">\r\n      <ng-template let-items=\"items\">\r\n        <div *ngIf=\"items; else noItems\">\r\n          <li *ngFor=\"let num of items\">row number: {{ num }}</li>\r\n        </div>\r\n      </ng-template>\r\n    </ngui-inview-page>\r\n\r\n    <h3>filler</h3>\r\n    <div style=\"height: 800px; border: 1px solid #ccc\">\r\n      This is filler to make the above item out of view.<br/>\r\n      Please scroll down to the bottom of the page.\r\n      <div style=\"text-align: center; font-size: 200px\">&#8595;</div>\r\n    </div>\r\n\r\n    <div class=\"num-elements\">\r\n      Number of &lt;li> tag on document: {{ numElements }}\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .num-elements {\r\n      position: fixed; padding: 5px;\r\n      bottom: 0; left: 50%; background: #333;color: #fff;\r\n    }\r\n  `]\r\n})\r\nexport class InviewPageComponent {\r\n  get numElements(): number {\r\n    return this.element.nativeElement.querySelectorAll('li').length;\r\n  }\r\n\r\n  items = Array.from(Array(50), (_, x) => x);\r\n  constructor(public element: ElementRef) {}\r\n}\r\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  template: `\n    <ngui-list (selected)=\"selected($event)\" (escaped)=\"escaped()\">\n      <ngui-list-item *ngFor=\"let item of items\" [item]=\"item\">\n        <span [innerHTML]=\"item.value | nguiHighlight:'val'\"></span>\n      </ngui-list-item>\n    </ngui-list>`,\n   styles: [`\n     ngui-list-item { display: block; }\n     .ngui-highlight { font-weight: bold; }\n   `],\n   encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent  {\n  items = (new Array(10)).fill(0).map((_, i) => ({id: i, value: `value ${i}`}));\n\n  selected(item): void {\n    console.log('item selected', item);\n  }\n\n  escaped(): void {\n    console.log('escaped from list');\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\r\n\r\nimport { NguiVirtualListComponent } from '../../../modules/list';\r\nimport { of } from 'rxjs/internal/observable/of';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <h2>ngui-virtual-list component test</h2>\r\n\r\n    <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n      <ng-template let-items=\"items\">\r\n        <div *ngIf=\"!items\">Loading</div>\r\n        <ngui-list-item *ngFor=\"let num of items; trackBy: num\">\r\n          row number: {{ num }}\r\n        </ngui-list-item>\r\n      </ng-template>\r\n    </ngui-virtual-list>\r\n\r\n    <div class=\"num-elements\">\r\n      Number of all elements on document: {{ numDomElements }}\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    ngui-list-item {display: block}\r\n    .num-elements {\r\n      position: fixed; padding: 5px;\r\n      bottom: 0; left: 50%; background: #333;color: #fff;\r\n    }\r\n  `]\r\n})\r\nexport class VirtualListComponent {\r\n\r\n  @ViewChild('autocomplete') autocomplete: NguiVirtualListComponent;\r\n\r\n  get numDomElements(): number {\r\n    return this.element.nativeElement.querySelectorAll('*').length;\r\n  }\r\n\r\n  totalPage = 0;\r\n\r\n  constructor(public element: ElementRef) {}\r\n\r\n  loadItems(virtualList: any): void {\r\n    const items: Array<any> = Array.from(Array(50), (_, x) => (this.totalPage * 50) + x);\r\n    of(items).pipe(\r\n        delay(1000)\r\n    ).subscribe(result => {\r\n      console.log('VirtualListComponent.loadItems() is called');\r\n      virtualList.addList(result);\r\n      this.totalPage++;\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { DynamicComponentService } from '../../../modules/utils';\r\n\r\n// component 1\r\n@Component({\r\n  template: `\r\n    <div>\r\n      This is MyComponent({{ id }}), which is inserted dynamically.\r\n      <a href=\"javascript:void(0)\" (click)=\"remove.emit()\">Remove</a>\r\n    </div>\r\n  `\r\n})\r\nexport class MyDynamicComponent {\r\n  id: number;\r\n  @Output() remove: EventEmitter<any> = new EventEmitter();\r\n}\r\n\r\n// component 2\r\n@Component({\r\n  template: `\r\n    <h2>DynamicComponentService test</h2>\r\n\r\n    Components will be add into the following section.\r\n    <div #dynamic></div>\r\n    <button (click)=\"insertComponent()\">Insert MyComponent</button>\r\n  `,\r\n  styles: [`\r\n  `]\r\n})\r\nexport class DynamicComponentServiceTestComponent {\r\n  @ViewChild('dynamic', {read: ViewContainerRef}) containerRef: ViewContainerRef;\r\n\r\n  constructor(public dcs: DynamicComponentService) {}\r\n\r\n  insertComponent(): void {\r\n    const compRef = this.dcs.createComponent(MyDynamicComponent, this.containerRef);\r\n    this.dcs.insertComponent(compRef);\r\n    compRef.instance.remove.subscribe(() => compRef.destroy()); // dealing with @output\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\nimport { fireEvent } from '../../../modules/utils';\r\n\r\n@Component({\r\n  template: `\r\n    <div id=\"test-div\" style=\"border: 1px solid #ccc\"\r\n      (click)=\"myEvent($event)\"\r\n      (mousedown)=\"myEvent($event)\"\r\n      (mouseup)=\"myEvent($event)\"\r\n      (keydown)=\"myEvent($event)\"\r\n      (keyup)=\"myEvent($event)\"\r\n      (keypress)=\"myEvent($event)\"\r\n      (touchstart)=\"myEvent($event)\"\r\n      (touchmove)=\"myEvent($event)\"\r\n      (touchend)=\"myEvent($event)\">\r\n      <br/> Target:\r\n      <br/> #test-div(Event will be fire on this element)\r\n      <br/><br/>\r\n    </div>\r\n    Fire the following event programmtically on the target.\r\n    <div>\r\n      <button id=\"a1\" (click)=\"fireEventTo('#test-div', 'click')\">click</button>\r\n      <button id=\"a2\" (click)=\"fireEventTo('#test-div', 'mousedown')\">mousedown</button>\r\n      <button id=\"a3\" (click)=\"fireEventTo('#test-div', 'mouseup')\">mouseup</button>\r\n      <br/>\r\n      <button id=\"a4\" (click)=\"fireEventTo('#test-div', 'keydown', {key: 'Enter'})\">keydown</button>\r\n      <button id=\"a5\" (click)=\"fireEventTo('#test-div', 'keyup',  {key: 'Enter'})\">keyup</button>\r\n      <button id=\"a6\" (click)=\"fireEventTo('#test-div', 'keypress',  {key: 'Enter'})\">keypress</button>\r\n      <br/>\r\n      <button id=\"a7\" (click)=\"fireEventTo('#test-div', 'touchstart')\">touchstart</button>\r\n      <button id=\"a8\" (click)=\"fireEventTo('#test-div', 'touchmove')\">touchmove</button>\r\n      <button id=\"a9\" (click)=\"fireEventTo('#test-div', 'touchend')\">touchend</button>\r\n    </div>\r\n    Log:\r\n    <div id=\"log\">{{ message }}</div>\r\n  `\r\n})\r\nexport class FireEventTestComponent {\r\n  message: string;\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  fireEventTo(selector: string, type, options?): void {\r\n    const target = this.el.nativeElement.querySelector(selector);\r\n    fireEvent(target, type, options);\r\n  }\r\n\r\n  myEvent(event: any): void {\r\n    this.message = `${event['type']} event is fired on #${event.target.id}`;\r\n  }\r\n\r\n}\r\n","export {DynamicComponentServiceTestComponent} from './dynamic-component-service';\nexport {NguiHighlightPipeTestComponent} from './ngui-highlight';\nexport {MyDynamicComponent} from './dynamic-component-service';\nexport {FireEventTestComponent} from './fire-event';\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <h2>nguiHighlight pipe test</h2>\r\n    <div [innerHTML]=\"'nguiHighlight pipe highlights the given word' | nguiHighlight:'highlight'\"></div>\r\n  `,\r\n  // tslint:disable\r\n  styles: ['.ngui-highlight { color: red; font-weight: bold;}'],\r\n  // tslint:enable\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class NguiHighlightPipeTestComponent {\r\n}\r\n","export { NguiInviewModule } from './inview';\nexport { NguiListModule } from './list';\nexport { NguiUtilsModule } from './utils';\n","export { NguiInviewModule } from './src/ngui-inview.module';\n","import {\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  PLATFORM_ID,\r\n  Renderer2,\r\n  TemplateRef\r\n } from '@angular/core';\r\n\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n/**\r\n * An element that listens to viewport positioning and fires inView and notInview events\r\n * ### example\r\n * ```ts\r\n * <ngui-in-view [options]=\"myOptions\" (inView)=\"doA()\" (notInview)=\"doB()\">\r\n *   <img *ngIf src=\"https://picsum.photos/800/300?image=1>\r\n * </ngui-in-view>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview',\r\n  template: `\r\n    <ng-container *ngIf=\"isInview\" [ngTemplateOutlet]=\"template\">\r\n    </ng-container>\r\n  `,\r\n  styles: [':host {display: block;}']\r\n})\r\nexport class NguiInviewComponent implements OnInit, OnDestroy {\r\n  /** <ng-template> reference */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  /** IntersectionObserver options */\r\n  @Input() options: any = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\r\n  @Output() inview: EventEmitter<any> = new EventEmitter();\r\n  @Output() notInview: EventEmitter<any> = new EventEmitter();\r\n\r\n  observer: IntersectionObserver;\r\n  /** indicates that this element is in viewport */\r\n  isInview = false;\r\n  /** indicates that this element is 80% in viewport. Used by the default callback */\r\n  once80PctVisible = false;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Inject(PLATFORM_ID) private platformId: any) {}\r\n\r\n  /** Starts IntersectionObserver */\r\n  ngOnInit(): void {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.options);\r\n      this.observer.observe(this.element.nativeElement);\r\n    }\r\n  }\r\n\r\n  /** stop IntersectionObserver */\r\n  ngOnDestroy(): void {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n  /** fires (inview) and (notInview) events when this component is visible or not visible  */\r\n  handleIntersect(entries): void {\r\n    entries.forEach((entry: IntersectionObserverEntry) => {\r\n      if (entry['isIntersecting']) {\r\n        this.isInview = true;\r\n        this.defaultInviewHandler(entry);\r\n        this.inview.emit(entry);\r\n      } else {\r\n        this.notInview.emit(entry);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * default intersection handler, which sets blur dependes on intersection ratio\r\n   * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\r\n   */\r\n  defaultInviewHandler(entry): any {\r\n    if (this.once80PctVisible)        return false;\r\n    if (this.inview.observers.length) return false;\r\n\r\n    if (entry.intersectionRatio < 0.8) {\r\n      const opacity = entry.intersectionRatio * (1 / 0.8);\r\n      const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\r\n      const filter = `blur(${blur}px)`;\r\n      Object.assign(entry.target.style, {opacity, filter});\r\n    } else {\r\n       entry.target.style.opacity = 1;\r\n       entry.target.style.filter = 'unset';\r\n\r\n       this.once80PctVisible = true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  PLATFORM_ID,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n/**\r\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\r\n */\r\n@Directive({\r\n  selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\r\n})\r\nexport class NguiInviewDirective implements OnInit, OnDestroy {\r\n  observer: IntersectionObserver;\r\n\r\n  /** IntersectionObserver options */\r\n  @Input() options: any = {};\r\n\r\n  /** Event that will be fired when in viewport */\r\n  @Output() nguiInview: EventEmitter<any> = new EventEmitter();\r\n  /** Event that will be fired when out of  viewport */\r\n  @Output() nguiOutview: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    public element: ElementRef,\r\n    public renderer: Renderer2,\r\n    @Inject(PLATFORM_ID) private platformId: any) {\r\n  }\r\n\r\n  /** Starts IntersectionObserver */\r\n  ngOnInit(): void {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.options);\r\n      this.observer.observe(this.element.nativeElement);\r\n    }\r\n  }\r\n\r\n  /** Stops IntersectionObserver */\r\n  ngOnDestroy(): void {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer && this.observer.disconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires (nguiInview) event when this element is in viewport\r\n   *  and fires (nguiOutview) event when this element is not in viewport\r\n   */\r\n  handleIntersect(entries): void {\r\n    entries.forEach((entry: IntersectionObserverEntry) => {\r\n      if (entry['isIntersecting']) {\r\n        this.nguiInview.emit(entry);\r\n      } else {\r\n        this.nguiOutview.emit(entry);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NguiInviewComponent } from './ngui-inview.component';\nimport { NguiInviewDirective } from './ngui-inview.directive';\n\n@NgModule({\n  imports: [CommonModule], // should I import CommonModule?\n  declarations: [ NguiInviewComponent, NguiInviewDirective ],\n  exports: [NguiInviewComponent, NguiInviewDirective]\n})\nexport class NguiInviewModule {}\n","\nexport {\n  NguiListModule,\n  NguiAutocompleteComponent,\n  NguiVirtualListComponent\n} from './src/ngui-list.module';\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport { fireEvent } from '../../utils';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NoMatchFound } from './no-match-found';\r\nimport { NoneSelect } from './none-select';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\n\r\n@Component({\r\n  selector: 'ngui-autocomplete',\r\n  template: `\r\n    <div *ngIf=\"isReady\" class=\"ngui-autocomplete\">\r\n      <div #pages></div>\r\n      <ngui-inview (inview)=\"addMorePages()\"></ngui-inview>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\r\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\r\n  `]\r\n})\r\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\r\n  @Input() for: string; // input tag id\r\n  @Input() minInputChars = 1;\r\n  @Input() blankOption = 'Select One';\r\n  @Input() noMatchItem = 'No Match Found';\r\n\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  inputEl: HTMLInputElement;\r\n  _focused: any = {input: false, listItem: false};\r\n  _focusTimer;\r\n  _acTimer;\r\n  _selectedFromList: boolean;\r\n  _escapedFromList: boolean;\r\n  _orgInputValue: string;\r\n  _prevInputValue: string;\r\n  _lastSelected: any;\r\n\r\n  /**\r\n   * returns autocomplete display condition\r\n   * autocompolete list is only visible\r\n   *   - when input element is focused or list element is focused\r\n   *   - when input value has enought characters\r\n   *   - and user just did not selected or escaped\r\n   */\r\n  get isReady(): boolean {\r\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\r\n    const focused = this._focused.input || this._focused.listItem;\r\n    const minChars = this.inputEl.value.length >= this.minInputChars;\r\n\r\n    return (!selectedOrEscaped && focused && minChars);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.inputEl = <HTMLInputElement> document.querySelector('#' + this.for); // tslint:disable-line\r\n    this.positionThisUnderInputEl();\r\n\r\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\r\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\r\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\r\n    this.selected.subscribe(this.onSelected.bind(this));\r\n    this.escaped.subscribe(this.onEscaped.bind(this));\r\n  }\r\n\r\n  onSelected(value): void {\r\n    this._selectedFromList = true;\r\n    this.inputEl.focus();\r\n    this._lastSelected = value;\r\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onSelected() is called', value);\r\n  }\r\n\r\n  onEscaped(): void {\r\n    this._escapedFromList = true;\r\n    this.inputEl.focus();\r\n    if (!this._lastSelected) {\r\n      this.inputEl.value = this._orgInputValue;\r\n    }\r\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onEscaped() is called');\r\n  }\r\n\r\n  onInputElFocused(event): void {\r\n    console.log('NguiAutoCompleteComponent.onInputElFocused() is called', event);\r\n    this.isListLoading = false;\r\n    if (typeof this._orgInputValue === 'undefined') {\r\n      this._orgInputValue = this.inputEl.value;\r\n    }\r\n    this._prevInputValue = this.inputEl.value;\r\n    this.setFocused('input', true);\r\n  }\r\n\r\n  onInputElBlurred(): void {\r\n    this.setFocused('input', false);\r\n  }\r\n\r\n  clearList(): void {\r\n    this.inviewPages.forEach(compRef => {\r\n      compRef.destroy();\r\n    });\r\n    this.inviewPages = [];\r\n  }\r\n\r\n  onInputElKeyup(event: KeyboardEvent): void {\r\n    console.log('NguiAutoCompleteComponent.onInputKeyup() is called', event.key);\r\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\r\n    if (event.key === 'Enter' || event.key === 'Escape') {\r\n      if (firstList) {\r\n        fireEvent(firstList, 'keyup', {key: event.key});\r\n      } else {\r\n        this.onEscaped();\r\n      }\r\n    } else if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\r\n      firstList && firstList.focus();\r\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n      //\r\n    } else if (this.inputEl.value.length >= this.minInputChars) {\r\n      this._selectedFromList = false;\r\n      this._escapedFromList = false;\r\n      this.addAutocompleteList();\r\n    }\r\n  }\r\n\r\n  /** Complete the first page of autocomplete */\r\n  addAutocompleteList(): void {\r\n    if (this.isReady) {\r\n      clearTimeout(this._acTimer);\r\n      this._acTimer = setTimeout(() => {\r\n        this.isListLoading = false; // ???????/\r\n        this._prevInputValue = this.inputEl.value;\r\n        this._escapedFromList = false;\r\n        this._selectedFromList = false;\r\n        this.clearList();\r\n        this.addAnInviewPageToPages();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\r\n  addMorePages(): void {\r\n    console.debug('NguiAutocompleteComponent.addMorePages() is called.');\r\n    if (this.inviewPages.length) {\r\n      this.addAnInviewPageToPages();\r\n    } else {\r\n      console.debug('skipping addMorePages');\r\n    }\r\n  }\r\n\r\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\r\n    if (val) {\r\n      clearTimeout(this._focusTimer);\r\n      this._focused = {input: false, listItem: false};\r\n      this._focused[elType] = true;\r\n    } else {\r\n      this._focusTimer = setTimeout(() => {\r\n        this._focused[elType] = false;\r\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  positionThisUnderInputEl(): void {\r\n    const thisEl = this.element.nativeElement;\r\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\r\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\r\n\r\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\r\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\r\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    console.log('>>>>>> NguiAutocompleteComponent.addList() is called()');\r\n    this.isListLoading = false;\r\n\r\n    // TODO: ........ for 1st page only, show no match found or blank option\r\n    let noMatchItem: any;\r\n    let blankItem: any = {};\r\n    if (this.inviewPages.length === 1) {\r\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\r\n        noMatchItem = new NoMatchFound();\r\n        blankItem.html = this.noMatchItem;\r\n      } else if (this.blankOption) {\r\n        blankItem = new NoneSelect();\r\n        blankItem.html = this.blankOption;\r\n      }\r\n    }\r\n\r\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\r\n    this.inviewPage.instance.setItems(allItems);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * A block of component that listens to inView and outView events,\r\n * so that it empties contents when out of view after backup items\r\n * and restores the contents when in view\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-inview-page [items]=\"items\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"items else noItems\">\r\n *       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *     </div>\r\n *   </ng-template>\r\n * </ngui-inview-page>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview-page',\r\n  template: `\r\n    <div class=\"inview-page contents\"\r\n      (nguiInview)=\"restoreItems()\"\r\n      (nguiOutview)=\"emptyItems()\">\r\n      <!-- add blank ngui-list-item by condition  -->\r\n      <!-- no match found ngui-list-item by condition -->\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"template||defaultTemplate\"\r\n        [ngTemplateOutletContext]=\"{items: items, outView: outView}\">\r\n      </ng-container>\r\n      <div *ngIf=\"outView\">{{ itemsBackup.length }} items hidden</div>\r\n    </div>\r\n\r\n    <ng-template #defaultTemplate>\r\n      <div *ngIf=\"!items\"> Error: requires [items] </div>\r\n      <div *ngIf=\"!template\"> Error: requires &lt;ng-template></div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Allow users to change the contents */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  // @Input('template') template: TemplateRef<any>;\r\n\r\n  /** List of elements that are used to render this element */\r\n  @Input() items: Array<any>;\r\n\r\n  /** IntersectionObserver options */\r\n  options: any;\r\n  /** Indicates that the page of out of viewport */\r\n  outView = false;\r\n  /** The copy of items. This is set when this element is out of viewport */\r\n  itemsBackup: Array<any> = [];\r\n  /**\r\n   * The first element of this component.\r\n   * The height of it remains the same even when items get empty out.\r\n   */\r\n  contentsEl: HTMLElement;\r\n  destroyed: boolean;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    private cdRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  /**\r\n   * Restore items when in viewport, so that elements are rendered\r\n   */\r\n  restoreItems(): void {\r\n    if (this.outView) {\r\n      this.outView = false;\r\n      this.items = Array.from(this.itemsBackup || []);\r\n      this.itemsBackup = undefined;\r\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contentsEl =\r\n      this.element.nativeElement.querySelector('.inview-page.contents');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\r\n    this.destroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Empty items when not in viewport, so that elements are not rendered\r\n   */\r\n  emptyItems(): void {\r\n    if (this.items && this.contentsEl && !this.outView) {\r\n      // set height before emptying contents\r\n      const height = this.element.nativeElement.getBoundingClientRect().height;\r\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\r\n\r\n      this.outView = true;\r\n      this.itemsBackup = Array.from(this.items || []);\r\n      this.items = undefined;\r\n      if (!this.destroyed) {\r\n        this.cdRef.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  setItems(items: Array<any>): void {\r\n    if (!this.destroyed) {\r\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\r\n      this.items = items;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NguiListDirective } from './ngui-list.directive';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\r\nimport { NoneSelect } from './none-select';\r\nimport { NoMatchFound } from './no-match-found';\r\n\r\n// tabindex, keydown, keyup(ENTER, ESC), click\r\n@Directive({\r\n  selector: 'ngui-list-item' // tslint:disable-line\r\n})\r\nexport class NguiListItemDirective implements OnInit {\r\n  @Input('item') object: any; // tslint:disable-line\r\n\r\n  nextSibling: HTMLElement;\r\n  prevSibling: HTMLElement;\r\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private viewContainer: ViewContainerRef,\r\n    @Optional() @Host() private listDirective: NguiListDirective,\r\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\r\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\r\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\r\n    if (!this.parentListComp) {\r\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\r\n    }\r\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\r\n      this.viewContainer.clear();\r\n      this.el.nativeElement.innerHTML = this.object.html;\r\n    }\r\n  }\r\n\r\n  // handles keyboard up, down, left, right\r\n  @HostListener('keydown', ['$event']) keydown(event): void {\r\n    const thisListItem = this.el.nativeElement;\r\n    const keyCode = event.which || event.keyCode;\r\n    const parentListEl = this.parentListComp.element.nativeElement;\r\n    const listItems: Array<HTMLElement>\r\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\r\n    const listItemNdx = listItems.indexOf(thisListItem);\r\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\r\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\r\n\r\n    switch (keyCode) {\r\n      case 37: case 38: // up arrow, left arrow\r\n        prevListItem.focus();\r\n        break;\r\n      case 39: case 40: // down arrow, right arrow\r\n        nextListItem.focus();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // handles keyboard enter(13), esc(27)\r\n  @HostListener('keyup', ['$event']) keyup(event): void {\r\n    switch (event.key) {\r\n      case 'Enter':\r\n        this.parentListComp.selected.emit(this.object);\r\n        break;\r\n      case 'Escape':\r\n        this.parentListComp.escaped.emit();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) mousedown(event): void {\r\n    this.parentListComp.selected.emit(this.object);\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) focused(event): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', true);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur', ['$event']) blurred(event): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', false);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ngui-list' // tslint:disable-line\r\n})\r\nexport class NguiListDirective {\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public element: ElementRef) { }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NguiInviewModule } from '../../inview';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiListItemDirective } from './ngui-list-item.directive';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule // for (nguiInview) and (nguiOutview)\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {}\n\nexport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nexport { NguiVirtualListComponent } from './ngui-virtual-list.component';\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponentService } from '../../utils';\r\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\r\n\r\n/**\r\n * Virtual List\r\n *\r\n * The `<ngui-inview ..>` inserts <ngui-inview-page> into\r\n * `<div #pages>` when it is in viewport\r\n * When it's inserted, it will be pushed down, which makes it out of viewport.\r\n * User scrolls down to see the bottom of the list,\r\n * then it will insert another `<ngui-inview-page>` again.\r\n *\r\n * <ngui-inview-page> listens to (nguiInview) and (nguiOutview) events,\r\n * when <ngui-inview-page> is out of view port, it empties out the contents.\r\n * and it restores back the contents when it is in viewport again.\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"!items\">Loading</div>\r\n *     <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *   </ng-template>\r\n * </ngui-virtual-list>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-virtual-list',\r\n  template: `\r\n    <div class=\"ngui-virtual-list\"\r\n      (focus)=\"_focused = true\"\r\n      (click)=\"_focused = true\">\r\n      <!-- hold multiple <ngui-inview-page> -->\r\n      <div #pages></div>\r\n      <!-- insert <ngui-inview-page> into #pages -->\r\n      <ngui-inview (inview)=\"addAnInviewPageToPages()\"></ngui-inview>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiVirtualListComponent implements AfterViewInit {\r\n\r\n  /** the container NguiInviewPage will be inserted */\r\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Event fired when bottom of the virtual list is in view\r\n   * The handler of this event must call `$event.addItems(items: Array<any>)` to fill contents\r\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\r\n   *\r\n   * ### example\r\n   * ```ts\r\n   * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n   *   <ng-template let-items=\"items\">\r\n   *     <div *ngIf=\"items else noItems\">\r\n   *        <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n   *     </div>\r\n   *     <ng-template #noItems>Loading</ng-template>\r\n   *   </ng-template>\r\n   * </ngui-virtual-list>\r\n   * ```\r\n   */\r\n  @Output() bottomInview: EventEmitter<any> = new EventEmitter();\r\n\r\n  /** The last NguiInviewPageComponent being inserted */\r\n  inviewPage: ComponentRef<NguiInviewPageComponent>;\r\n  _focused = false;\r\n  /** Indicates if a page is still loading */\r\n  isListLoading: boolean;\r\n  inviewPages: Array<ComponentRef<NguiInviewPageComponent>> = [];\r\n\r\n  constructor(\r\n    public renderer: Renderer2,\r\n    public element: ElementRef,\r\n    public dynamicComponentService: DynamicComponentService,\r\n    public cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /** Check if necessary input and output is provided */\r\n  ngAfterViewInit(): void {\r\n    if (!this.template || !this.bottomInview.observers.length) {\r\n      console.error('<ngui-virtual-list> requires [template] and {bottomInview)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the bottom is inview port, this function is called\r\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\r\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\r\n   */\r\n  addAnInviewPageToPages(): void {\r\n    if (!this.isListLoading) {\r\n      this.isListLoading = true;\r\n\r\n      this.inviewPage =\r\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\r\n      this.dynamicComponentService.insertComponent(this.inviewPage);\r\n\r\n      this.inviewPage.instance.template = this.template;\r\n      this.inviewPages.push(this.inviewPage);\r\n\r\n      this.bottomInview.emit(this); // fire event, so that user can load items\r\n    } else {\r\n      console.log('Already a page being inserted, skipping adding a page');\r\n    }\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    this.isListLoading = false;\r\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\r\n    this.inviewPage.instance.setItems(items);\r\n  }\r\n\r\n}\r\n","export class NoMatchFound {\n  html = 'No Match Found';\n}\n","export class NoneSelect {\n  html = 'Select';\n}\n","export { DynamicComponentService } from './src/dynamic-component.service';\nexport { konsole } from './src/konsole';\nexport { fireEvent } from './src/fire-event';\n\nexport { NguiUtilsModule } from './src/ngui-utils.module';\n","/**\r\n * Insert a component dynamically using a service\r\n *\r\n * ### Example\r\n * ```ts\r\n * import { DynamicComponentService } from './dynamic.component.service';\r\n * import { MyDynamicComponent } from './my-1.component';\r\n *\r\n * @Component({\r\n *   template: ` ... <div #dymamic></div>`\r\n * })\r\n * export class MyComponent {\r\n *   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\r\n *\r\n *   constructor(public dcs: DynamicComponentService) {}\r\n *\r\n *   insertComp() {\r\n *     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\r\n *     ths.dcs.insertComonent(cmpRef);\r\n *     compRef.instance.items = [1,2,3];              // dealing with @input\r\n *     compRef.instance.output$.subscribe(val => {}); // dealing with @output\r\n *   }\r\n * }\r\n * ```\r\n */\r\nimport {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * Provide service to add or remove component dynamically\r\n */\r\n@Injectable()\r\nexport class DynamicComponentService {\r\n  /** used to create a factory from a component class */\r\n  factoryResolver: ComponentFactoryResolver;\r\n  /** defines where a dynamic components insert into */\r\n  rootViewContainer: ViewContainerRef;\r\n\r\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\r\n    this.factoryResolver = factoryResolver;\r\n  }\r\n\r\n  /**\r\n   * returns component reference\r\n   * The reason to seperate `createCompnent` and `insertComponent` is\r\n   * to allow some actions before we insert into a hostView.\r\n   * e.g styling, setting attributes, etc\r\n   */\r\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef<any> {\r\n    this.rootViewContainer = into || this.rootViewContainer;\r\n    const factory = this.factoryResolver.resolveComponentFactory(component);\r\n\r\n    return factory.create(this.rootViewContainer.parentInjector);\r\n  }\r\n\r\n  /**\r\n   * insert component\r\n   */\r\n  insertComponent(componentRef: ComponentRef<any>): Component {\r\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\r\n    componentRef.location.nativeElement.setAttribute('id', compId);\r\n    componentRef.instance.id = compId;\r\n\r\n    this.rootViewContainer.insert(componentRef.hostView);\r\n\r\n    return componentRef.instance;\r\n  }\r\n\r\n}\r\n","/**\r\n * fire the given event with options on the element\r\n * @example\r\n * fireEvent(el, 'click');\r\n * fireEvent(el, 'keypress', {key: 'Enter'});\r\n */\r\nexport function fireEvent(el: HTMLElement, type: string, options: any = {}): boolean {\r\n  let event;\r\n  if (type === 'click' || type.match(/^mouse/)) {\r\n    event = new MouseEvent(type, options);\r\n  } else if (type.match(/^key/)) {\r\n    event = new KeyboardEvent(type, options);\r\n  } else if (type.match(/^touch/)) {\r\n    event = new TouchEvent(type, options);\r\n  }\r\n\r\n  return el.dispatchEvent(event);\r\n}\r\n","/**\n * window.konsole alternative\n * ### example\n * ```\n * konsole.setLogLevel('error');\n * konwole.log(1,2,3,4,5);\n * ```\n */\nexport abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array<any>): void {\n    this.toLog('DEBUG') && console.debug.apply(console, arguments);\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array<any>): void {\n    this.toLog('LOG') && console.log.apply(console, arguments);\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array<any>): void {\n    this.toLog('INFO') && console.info.apply(console, arguments);\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array<any>): void {\n    this.toLog('WARN') && console.warn.apply(console, arguments);\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array<any>): void {\n    this.toLog('ERROR') && console.error.apply(console, arguments);\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `<span class=\"ngui-highlight\">${match}</span>`);\n    }\n\n    return ret;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DynamicComponentService } from './dynamic-component.service';\nimport { NguiHighlightPipe } from './ngui-highlight.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule {}\n"],"sourceRoot":""}